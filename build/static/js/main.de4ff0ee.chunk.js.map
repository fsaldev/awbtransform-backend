{"version":3,"sources":["Component/User.tsx","shared/baseUrl.tsx","services/registerApi.ts","Component/NavbarCareer.tsx","Component/Footer.tsx","Component/SignUp.tsx","services/commonresult.ts","services/logInApi.ts","Component/SignIn.tsx","Common/styleClasses.tsx","Common/CommonVariables.tsx","services/fileUploadApi.ts","services/updateApi.ts","Component/SubComponents/ReactHookFormSelect.tsx","Component/DynamicAddition/DynamicAddressComponent.tsx","Component/DynamicAddition/DynamicEmploymentHistoryComponent.tsx","Component/DynamicAddition/DynamicDrivingExperienceComponent.tsx","Component/DynamicAddition/DynamicEmploymentAccidentHistoryComponent.tsx","Component/DynamicAddition/DynamicTrafficConvictions.tsx","Component/DynamicAddition/DynamicDriverLicense.tsx","Component/DynamicAddition/DynamicReferences.tsx","Component/EmpApplicationForm3.tsx","Component/SubComponents/RadioQuestions.tsx","Component/SubComponents/AddressesComponent.tsx","Component/EmpApplicationForm1.tsx","Component/EmpApplicationForm2.tsx","Component/EmpApplicationForm4.tsx","Component/EmpApplicationForm5.tsx","assets/images/drug and alcohol policy snapshot 1.jpg","Component/EmpApplicationForm6.tsx","Component/EmpApplicationForm7.tsx","Component/EmploymentApplicationForm.tsx","Component/MainNavBar.tsx","Component/Header.tsx","Component/Services.tsx","Component/Portfolio.tsx","Component/About.tsx","Component/Team.tsx","Component/Clients.tsx","Component/Contacts.tsx","Component/MainPage.tsx","Component/ApplyDriver.tsx","Component/CareerOpportunities.tsx","Component/logout.tsx","Component/LayoutWithResposiveNavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["user_data","React","createContext","baseUrl","register","data","a","fetch","method","body","JSON","stringify","headers","res","json","resultData","console","log","CreateNavItem","href","text","NavItem","className","to","NavbarCareer","props","state","isOpen","backgroundColor","paddingTop","paddingBottom","toggle","bind","this","setState","links","addLogout","pop","push","id","style","paddingRight","NavbarBrand","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","map","link","Component","Footer","SignUp","handleChange","event","preventDefault","target","name","value","errors","user_name","length","email","test","password","c_password","Object","assign","handleSubmit","validity","values","forEach","val","goto_login","error","toggle_pass","toggle_c_pass","margin","onSubmit","noValidate","htmlFor","type","onChange","color","withRouter","processResult","applicantdateofbirth","Date","$date","toISOString","split","dateofBirth","physicalExamExpirationDate","employmentHistoryfrom","employmentHistoryTo","experienceToDate","experienceFromDate","dateOfAccident","dateOfViolation","lastYearAddressfrom","lastYearAddressTo","employeeDate","signin","Login","context","setUserData","contextType","styleClasses","useStyles","makeStyles","theme","createStyles","root","flexGrow","paper","palette","secondary","padding","addressPaper","textAlign","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","secondaryHeading","input","display","formControl","spacing","minWidth","default","paperProminantStyle","elevation","questionTextStyle","smallHeading","textJustify","caption","RequireError","states","driverLicenseDummyElement","stateOfLicence","licenceNumber","licenceType","licenceEndoresment","licenceExpirationDate","trafficConvictionDummyElement","LocationOfViolation","ViolationCharge","ViolationPenalty","reqBits","fileUploadApi","update","ReactHookFormSelect","labelId","nameVal","FormControl","variant","size","InputLabel","label","as","Select","children","control","defaultValue","addr","lastYearAddress","lastYearAddressCity","lastYearAddressState","lastYearAddressZipCode","DynamicAddressComponent","classes","forms","reset","trigger","setError","useFieldArray","addressId","fields","append","remove","prepend","swap","move","insert","Fragment","Grid","container","direction","justify","alignItems","item","index","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","xs","TextField","inputRef","required","MenuItem","object","i","helperText","Divider","AccordionActions","justifyContent","Button","e","empHstry","employmentHistorystatus","employmentHistoryposition","employmentHistoryaddress","employmentHistorycompanyPhone","employmentHistoryreasonForLeaving","employmentHistorysubjecttotheFMCSRs","employmentHistorydrugandalcoholTesting","DynamicEmploymentHistoryComponent","useForm","idPrefix","message","RadioQuestions","question","optionList","optionValue","xsSize","defaultSelected","isReq","dummyData","experienceclassofEquipment","experiencenumberOfMiles","DynamicDrivingExperienceComponent","aria-controls","DynamicEmploymentAccidentHistoryComponent","numberofFatalities","numberofPeopleleInjured","NatureOfAccidents","multiline","rows","LocationOfAccidents","dummy","DynamicTrafficConvictions","DynamicDriverLicense","DynamicReferences","UdpatedEmploymentHistoryList","UpdateDrivingExperienceList","EmploymentAccidentHistoryList","TrafficConvictionsList","DriverLicenseList","ReferencesList","EmpApplicationForm3","Forms","defaultValues","sigPad","useRef","base64SignatureImage","current","isEmpty","getTrimmedCanvas","toDataURL","signature","resdata","handler","Container","Paper","marginBottom","undefined","companyName","companyAddress","companyCity","companyState","companyPostCode","applicationApplyDate","toUpperCase","applicationApplyAsPosition","applicantfirstName","applicantLastName","applicantPhoneNumber","pattern","WrongPatternError","emergencyContactfirstName","emergencyContactlastName","emergencyContactNumber","age","setAddresses","updatedAddresses","addressesList","applicantAddresses","cityId","stateId","zipCodeId","fromDateId","toDateId","everWorkedForCompany","applicantSchoolGrade","applicantCollegeGrade","applicantPostGraduateGrade","employmentHistoryList","employmentHistory","setEmploymentHistoryList","udpatedEmploymentHistory","drivingExperienceList","employmentExperienceHistory","setDrivingExperienceList","updateDrivingExperiences","lastFiveYearStatesOperate","Listspecialcourses","ListanySafeDrivingAwards","employmentAccidentHistoryList","employmentAccidentsHistory","setEmploymentAccidentHistoryList","updateEmploymentAccidentHistories","trafficConvictionsList","settrafficConvictionsList","updateTrafficConvictions","dirverLicenseList","setdirverLicenseList","updateDriverLicense","answerToAnyQuestion","referenceList","setReferenceList","updateReferences","paddingLeft","align","penColor","ref","canvasProps","width","height","clear","component","rules","RadioGroup","row","optionItem","FormControlLabel","Radio","FormHelperText","AddressesComponent","useState","addressesState","addressesStateHandler","useEffect","address","addrNew","addressesStateNew","splice","UpdateAddressesList","startTimeVal","classAExperienceLevelVal","EmpApplicationForm1","manualStates","setManualStates","preLoadedValues","first_name","last_name","phone_number","socialSecurity","city","zipCode","lastThreeYearResidenceCheck","addresses","startTime","hearAbout","eligibletoWorkInUnitedState","classAExperienceLevel","willingForDrugTest","setData","marginTop","classNames","orientation","resume1","resume2","accept","files","formData","FormData","EmpApplicationForm2","gender","veteranStatus","EmpApplicationForm4","EmpApplicationForm5","EmpApplicationForm6","alcoholTestEmployeeSignature","drug_and_alcohol_policy_snapshot_1","listStyleType","start","EmpApplicationForm7","employeeSignature","newEmployeerAddress","newEmployeerCity","newEmployeerState","newEmployeerpostalCode","prevEmployeerAddress","prevEmployeerCity","prevEmployeerState","prevEmployeerpostalCode","employeeAlcoholTestRateHigher","employeeverifiedDrugTest","employeerefuseTest","employeeotherViolations","prevEmployeeReportDrug","answeredYes","EmploymentApplication","formCounter","gotoNextForm","gotoPreviousForm","withStyles","withTheme","activeClass","spy","smooth","duration","Navbar","ref1","onScroll1","y","window","scrollY","pageYOffset","createRef","addEventListener","removeEventListener","items","header","key","Header","UncontrolledCarousel","autoPlay","Services","Portfolio","data-toggle","About","textDecoration","cursor","Team","Clients","Contacts","placeholder","data-validation-required-message","MainPage","ApplyDriver","Career","Logout","drawerWidth","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","LayoutWithResposiveNavBar","useTheme","open","Drawer","anchor","List","ListItem","button","ListItemIcon","ListItemText","primary","clsx","paragraph","App","setuserData","Provider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de4ff0ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const user_data = React.createContext(\r\n  {}  \r\n);","export const baseUrl = \"http://awbtransport.com\";\r\n// export const baseUrl = \"http://localhost:5000\";\r\n","import {SignUpState} from \"../Component/SignUp\";\r\nimport {Result} from \"../interfaces/registerinterface\";\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\n\r\nexport async function register(data: SignUpState ) {\r\n    let res;\r\n    try {\r\n            res = await fetch(baseUrl+\"/api/register\", {\r\n            method:'PUT',\r\n            body:JSON.stringify(data),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n            }) ;\r\n            const resultData = await res.json() as Result;\r\n            return resultData;\r\n    } catch (ex) {\r\n        console.log(\"exception\", ex);\r\n        return ex;\r\n    }\r\n}","import React, { Component, RefObject } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar as ReactStrapNavbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n} from \"reactstrap\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\ntype createNavItemProps = {\r\n  href: string;\r\n  text: string;\r\n};\r\n\r\nconst CreateNavItem = ({ href, text }: createNavItemProps) => (\r\n  <NavItem className=\"nav-item\">\r\n    <RouterLink className=\"nav-link \" to={href}>\r\n      {text}\r\n    </RouterLink>\r\n  </NavItem>\r\n);\r\n\r\ntype NavbarState = {\r\n  isOpen: boolean;\r\n  backgroundColor: string;\r\n  paddingTop: string;\r\n  paddingBottom: string;\r\n};\r\n\r\ntype NavbarProps = {\r\n  addLogout: Boolean;\r\n};\r\n\r\nexport default class NavbarCareer extends Component<NavbarProps, NavbarState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      backgroundColor: \"#212529\",\r\n      paddingTop: \"0.5rem\",\r\n      paddingBottom: \"0.5rem\",\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const links = [\r\n      { href: \"/\", text: \"Home\" },\r\n      { href: \"/career\", text: \"Career Opportunities\" },\r\n      { href: \"/login\", text: \"Sign In\" },\r\n    ];\r\n    if (this.props.addLogout) {\r\n      links.pop();\r\n      links.push({ href: \"/logout\", text: \"Sign Out\" });\r\n    }\r\n    return (\r\n      <div>\r\n        <ReactStrapNavbar\r\n          className=\"navbar-expand-lg navbar-dark fixed-top\"\r\n          id=\"mainNav\"\r\n          style={{\r\n            backgroundColor: this.state.backgroundColor,\r\n            paddingTop: this.state.paddingTop,\r\n            paddingBottom: this.state.paddingBottom,\r\n            paddingRight: \"5%\",\r\n          }}\r\n        >\r\n          <NavbarBrand>\r\n            <img src=\"assets/img/navbar-logo.png\" alt=\"\" />\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle}></NavbarToggler>\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {links.map((link) => (\r\n                <CreateNavItem\r\n                  href={link.href}\r\n                  text={link.text}\r\n                  key={link.href}\r\n                />\r\n              ))}\r\n            </Nav>\r\n          </Collapse>\r\n        </ReactStrapNavbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      <footer className=\"footer py-4\">\r\n        <div className=\"container\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-lg-4 text-lg-left\">\r\n              Copyright © AWB Transport 2021\r\n            </div>\r\n            <div className=\"col-lg-4 my-3 my-lg-0\">\r\n              <a className=\"btn btn-dark btn-social mx-2\" href=\"#!\">\r\n                <i className=\"fab fa-twitter\"></i>\r\n              </a>\r\n              <a className=\"btn btn-dark btn-social mx-2\" href=\"#!\">\r\n                <i className=\"fab fa-facebook-f\"></i>\r\n              </a>\r\n              <a className=\"btn btn-dark btn-social mx-2\" href=\"#!\">\r\n                <i className=\"fab fa-linkedin-in\"></i>\r\n              </a>\r\n            </div>\r\n            <div className=\"col-lg-4 text-lg-right\">\r\n              <a className=\"mr-3\" href=\"#!\">\r\n                Privacy Policy\r\n              </a>\r\n              <a href=\"#!\">Terms of Use</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {Link as RouterLink, withRouter, Redirect, RouteComponentProps} from 'react-router-dom';\r\nimport {register} from \"../services/registerApi\";\r\nimport NavbarCareer from './NavbarCareer';\r\nimport Footer from './Footer';\r\nimport { Result } from \"../interfaces/registerinterface\";\r\nimport { user_data } from \"./User\";\r\n\r\nfunction isEmail(val: string) {\r\n    let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if(!regEmail.test(val)){\r\n      return false;\r\n    }\r\n    return true;\r\n}\r\nexport interface SignUpProps {\r\n    name?: any;\r\n    value?: any;\r\n}\r\nexport interface SignUpState {\r\n    user_name: string,\r\n    email: string,\r\n    password: string,\r\n    c_password: string,\r\n    toggle_pass: boolean,\r\n    toggle_c_pass: boolean,\r\n    errors: {\r\n        user_name: string,\r\n        email: string,\r\n        password: string,\r\n        c_password: string\r\n    },\r\n    goto_login: boolean\r\n}\r\n\r\nclass SignUp extends Component<RouteComponentProps<SignUpProps, any, unknown>, SignUpState, any>{\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        const initialState = {\r\n            user_name: '',\r\n            email: '',\r\n            password: '',\r\n            c_password: '',\r\n            toggle_pass: false,\r\n            toggle_c_pass: false,\r\n            errors: {\r\n                user_name: '',\r\n                email: '',\r\n                password: '',\r\n                c_password: ''\r\n            },\r\n            goto_login: false\r\n        }\r\n        this.state = initialState;\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange = (event: any) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        switch (name) {\r\n            case 'user_name':\r\n                if (value == '') {\r\n                    errors.user_name = 'user_name must be given';\r\n                }\r\n                else {\r\n                    errors.user_name = value.length < 5 ? 'user_name must be 5 characters long!' : '';\r\n                }\r\n                break;\r\n            case 'email':\r\n                if (value == '') {\r\n                    errors.email = 'Email Must Be given';\r\n                }\r\n                else {\r\n                    errors.email = isEmail(value) ? '' : 'Email is not valid!';\r\n                }\r\n\r\n                break;\r\n            case 'password':\r\n                if (value == '') {\r\n                    errors.password = 'Password Must Be given';\r\n                }\r\n                else {\r\n                    errors.password = value.length < 8 ? 'Password must be eight characters long!' : '';\r\n                }\r\n\r\n                break;\r\n            case 'c_password':\r\n                if (value == '') {\r\n                    errors.c_password = 'Confirm Password Must Be given';\r\n                }\r\n                else if (value.length < 8) {\r\n                    errors.c_password = 'Password must be eight characters long'\r\n                }\r\n                else if (value.length>8 && this.state.password !='' && this.state.password!=value) {\r\n                    console.log(this.state.password, value);\r\n                    errors.c_password = 'Password Not Match'\r\n                }\r\n                else{\r\n                    errors.c_password = ''; \r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState(Object.assign(this.state, { errors, [name]: value }));\r\n        // console.log(this.state.errors);\r\n    }\r\n\r\n    handleSubmit = async (event: any) => {\r\n        event.preventDefault();\r\n        let validity = true;\r\n        let errors = this.state.errors;\r\n        Object.values(this.state.errors).forEach(\r\n            (val) => val.length > 0 && (validity = false)\r\n        );\r\n        if (validity == true && this.state.user_name != '' && this.state.password != '' && this.state.email != '') {\r\n            const res = await register({user_name: this.state.user_name, email: this.state.email, password: this.state.password} as SignUpState) as Result;\r\n           \r\n            if (res.data) {\r\n                console.log(res.data);\r\n                this.setState({...this.state, goto_login: true});\r\n            }\r\n            else {\r\n                this.setState({...this.state, errors:{...errors, user_name: res.error} });\r\n            }\r\n        } else {\r\n            if (this.state.user_name == ''){\r\n                this.setState({...this.state, errors:{...errors, user_name: \"Required\"} })\r\n            }\r\n            else if (this.state.password == ''){\r\n                this.setState({...this.state, errors:{...errors, password: \"Required\"} })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        if (this.state.goto_login) {\r\n           return <Redirect to=\"/login\" />\r\n        }\r\n        return (\r\n            <>\r\n            <NavbarCareer addLogout={false} />\r\n            <div id=\"signup\">\r\n                <div className='wrapper'>\r\n                    <div style={{ margin: \"20px\" }} className=\"col-sm-3\">\r\n                        <div className='form-wrapper'>\r\n                            <h2>Sign Up</h2>\r\n                            <form onSubmit={this.handleSubmit} noValidate >\r\n                                <div className='user_name'>\r\n                                    <label htmlFor=\"fullName\">User Name</label>\r\n                                    <input type='text' name='user_name' onChange={this.handleChange} />\r\n                                    {errors.user_name.length > 0 && <span style={{ color: \"red\" }}>{errors.user_name}</span>}\r\n                                </div>\r\n                                <div className='email'>\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input type='email' name='email' onChange={this.handleChange} />\r\n                                    {errors.email.length > 0 && <span style={{ color: \"red\" }}>{errors.email}</span>}\r\n                                </div>\r\n                                <div className='password'>\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input type=\"password\" name='password' onChange={this.handleChange} />\r\n                                    {errors.password.length > 0 && <span style={{ color: \"red\" }}>{errors.password}</span>}\r\n                                </div>\r\n                                <div className='password'>\r\n                                    <label htmlFor=\"c_password\">Confirm Password</label>\r\n                                    <input type=\"password\" name='c_password' onChange={this.handleChange} />\r\n                                    {errors.c_password.length > 0 && <span style={{ color: \"red\" }}>{errors.c_password}</span>}\r\n                                </div>\r\n                                <div className='submit'>\r\n                                    <button className=\"mybtn\">Sign up</button>\r\n                                </div>\r\n                                <div className='submit'>\r\n                                    <p className=\"submitparagraph\">Already Have an account? \r\n                                    <RouterLink to=\"/login\" className=\"myLink\" >Sign In</RouterLink> </p>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);","export function processResult(resultData: any) {\r\n    if (resultData.data.applicantdateofbirth) {\r\n        resultData.data.applicantdateofbirth = new Date((resultData.data.applicantdateofbirth as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.dateofBirth) {\r\n        resultData.data.dateofBirth = new Date((resultData.data.dateofBirth as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.physicalExamExpirationDate) {\r\n        resultData.data.physicalExamExpirationDate = new Date((resultData.data.physicalExamExpirationDate as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.employmentHistoryfrom) {\r\n        resultData.data.employmentHistoryfrom = new Date((resultData.data.employmentHistoryfrom as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.employmentHistoryTo) {\r\n        resultData.data.employmentHistoryTo = new Date((resultData.data.employmentHistoryTo as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.experienceToDate) {\r\n        resultData.data.experienceToDate = new Date((resultData.data.experienceToDate as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.experienceFromDate) {\r\n        resultData.data.experienceFromDate = new Date((resultData.data.experienceFromDate as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.dateOfAccident) {\r\n        resultData.data.dateOfAccident = new Date((resultData.data.dateOfAccident as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.dateOfViolation) {\r\n        resultData.data.dateOfViolation = new Date((resultData.data.dateOfViolation as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.lastYearAddressfrom) {\r\n        resultData.data.lastYearAddressfrom = new Date((resultData.data.lastYearAddressfrom as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.lastYearAddressTo) {\r\n        resultData.data.lastYearAddressTo = new Date((resultData.data.lastYearAddressTo as any).$date).toISOString().split('T')[0];\r\n    }\r\n    if (resultData.data.employeeDate) {\r\n        resultData.data.employeeDate = new Date((resultData.data.employeeDate as any).$date).toISOString().split('T')[0];\r\n    }\r\n    \r\n    \r\n}","import {LoginState} from \"../Component/SignIn\";\r\nimport {Result} from \"../interfaces/registerinterface\";\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\nimport {processResult} from './commonresult';\r\n\r\nexport async function signin(data: LoginState ) {\r\n    let res;\r\n    try {\r\n            res = await fetch(baseUrl+\"/api/login\", {\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n               }\r\n            }) ;\r\n            const resultData = await res.json() as Result;\r\n            processResult(resultData);\r\n\r\n\r\n            return resultData;\r\n    } catch (ex) {\r\n        console.log(\"exception\", ex);\r\n        return ex;\r\n    }\r\n}","import React from \"react\";\r\nimport { Link as RouterLink, Redirect } from \"react-router-dom\";\r\n\r\nimport { signin } from \"../services/logInApi\";\r\nimport { Result } from \"../interfaces/registerinterface\";\r\n\r\nimport NavbarCareer from \"./NavbarCareer\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport { user_data } from \"./User\";\r\n\r\ninterface LoginProps {\r\n  name?: any;\r\n  value?: any;\r\n}\r\n\r\nexport interface LoginState {\r\n  user_name: string;\r\n  password: string;\r\n  errors: {\r\n    user_name: string;\r\n    password: string;\r\n  };\r\n}\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    const initialState = {\r\n      user_name: \"\",\r\n      password: \"\",\r\n      errors: {\r\n        user_name: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n    this.state = initialState;\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (event: any) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    switch (name) {\r\n      case \"username\":\r\n        errors.user_name = value == \"\" ? \"Username must given!\" : \"\";\r\n        break;\r\n      case \"password\":\r\n        errors.password = value == \"\" ? \"Password Must Be given\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState(Object.assign(this.state, { errors, [name]: value }));\r\n  };\r\n\r\n  handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    let validity = true;\r\n    let errors = this.state.errors;\r\n\r\n    Object.values(this.state.errors).forEach(\r\n      (val) => val.length > 0 && (validity = false)\r\n    );\r\n    if (\r\n      validity == true &&\r\n      this.state.user_name != \"\" &&\r\n      this.state.password != \"\"\r\n    ) {\r\n      const res = (await signin({\r\n        user_name: this.state.user_name,\r\n        password: this.state.password,\r\n      } as LoginState)) as Result;\r\n      if (res.data) {\r\n        this.context.setUserData(res.data);\r\n      } else {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: { ...errors, user_name: res.error },\r\n        });\r\n      }\r\n    } else {\r\n      if (this.state.user_name == \"\") {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: { ...errors, user_name: \"Required\" },\r\n        });\r\n      } else if (this.state.password == \"\") {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: { ...errors, password: \"Required\" },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    console.log(\"user_data\", this.context.data);\r\n    if (this.context.data.user_name) {\r\n      return <Redirect to=\"/AwbTransportEmploymentApplication\" />;\r\n    }\r\n    return (\r\n      <>\r\n        <NavbarCareer addLogout={false} />\r\n        <div id=\"signup\">\r\n          <div className=\"wrapper\">\r\n            <div style={{ margin: \"20px\" }} className=\"col-sm-3\">\r\n              <div className=\"form-wrapper\">\r\n                <h2>Sign In</h2>\r\n                <form onSubmit={this.handleSubmit} noValidate>\r\n                  <div className=\"user_name\">\r\n                    <label htmlFor=\"fullName\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"user_name\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    {errors.user_name == \"\" && (\r\n                      <span style={{ color: \"red\" }}>{errors.user_name}</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"password\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    {errors.password.length > 0 && (\r\n                      <span style={{ color: \"red\" }}>{errors.password}</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"submit\">\r\n                    <button className=\"mybtn\">Sign In</button>\r\n                  </div>\r\n                </form>\r\n                <div className=\"submit\">\r\n                  <p className=\"submitparagraph\">\r\n                    Or Dont Have an account ?{\" \"}\r\n                    <RouterLink to=\"/register\" className=\"myLink\">\r\n                      Sign up\r\n                    </RouterLink>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.contextType = user_data;\r\nexport default Login;\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport class styleClasses extends Component {\r\n  public static useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        flexGrow: 1,\r\n      },\r\n      paper: {\r\n        color: theme.palette.text.secondary,\r\n        padding: \"20px 10px\",\r\n      },\r\n      addressPaper: {\r\n        textAlign: \"left\",\r\n      },\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(19),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color: theme.palette.text.secondary,\r\n      },\r\n      text: {\r\n        fontSize: theme.typography.pxToRem(17),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color: theme.palette.text.secondary,\r\n      },\r\n      secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n      },\r\n      input: {\r\n        display: \"none\",\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      default: {},\r\n      paperProminantStyle: {\r\n        margin: \"5px 0px\",\r\n        elevation: 3,\r\n        padding: \"20px 0px\",\r\n      },\r\n      questionTextStyle: {\r\n        textAlign: \"left\",\r\n      },\r\n      smallHeading: {\r\n        fontSize: theme.typography.pxToRem(17),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color: theme.palette.text.secondary,\r\n        textJustify: \"inter-word\",\r\n      },\r\n      caption: {\r\n        fontSize: theme.typography.pxToRem(12),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color: theme.palette.text.secondary,\r\n        textAlign: \"left\",\r\n      },\r\n    })\r\n  );\r\n}\r\n\r\nexport default styleClasses;\r\n","export const RequireError: string = \"Required *\";\r\nexport const states = [\r\n  { value: \"Armed Forces America\" },\r\n  { value: \"Armed Forces\" },\r\n  { value: \"Armed Forces Pacific\" },\r\n  { value: \"Alabama\" },\r\n  { value: \"Alaska\" },\r\n  { value: \"American Samoa\" },\r\n  { value: \"Arizona\" },\r\n  { value: \"Arkansas\" },\r\n  { value: \"California\" },\r\n  { value: \"Colorado\" },\r\n  { value: \"Connecticut\" },\r\n  { value: \"District of Columbia\" },\r\n  { value: \"Delaware\" },\r\n  { value: \"Florida\" },\r\n  { value: \"Georgia\" },\r\n  { value: \"Guam\" },\r\n  { value: \"Hawaii\" },\r\n  { value: \"Idaho\" },\r\n  { value: \"Illinois\" },\r\n  { value: \"Indiana\" },\r\n  { value: \"Iowa\" },\r\n  { value: \"Kansas\" },\r\n  { value: \"Kentucky\" },\r\n  { value: \"Louisiana\" },\r\n  { value: \"Maine\" },\r\n  { value: \"Maryland\" },\r\n  { value: \"Massachusetts\" },\r\n  { value: \"Michigan\" },\r\n  { value: \"Minnesota\" },\r\n  { value: \"Mississippi\" },\r\n  { value: \"Missouri\" },\r\n  { value: \"Montana\" },\r\n  { value: \"Nebraska\" },\r\n  { value: \"New Hampshire\" },\r\n  { value: \"New Jersey\" },\r\n  { value: \"New Mexico\" },\r\n  { value: \"New York\" },\r\n  { value: \"Nevada\" },\r\n  { value: \"North Carolina\" },\r\n  { value: \"North Dakota\" },\r\n  { value: \"Northern Mariana Islands\" },\r\n  { value: \"Ohio\" },\r\n  { value: \"Oklahoma\" },\r\n  { value: \"Oregon\" },\r\n  { value: \"Pennsylvania\" },\r\n  { value: \"Puerto Rico\" },\r\n  { value: \"Rhode Island\" },\r\n  { value: \"South Carolina\" },\r\n  { value: \"South Dakota\" },\r\n  { value: \"Tennessee\" },\r\n  { value: \"Texas\" },\r\n  { value: \"Utah\" },\r\n  { value: \"Vermont\" },\r\n  { value: \"Virgin Islands\" },\r\n  { value: \"Virginia\" },\r\n  { value: \"Washington\" },\r\n  { value: \"West Virginia\" },\r\n  { value: \"Wisconsin\" },\r\n  { value: \"Wyoming\" },\r\n];\r\nexport type Address = {\r\n  lastYearAddress: string;\r\n  lastYearAddressCity: string;\r\n  lastYearAddressState: string;\r\n  lastYearAddressZipCode: string;\r\n  lastYearAddressfrom: string;\r\n  lastYearAddressTo: string;\r\n};\r\nexport type Addresses = Address[];\r\n\r\nexport type EmploymentHistoryInfo = {\r\n  employmentHistoryfrom: string;\r\n  employmentHistoryTo: string;\r\n  employmentHistorystatus: string;\r\n  employmentHistoryposition: string;\r\n  employmentHistoryaddress: string;\r\n  employmentHistorycompanyPhone: string;\r\n  employmentHistoryreasonForLeaving: string;\r\n  employmentHistorysubjecttotheFMCSRs: string;\r\n  employmentHistorydrugandalcoholTesting: string;\r\n};\r\n\r\nexport let employmentHistoryDummyElement: EmploymentHistoryInfo = {\r\n  employmentHistoryfrom: \"2018-01-01\",\r\n  employmentHistoryTo: \"2018-01-01\",\r\n  employmentHistorystatus: \"Default\",\r\n  employmentHistoryposition: \"Default\",\r\n  employmentHistoryaddress: \"Default\",\r\n  employmentHistorycompanyPhone: \"Default\",\r\n  employmentHistoryreasonForLeaving: \"Default\",\r\n  employmentHistorysubjecttotheFMCSRs: \"Default\",\r\n  employmentHistorydrugandalcoholTesting: \"Default\",\r\n};\r\n\r\nexport type EmploymentHistories = EmploymentHistoryInfo[];\r\n\r\n//-----------DriverLicense-----------\r\n\r\nexport type tDriverLicenseInfo = {\r\n  stateOfLicence: string;\r\n  licenceNumber: string;\r\n  licenceType: string;\r\n  licenceEndoresment: string;\r\n  licenceExpirationDate: string;\r\n};\r\n\r\nexport let driverLicenseDummyElement: tDriverLicenseInfo = {\r\n  stateOfLicence: \"\",\r\n  licenceNumber: \"\",\r\n  licenceType: \"\",\r\n  licenceEndoresment: \"\",\r\n  licenceExpirationDate: \"\",\r\n};\r\n\r\nexport type tDriverLicenses = tDriverLicenseInfo[];\r\n//-----------DriverLicense-----------\r\n\r\n//-----------References-----------\r\n\r\nexport type tReferenceInfo = {\r\n  referencefirstName: string;\r\n  referencelastName: string;\r\n  referenceCompany: string;\r\n  referenceTitle: string;\r\n  referencePhoneNumber: string;\r\n  referenceAddress: string;\r\n};\r\n\r\nexport let ReferenceDummyElement: tReferenceInfo = {\r\n  referencefirstName: \"\",\r\n  referencelastName: \"\",\r\n  referenceCompany: \"\",\r\n  referenceTitle: \"\",\r\n  referencePhoneNumber: \"\",\r\n  referenceAddress: \"\",\r\n};\r\n\r\nexport type tReferences = tReferenceInfo[];\r\n//-----------References-----------\r\n\r\n//-----------TrafficConvictions-----------\r\nexport type tTrafficConvictionInfo = {\r\n  dateOfViolation: string;\r\n  LocationOfViolation: string;\r\n  ViolationCharge: string;\r\n  ViolationPenalty: number;\r\n};\r\n\r\nexport let trafficConvictionDummyElement: tTrafficConvictionInfo = {\r\n  dateOfViolation: \"2018-01-01\",\r\n  LocationOfViolation: \"Default\",\r\n  ViolationCharge: \"Default\",\r\n  ViolationPenalty: 10,\r\n};\r\n\r\nexport type tTrafficConvictions = tTrafficConvictionInfo[];\r\n//-----------TrafficConvictions-----------\r\n\r\nexport type EmploymentAccidentHistoryInfo = {\r\n  dateOfAccident: string;\r\n  NatureOfAccidents: string;\r\n  LocationOfAccidents: string;\r\n  numberofFatalities: number;\r\n  numberofPeopleleInjured: number;\r\n};\r\n\r\nexport let employmentAccidentHistoryDummyElement: EmploymentAccidentHistoryInfo = {\r\n  dateOfAccident: \"2018-01-01\",\r\n  NatureOfAccidents: \"Default\",\r\n  LocationOfAccidents: \"Default\",\r\n  numberofFatalities: 21,\r\n  numberofPeopleleInjured: 123,\r\n};\r\n\r\nexport type EmploymentAccidentHistories = EmploymentAccidentHistoryInfo[];\r\n\r\nexport type tViolation = {\r\n  dateOfViolation: string;\r\n  LocationOfViolation: string;\r\n  ViolationCharge: string;\r\n  ViolationPenalty: string;\r\n};\r\n\r\nexport type tVoilations = tViolation[];\r\n\r\nexport type tDrivingExperience = {\r\n  experienceclassofEquipment: string;\r\n  experienceFromDate: string;\r\n  experienceToDate: string;\r\n  experiencenumberOfMiles: number;\r\n};\r\n\r\nexport type tDrivingExperiences = tDrivingExperience[];\r\n\r\nexport let drivingExperienceDummyElement: tDrivingExperience = {\r\n  experienceclassofEquipment: \"Default\",\r\n  experienceFromDate: \"2018-01-01\",\r\n  experienceToDate: \"2018-01-01\",\r\n  experiencenumberOfMiles: 10,\r\n};\r\nexport type Form1 = {\r\n  first_name: string;\r\n  last_name: string;\r\n  phone_number: string;\r\n  email: string;\r\n  dateofBirth: string;\r\n  socialSecurity: string;\r\n  address: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  addresses: Addresses;\r\n  fromDate: string;\r\n  toDate: string;\r\n  startTime: string;\r\n  hearAbout: string;\r\n  eligibletoWorkInUnitedState: string;\r\n  willingForDrugTest: string;\r\n  classAExperienceLevel: string;\r\n};\r\n\r\ntype Dict = { [index: string]: boolean };\r\n\r\nexport let reqBits = {\r\n  first_name: true,\r\n  last_name: false,\r\n  phone_number: true,\r\n  email: false,\r\n  dateofBirth: true,\r\n  socialSecurity: true,\r\n  address: true,\r\n  city: false,\r\n  state: false,\r\n  zipCode: false,\r\n  lastThreeYearResidenceCheck: true,\r\n  addresses: true,\r\n  lastYearAddress: true,\r\n  lastYearAddressCity: false,\r\n  lastYearAddressState: false,\r\n  lastYearAddressZipCode: false,\r\n  lastYearAddressfrom: true,\r\n  lastYearAddressTo: true,\r\n  startTime: true,\r\n  hearAbout: false,\r\n  eligibletoWorkInUnitedState: true,\r\n  classAExperienceLevel: true,\r\n  willingForDrugTest: true,\r\n  //Form 2\r\n  gender: false,\r\n  veteranStatus: false,\r\n  //Form 3\r\n  companyName: true,\r\n  companyAddress: true,\r\n  companyCity: false,\r\n  companyState: false,\r\n  companyPostCode: false,\r\n  applicationApplyDate: true,\r\n  applicationApplyAsPosition: true,\r\n  applicantfirstName: true,\r\n  applicantLastName: true,\r\n  applicantPhoneNumber: true,\r\n  emergencyContactfirstName: true,\r\n  emergencyContactlastName: true,\r\n  emergencyContactNumber: true,\r\n  age: true,\r\n  applicantdateofbirth: true,\r\n  physicalExamExpirationDate: true,\r\n  applicantAddresses: true,\r\n  everWorkedForCompany: true,\r\n  applicantSchoolGrade: true,\r\n  applicantCollegeGrade: true,\r\n  applicantPostGraduateGrade: true,\r\n  employmentHistoryfrom: true,\r\n  employmentHistoryTo: true,\r\n  employmentHistorystatus: true,\r\n  employmentHistoryposition: true,\r\n  employmentHistoryaddress: true,\r\n  employmentHistorycompanyPhone: true,\r\n  employmentHistoryreasonForLeaving: true,\r\n  employmentHistorysubjecttotheFMCSRs: true,\r\n  employmentHistorydrugandalcoholTesting: true,\r\n  employmentExperienceHistory: true,\r\n  experienceclassofEquipment: true,\r\n  experienceFromDate: true,\r\n  experienceToDate: true,\r\n  experiencenumberOfMiles: true,\r\n  lastFiveYearStatesOperate: true,\r\n  Listspecialcourses: true,\r\n  ListanySafeDrivingAwards: false,\r\n  dateOfAccident: false,\r\n  NatureOfAccidents: false,\r\n  LocationOfAccidents: true,\r\n  numberofFatalities: true,\r\n  numberofPeopleleInjured: true,\r\n  dateOfViolation: false,\r\n  LocationOfViolation: false,\r\n  ViolationCharge: true,\r\n  ViolationPenalty: false,\r\n  stateOfLicence: true,\r\n  licenceNumber: true,\r\n  licenceType: true,\r\n  licenceEndoresment: true,\r\n  licenceExpirationDate: true,\r\n  deniedLicences: true,\r\n  permitLicences: true,\r\n  reasonforUnableToPerformActions: true,\r\n  convictedofafelony: true,\r\n  answerToAnyQuestion: true,\r\n  referencefirstName: true,\r\n  referencelastName: false,\r\n  referenceCompany: false,\r\n  referenceTitle: false,\r\n  referencePhoneNumber: true,\r\n  referenceAddress: true,\r\n  signature: false,\r\n  dateOfApplication: true,\r\n  remarks: false,\r\n  //FORM6\r\n\r\n  alcoholTestExecutionDate: true,\r\n  alcoholTestEmployeeFirstName: true,\r\n  alcoholTestEmployeeLastName: false,\r\n  alcoholTestEmployeeSignature: false,\r\n  alcoholTestSecurityNumber: true,\r\n\r\n  //FORM7\r\n  employeePrintedName: false,\r\n  employeeSSNNumber: false,\r\n  employeeSignature: false,\r\n  employeeDate: false,\r\n\r\n  newEmployeerName: false,\r\n  newEmployeerAddress: false,\r\n  newEmployeerCity: false,\r\n  newEmployeerState: false,\r\n  newEmployeerpostalCode: false,\r\n  newEmployeerphone: false,\r\n  newEmployeerFax: false,\r\n  newEmployeedesignatedEmployeeReprsentative: false,\r\n\r\n  prevEmployeerName: false,\r\n  prevEmployeerAddress: false,\r\n  prevEmployeerCity: false,\r\n  prevEmployeerState: false,\r\n  prevEmployeerpostalCode: false,\r\n  prevEmployeerphone: false,\r\n  prevEmployeerFax: false,\r\n  prevEmployeedesignatedEmployeeReprsentative: false,\r\n\r\n  employeeAlcoholTestRateHigher: false,\r\n  employeeverifiedDrugTest: false,\r\n  employeerefuseTest: false,\r\n  employeeotherViolations: false,\r\n  prevEmployeeReportDrug: false,\r\n  answeredYes: false,\r\n\r\n  nameOfPersonProvidingInformation: false,\r\n  nameOfPersonProvidingInformationTitle: false,\r\n  nameOfPersonProvidingInformationPhone: false,\r\n  nameOfPersonProvidingInformationDate: false,\r\n};\r\n\r\nexport let reqBitsKeys = {\r\n  first_name: \"first_name\",\r\n  last_name: \"last_name\",\r\n  phone_number: \"phone_number\",\r\n  email: \"email\",\r\n  dateofBirth: \"dateofBirth\",\r\n  socialSecurity: \"socialSecurity\",\r\n  address: \"address\",\r\n  city: \"city\",\r\n  state: \"state\",\r\n  zipCode: \"zipCode\",\r\n  lastThreeYearResidenceCheck: \"lastThreeYearResidenceCheck\",\r\n  addresses: \"addresses\",\r\n  lastYearAddress: \"lastYearAddress\",\r\n  lastYearAddressCity: \"lastYearAddressCity\",\r\n  lastYearAddressState: \"lastYearAddressState\",\r\n  lastYearAddressZipCode: \"lastYearAddressZipCode\",\r\n  lastYearAddressfrom: \"lastYearAddressfrom\",\r\n  lastYearAddressTo: \"lastYearAddressTo\",\r\n  startTime: \"startTime\",\r\n  hearAbout: \"hearAbout\",\r\n  eligibletoWorkInUnitedState: \"eligibletoWorkInUnitedState\",\r\n  classAExperienceLevel: \"classAExperienceLevel\",\r\n  willingForDrugTest: \"willingForDrugTest\",\r\n  //Form 2\r\n  gender: \"gender\",\r\n  veteranStatus: \"veteranStatus\",\r\n  //Form 3\r\n  companyName: \"companyName\",\r\n  companyAddress: \"companyAddress\",\r\n  companyCity: \"companyCity\",\r\n  companyState: \"companyState\",\r\n  companyPostCode: \"companyPostCode\",\r\n  applicationApplyDate: \"applicationApplyDate\",\r\n  applicationApplyAsPosition: \"applicationApplyAsPosition\",\r\n  applicantfirstName: \"applicantfirstName\",\r\n  applicantLastName: \"applicantLastName\",\r\n  applicantPhoneNumber: \"applicantPhoneNumber\",\r\n  emergencyContactfirstName: \"emergencyContactfirstName\",\r\n  emergencyContactlastName: \"emergencyContactlastName\",\r\n  emergencyContactNumber: \"emergencyContactNumber\",\r\n  age: \"age\",\r\n  applicantdateofbirth: \"applicantdateofbirth\",\r\n  physicalExamExpirationDate: \"physicalExamExpirationDate\",\r\n  applicantAddresses: \"applicantAddresses\",\r\n  everWorkedForCompany: \"everWorkedForCompany\",\r\n  applicantSchoolGrade: \"applicantSchoolGrade\",\r\n  applicantCollegeGrade: \"applicantCollegeGrade\",\r\n  applicantPostGraduateGrade: \"applicantPostGraduateGrade\",\r\n  employmentHistoryfrom: \"employmentHistoryfrom\",\r\n  employmentHistoryTo: \"employmentHistoryTo\",\r\n  employmentHistorystatus: \"employmentHistorystatus\",\r\n  employmentHistoryposition: \"employmentHistoryposition\",\r\n  employmentHistoryaddress: \"employmentHistoryaddress\",\r\n  employmentHistorycompanyPhone: \"employmentHistorycompanyPhone\",\r\n  employmentHistoryreasonForLeaving: \"employmentHistoryreasonForLeaving\",\r\n  employmentHistorysubjecttotheFMCSRs: \"employmentHistorysubjecttotheFMCSRs\",\r\n  employmentHistorydrugandalcoholTesting:\r\n    \"employmentHistorydrugandalcoholTesting\",\r\n  employmentExperienceHistory: \"employmentExperienceHistory\",\r\n  experienceclassofEquipment: \"experienceclassofEquipment\",\r\n  experienceFromDate: \"experienceFromDate\",\r\n  experienceToDate: \"experienceToDate\",\r\n  experiencenumberOfMiles: \"experiencenumberOfMiles\",\r\n  lastFiveYearStatesOperate: \"lastFiveYearStatesOperate\",\r\n  Listspecialcourses: \"Listspecialcourses\",\r\n  ListanySafeDrivingAwards: \"ListanySafeDrivingAwards\",\r\n  dateOfAccident: \"dateOfAccident\",\r\n  NatureOfAccidents: \"NatureOfAccidents\",\r\n  LocationOfAccidents: \"LocationOfAccidents\",\r\n  numberofFatalities: \"numberofFatalities\",\r\n  numberofPeopleleInjured: \"numberofPeopleleInjured\",\r\n  dateOfViolation: \"dateOfViolation\",\r\n  LocationOfViolation: \"LocationOfViolation\",\r\n  ViolationCharge: \"ViolationCharge\",\r\n  ViolationPenalty: \"ViolationPenalty\",\r\n  stateOfLicence: \"stateOfLicence\",\r\n  licenceNumber: \"licenceNumber\",\r\n  licenceType: \"licenceType\",\r\n  licenceEndoresment: \"licenceEndoresment\",\r\n  licenceExpirationDate: \"licenceExpirationDate\",\r\n  deniedLicences: \"deniedLicences\",\r\n  permitLicences: \"permitLicences\",\r\n  reasonforUnableToPerformActions: \"reasonforUnableToPerformActions\",\r\n  convictedofafelony: \"convictedofafelony\",\r\n  answerToAnyQuestion: \"answerToAnyQuestion\",\r\n  referencefirstName: \"referencefirstName\",\r\n  referencelastName: \"referencelastName\",\r\n  referenceCompany: \"referenceCompany\",\r\n  referenceTitle: \"referenceTitle\",\r\n  referencePhoneNumber: \"referencePhoneNumber\",\r\n  referenceAddress: \"referenceAddress\",\r\n  signature: \"signature\",\r\n  dateOfApplication: \"dateOfApplication\",\r\n  remarks: \"remarks\",\r\n};\r\n\r\nexport let reqBitsViaStr: Dict = {\r\n  first_name: true,\r\n  last_name: false,\r\n  phone_number: true,\r\n  email: false,\r\n  dateofBirth: true,\r\n  socialSecurity: true,\r\n  address: true,\r\n  city: false,\r\n  state: false,\r\n  zipCode: false,\r\n  lastThreeYearResidenceCheck: true,\r\n  addresses: true,\r\n  lastYearAddress: true,\r\n  lastYearAddressCity: false,\r\n  lastYearAddressState: false,\r\n  lastYearAddressZipCode: false,\r\n  lastYearAddressfrom: true,\r\n  lastYearAddressTo: true,\r\n  startTime: true,\r\n  hearAbout: false,\r\n  eligibletoWorkInUnitedState: true,\r\n  classAExperienceLevel: true,\r\n  willingForDrugTest: true,\r\n  //Form 2\r\n  gender: false,\r\n  veteranStatus: false,\r\n  //Form 3\r\n  companyName: true,\r\n  companyAddress: true,\r\n  companyCity: false,\r\n  companyState: false,\r\n  companyPostCode: false,\r\n  applicationApplyDate: true,\r\n  applicationApplyAsPosition: true,\r\n  applicantfirstName: true,\r\n  applicantLastName: true,\r\n  applicantPhoneNumber: true,\r\n  emergencyContactfirstName: true,\r\n  emergencyContactlastName: true,\r\n  emergencyContactNumber: true,\r\n  age: true,\r\n  applicantdateofbirth: true,\r\n  physicalExamExpirationDate: true,\r\n  applicantAddresses: true,\r\n  everWorkedForCompany: true,\r\n  applicantSchoolGrade: true,\r\n  applicantCollegeGrade: true,\r\n  applicantPostGraduateGrade: true,\r\n  employmentHistoryfrom: true,\r\n  employmentHistoryTo: true,\r\n  employmentHistorystatus: true,\r\n  employmentHistoryposition: true,\r\n  employmentHistoryaddress: true,\r\n  employmentHistorycompanyPhone: true,\r\n  employmentHistoryreasonForLeaving: true,\r\n  employmentHistorysubjecttotheFMCSRs: true,\r\n  employmentHistorydrugandalcoholTesting: true,\r\n  employmentExperienceHistory: true,\r\n  experienceclassofEquipment: true,\r\n  experienceFromDate: true,\r\n  experienceToDate: true,\r\n  experiencenumberOfMiles: true,\r\n  lastFiveYearStatesOperate: true,\r\n  Listspecialcourses: true,\r\n  ListanySafeDrivingAwards: false,\r\n  dateOfAccident: false,\r\n  NatureOfAccidents: false,\r\n  LocationOfAccidents: true,\r\n  numberofFatalities: true,\r\n  numberofPeopleleInjured: true,\r\n  dateOfViolation: false,\r\n  LocationOfViolation: false,\r\n  ViolationCharge: true,\r\n  ViolationPenalty: false,\r\n  stateOfLicence: true,\r\n  licenceNumber: true,\r\n  licenceType: true,\r\n  licenceEndoresment: true,\r\n  licenceExpirationDate: true,\r\n  deniedLicences: true,\r\n  permitLicences: true,\r\n  reasonforUnableToPerformActions: true,\r\n  convictedofafelony: true,\r\n  answerToAnyQuestion: true,\r\n  referencefirstName: true,\r\n  referencelastName: false,\r\n  referenceCompany: false,\r\n  referenceTitle: false,\r\n  referencePhoneNumber: true,\r\n  referenceAddress: true,\r\n  signature: false,\r\n  dateOfApplication: true,\r\n  remarks: false,\r\n};\r\n\r\nexport type AddressErrorsList = [\r\n  {\r\n    lastYearAddress: boolean;\r\n    lastYearAddressCity: boolean;\r\n    lastYearAddressState: boolean;\r\n    lastYearAddressZipCode: boolean;\r\n    lastYearAddressfrom: boolean;\r\n    lastYearAddressTo: boolean;\r\n  }\r\n];\r\n\r\n// export let reqBitsKeys = [\r\n//   { first_name: 0 },\r\n//   { last_name: 1 },\r\n//   { phone_number: 2 },\r\n//   { email: 3 },\r\n//   { dateofBirth: 4 },\r\n//   { socialSecurity: 5 },\r\n//   { address: 6 },\r\n//   { city: 7 },\r\n//   { state: 8 },\r\n//   { zipCode: 9 },\r\n//   { lastThreeYearResidenceCheck: 10 },\r\n//   { addresses: 11 },\r\n//   { lastYearAddress: 12 },\r\n//   { lastYearAddressCity: 13 },\r\n//   { lastYearAddressState: 14 },\r\n//   { lastYearAddressZipCode: 15 },\r\n//   { lastYearAddressfrom: 16 },\r\n//   { lastYearAddressTo: 17 },\r\n//   { startTime: 18 },\r\n//   { hearAbout: 19 },\r\n//   { eligibletoWorkInUnitedState: 20 },\r\n//   { classAExperienceLevel: 21 },\r\n//   { willingForDrugTest: 22 },\r\n// ];\r\n\r\nexport const WrongPatternError: string = \"Wrong Pattern\";\r\nexport let debug = false;\r\nexport let addr = {\r\n  lastYearAddress: \"Default\",\r\n  lastYearAddressCity: \"Default\",\r\n  lastYearAddressState: \"Alaska\",\r\n  lastYearAddressZipCode: \"Default\",\r\n  lastYearAddressfrom: \"2018-01-01\",\r\n  lastYearAddressTo: \"2018-01-01\",\r\n};\r\nexport const startTimeVal = [\r\n  { value: \"Immediately\" },\r\n  { value: \"Within 2 Weeks\" },\r\n  { value: \"Within 1 Month\" },\r\n];\r\n\r\nexport const gender = [\r\n  { value: \"Male\" },\r\n  { value: \"Female\" },\r\n  { value: \"Other\" },\r\n];\r\n\r\nexport const form3DefaultValue = {\r\n  companyName: \"Default\",\r\n  companyAddress: \"Default\",\r\n  companyCity: \"Default\",\r\n  companyState: \"Default\",\r\n  companyPostCode: \"Default\",\r\n  applicationApplyDate: \"2018-10-10\",\r\n  applicationApplyAsPosition: \"Contractor\",\r\n  applicantfirstName: \"Default\",\r\n  applicantLastName: \"Default\",\r\n  applicantPhoneNumber: \"111-111-1111 x1111\",\r\n  emergencyContactfirstName: \"Default\",\r\n  emergencyContactlastName: \"Default\",\r\n  emergencyContactNumber: \"111-111-1111 x1111\",\r\n  age: 10,\r\n  applicantdateofbirth: \"2018-10-10\",\r\n  physicalExamExpirationDate: \"2018-10-10\",\r\n  applicantAddresses: [addr, addr],\r\n  everWorkedForCompany: \"Yes\",\r\n  applicantSchoolGrade: \"3\",\r\n  applicantCollegeGrade: \"2\",\r\n  applicantPostGraduateGrade: \"4\",\r\n  employmentHistory: [\r\n    employmentHistoryDummyElement,\r\n    employmentHistoryDummyElement,\r\n  ],\r\n  employmentExperienceHistory: [\r\n    drivingExperienceDummyElement,\r\n    drivingExperienceDummyElement,\r\n  ],\r\n  lastFiveYearStatesOperate: \"Default\",\r\n  Listspecialcourses: \"Default\",\r\n  ListanySafeDrivingAwards: \"Default\",\r\n  employmentAccidentsHistory: [\r\n    employmentAccidentHistoryDummyElement,\r\n    employmentAccidentHistoryDummyElement,\r\n  ],\r\n  violations: [trafficConvictionDummyElement],\r\n  dateOfAccident: \"Default\",\r\n  NatureOfAccidents: \"Default\",\r\n  LocationOfAccidents: \"Default\",\r\n  numberofFatalities: \"Default\",\r\n  numberofPeopleleInjured: \"Default\",\r\n  dateOfViolation: \"2018-10-10\",\r\n  LocationOfViolation: \"Default\",\r\n  ViolationCharge: \"Default\",\r\n  ViolationPenalty: \"Default\",\r\n  stateOfLicence: \"Default\",\r\n  licenceNumber: \"Default\",\r\n  licenceType: \"Default\",\r\n  licenceEndoresment: \"Default\",\r\n  licenceExpirationDate: \"2018-10-10\",\r\n  deniedLicences: \"Default\",\r\n  permitLicences: \"Default\",\r\n  reasonforUnableToPerformActions: \"Default\",\r\n  convictedofafelony: \"Default\",\r\n  answerToAnyQuestion: \"Default\",\r\n  referencefirstName: \"Default\",\r\n  referencelastName: \"Default\",\r\n  referenceCompany: \"Default\",\r\n  referenceTitle: \"Default\",\r\n  referencePhoneNumber: \"111-111-1111 x1111\",\r\n  referenceAddress: \"Default\",\r\n  signature: \"Default\",\r\n  dateOfApplication: \"2018-10-10\",\r\n  remarks: \"Default\",\r\n};\r\n","import {Result} from \"../interfaces/registerinterface\";\r\nimport {baseUrl} from \"../shared/baseUrl\";\r\n\r\nexport async function fileUploadApi(data: any ) {\r\n    let res;\r\n    try {\r\n            res = await fetch(baseUrl+\"/api/files/upload\", {\r\n            method:'POST',\r\n            body:data,\r\n            }) ;\r\n            const resultData = await res.json() as Result;\r\n            return resultData;\r\n    } catch (ex) {\r\n        console.log(\"exception\", ex);\r\n        return ex;\r\n    }\r\n}","import { LoginState } from \"../Component/SignIn\";\r\nimport { Result } from \"../interfaces/registerinterface\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport {processResult} from './commonresult'\r\n\r\nexport async function update(data: any) {\r\n  let res;\r\n  try {\r\n    res = await fetch(baseUrl + \"/api/update_record\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const resultData = (await res.json()) as Result;\r\n    processResult(resultData);\r\n    return resultData;\r\n  } catch (ex) {\r\n    console.log(\"exception\", ex);\r\n    return ex;\r\n  }\r\n}\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Controller } from \"react-hook-form\";\r\n\r\ntype Props = {\r\n    nameVal:string,\r\n    label:string,\r\n    control:any,\r\n    defaultValue?:string,\r\n    children:any,\r\n    variant?:'standard' | 'outlined' | 'filled',\r\n    size?:'small' | 'medium' ,\r\n    className:string\r\n  };\r\n\r\nfunction ReactHookFormSelect(props:Props){\r\n  const labelId = `${props.nameVal}-label`;\r\n  return (\r\n    <FormControl className={props.className} variant={props.variant} size={props.size}>\r\n      <InputLabel id={labelId}>{props.label}</InputLabel>\r\n      <Controller\r\n        as={\r\n          <Select labelId={labelId} label={props.label}>\r\n            {props.children}\r\n          </Select>\r\n        }\r\n        name={props.nameVal}\r\n        control={props.control}\r\n        defaultValue={props.defaultValue}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\nexport default ReactHookFormSelect;","import React from \"react\";\r\nimport { Address } from \"../../Common/CommonVariables\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  AddressErrorsList,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \"../SubComponents/RadioQuestions\";\r\nimport ReactHookFormSelect from \"../SubComponents/ReactHookFormSelect\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  addressesList: Address[];\r\n  setAddresses: any;\r\n  addressId: string;\r\n  cityId: string;\r\n  stateId: string;\r\n  zipCodeId: string;\r\n  fromDateId: string;\r\n  toDateId: string;\r\n  forms: any;\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nlet addr = {\r\n  lastYearAddress: \"Default\",\r\n  lastYearAddressCity: \"Default\",\r\n  lastYearAddressState: \"Alaska\",\r\n  lastYearAddressZipCode: \"Default\",\r\n  lastYearAddressfrom: \"1990-01-01\",\r\n  lastYearAddressTo: \"1990-01-01\",\r\n};\r\n\r\nexport function DynamicAddressComponent(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n    setError,\r\n  } = props.forms;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: props.addressId,\r\n    }\r\n  );\r\n\r\n  const submit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(e.target.data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {fields.map((item, index) => (\r\n          <Accordion key={index}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography className={classes.text}>\r\n                Address {index + 1}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"baseline\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    className=\"col-12\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    name={`${props.addressId}[${index}].lastYearAddress`}\r\n                    inputRef={register({\r\n                      required: reqBits.lastYearAddress,\r\n                    })}\r\n                    defaultValue={item.lastYearAddress}\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    name={`${props.addressId}[${index}].lastYearAddressCity`}\r\n                    inputRef={register({\r\n                      required: reqBits.lastYearAddressCity,\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    defaultValue={item.lastYearAddressCity}\r\n                    type=\"text\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <ReactHookFormSelect\r\n                    className=\"col-12\"\r\n                    nameVal={`${props.addressId}[${index}].lastYearAddressState`}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    defaultValue={item.lastYearAddressState}\r\n                    label=\"State\"\r\n                    control={control}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    {states.map(function (object: any, i: number) {\r\n                      return (\r\n                        <MenuItem value={object.value} key={i}>\r\n                          {object.value}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </ReactHookFormSelect>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    name={`${props.addressId}[${index}].lastYearAddressZipCode`}\r\n                    inputRef={register({\r\n                      required: reqBits.lastYearAddressZipCode,\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    defaultValue={item.lastYearAddressZipCode}\r\n                    type=\"text\"\r\n                    label={\r\n                      \"Zip Code \" +\r\n                      (() => {\r\n                        return reqBits.zipCode == true ? \"*\" : \"\";\r\n                      })()\r\n                    }\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.addressId}[${index}].lastYearAddressfrom`}\r\n                    inputRef={register({\r\n                      required: reqBits.lastYearAddressfrom,\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    defaultValue={item.lastYearAddressfrom}\r\n                    size=\"small\"\r\n                    className=\"col-12\"\r\n                    helperText={\"From Date Require *\"}\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    // name={\r\n                    //   props.idPrefix + \".\" + \"toDateId\" + \"[\" + index + \"]\"\r\n                    // }\r\n                    name={`${props.addressId}[${index}].lastYearAddressTo`}\r\n                    inputRef={register({\r\n                      required: reqBits.lastYearAddressTo,\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    defaultValue={item.lastYearAddressTo}\r\n                    size=\"small\"\r\n                    className=\"col-12\"\r\n                    helperText={\"To Date Require *\"}\r\n                  ></TextField>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n            <Divider />\r\n            <AccordionActions\r\n              style={{\r\n                justifyContent: \"center\",\r\n                padding: \"20px 20px\",\r\n              }}\r\n            >\r\n              <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"col-6\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  id={\"id\" + index}\r\n                  onClick={(e) => remove(index)}\r\n                >\r\n                  Delete This\r\n                </Button>\r\n              </Grid>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-3\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => append(addr)}\r\n          >\r\n            Another Address\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Address,\r\n  EmploymentHistories,\r\n  EmploymentHistoryInfo,\r\n} from \"../../Common/CommonVariables\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  AddressErrorsList,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \"../SubComponents/RadioQuestions\";\r\nimport ReactHookFormSelect from \"../SubComponents/ReactHookFormSelect\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  employmentHistoryList: EmploymentHistories;\r\n  useForm: any;\r\n  setEmploymentHistoryList: any;\r\n};\r\n\r\nlet empHstry: EmploymentHistoryInfo = {\r\n  employmentHistoryfrom: \"\",\r\n  employmentHistoryTo: \"\",\r\n  employmentHistorystatus: \"\",\r\n  employmentHistoryposition: \"\",\r\n  employmentHistoryaddress: \"\",\r\n  employmentHistorycompanyPhone: \"\",\r\n  employmentHistoryreasonForLeaving: \"\",\r\n  employmentHistorysubjecttotheFMCSRs: \"\",\r\n  employmentHistorydrugandalcoholTesting: \"\",\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nexport function DynamicEmploymentHistoryComponent(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n    setError,\r\n  } = props.useForm;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: props.idPrefix,\r\n    }\r\n  );\r\n\r\n  const submit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(e.target.data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {fields.map((item, index) => (\r\n          <Accordion key={index}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography className={classes.text}>\r\n                Employment history {index + 1}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"baseline\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].employmentHistoryfrom`}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"date\"\r\n                    className=\"col-12\"\r\n                    defaultValue={item.employmentHistoryfrom}\r\n                    //useForms Handling Start\r\n                    inputRef={register({\r\n                      required: {\r\n                        // value: reqBits.employmentHistoryfrom,\r\n                        value: false,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    //useForms Handling End\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].employmentHistoryTo`}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    defaultValue={item.employmentHistoryTo}\r\n                    type=\"date\"\r\n                    className=\"col-12\"\r\n                    inputRef={register({\r\n                      required: {\r\n                        // value: reqBits.employmentHistoryTo,\r\n                        value: false,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    //useForms Handling End\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].employmentHistorystatus`}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    defaultValue={item.employmentHistorystatus}\r\n                    label=\"Present or Last Employer \"\r\n                    className=\"col-12\"\r\n                    //useForms Handling Start\r\n                    inputRef={register({\r\n                      required: {\r\n                        // value: reqBits.employmentHistorystatus,\r\n                        value: false,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    //useForms Handling End\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    className=\"col-12\"\r\n                    name={`${props.idPrefix}[${index}].employmentHistoryposition`}\r\n                    defaultValue={item.employmentHistoryposition}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    label=\"Position Held \"\r\n                    //useForms Handling Start\r\n                    inputRef={register({\r\n                      required: {\r\n                        // value: reqBits.employmentHistoryposition,\r\n                        value: false,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    //useForms Handling End\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].employmentHistorycompanyPhone`}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    defaultValue={item.employmentHistorycompanyPhone}\r\n                    label=\"Company Phone\"\r\n                    className=\"col-12\"\r\n                    //useForms Handling Start\r\n                    inputRef={register({\r\n                      required: {\r\n                        // value: reqBits.employmentHistorycompanyPhone,\r\n                        value: false,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    //useForms Handling End\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    className=\"col-12\"\r\n                    name={`${props.idPrefix}[${index}].employmentHistoryreasonForLeaving`}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    defaultValue={item.employmentHistoryreasonForLeaving}\r\n                    type=\"text\"\r\n                    label=\"Reason for leaving\"\r\n                    //useForms Handling Start\r\n\r\n                    inputRef={register({\r\n                      required: {\r\n                        // value: reqBits.employmentHistoryreasonForLeaving,\r\n                        value: false,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    //useForms Handling End\r\n                  ></TextField>\r\n                </Grid>\r\n                {/* <Grid item xs={1}></Grid> */}\r\n\r\n                <RadioQuestions\r\n                  id={`${props.idPrefix}[${index}].employmentHistorysubjecttotheFMCSRs`}\r\n                  question=\"Were you subject to the FMCSRs while employed here?\"\r\n                  optionList={[\"Yes\", \"No\"]}\r\n                  optionValue={[\"Yes\", \"No\"]}\r\n                  useForm={props.useForm}\r\n                  xsSize={11}\r\n                  defaultSelected={\"Yes\"}\r\n                  isReq={reqBits.employmentHistorysubjecttotheFMCSRs}\r\n                ></RadioQuestions>\r\n\r\n                <RadioQuestions\r\n                  id={`${props.idPrefix}[${index}].employmentHistorydrugandalcoholTesting`}\r\n                  optionValue={[\"Yes\", \"No\"]}\r\n                  question=\"Was your job designated as a safety-sensitive function in\r\n                  any DOT- regulated mode subject to the drug and alcohol\r\n                  testing requirements of 49 CFR Part 40?\"\r\n                  optionList={[\"Yes\", \"No\"]}\r\n                  useForm={props.useForm}\r\n                  xsSize={11}\r\n                  isReq={reqBits.employmentHistorydrugandalcoholTesting}\r\n                ></RadioQuestions>\r\n              </Grid>\r\n            </AccordionDetails>\r\n            <Divider />\r\n            <AccordionActions\r\n              style={{\r\n                justifyContent: \"center\",\r\n                padding: \"20px 20px\",\r\n              }}\r\n            >\r\n              <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"col-6\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  id={\"id\" + index}\r\n                  onClick={() => remove(index)}\r\n                >\r\n                  Delete This\r\n                </Button>\r\n              </Grid>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-5\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              append({\r\n                empHstry,\r\n              })\r\n            }\r\n          >\r\n            Another Employment History\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Address,\r\n  tDrivingExperiences,\r\n  tDrivingExperience,\r\n} from \"../../Common/CommonVariables\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  AddressErrorsList,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \"../SubComponents/RadioQuestions\";\r\nimport ReactHookFormSelect from \"../SubComponents/ReactHookFormSelect\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  drivingExperienceList: tDrivingExperiences;\r\n  useForm: any;\r\n  setDrivingExperienceList: any;\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nlet dummyData: tDrivingExperience = {\r\n  experienceclassofEquipment: \"\",\r\n  experienceFromDate: \"\",\r\n  experienceToDate: \"\",\r\n  experiencenumberOfMiles: 0,\r\n};\r\n\r\nexport function DynamicDrivingExperienceComponent(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n    setError,\r\n  } = props.useForm;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: props.idPrefix,\r\n    }\r\n  );\r\n\r\n  const submit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(e.target.data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {fields.map((item, index) => (\r\n          <Accordion key={index}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>\r\n                Experience {index + 1}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    // {`${props.idPrefix}[${index}].lastYearAddressTo`}\r\n                    name={`${props.idPrefix}[${index}].experienceclassofEquipment`}\r\n                    inputRef={register({\r\n                      required: reqBits.experienceclassofEquipment,\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    defaultValue={item.experienceclassofEquipment}\r\n                    type=\"text\"\r\n                    label=\"Class of Equipment\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].experiencenumberOfMiles`}\r\n                    inputRef={register({\r\n                      required: reqBits.experiencenumberOfMiles,\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    defaultValue={item.experiencenumberOfMiles}\r\n                    type=\"number\"\r\n                    label=\"Approximate Number of Miles\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].experienceFromDate`}\r\n                    inputRef={register({\r\n                      required: reqBits.experienceFromDate,\r\n                    })}\r\n                    defaultValue={item.experienceFromDate}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    type=\"date\"\r\n                    helperText=\"From Date\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].experienceToDate`}\r\n                    inputRef={register({\r\n                      required: reqBits.experienceToDate,\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    defaultValue={item.experienceToDate}\r\n                    size=\"small\"\r\n                    type=\"date\"\r\n                    helperText=\"To Date\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n            <AccordionActions\r\n              style={{\r\n                justifyContent: \"center\",\r\n                padding: \"20px 20px\",\r\n              }}\r\n            >\r\n              <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"col-6\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  id={\"id\" + index}\r\n                  onClick={() => remove(index)}\r\n                >\r\n                  Delete This\r\n                </Button>\r\n              </Grid>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-5\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              append({\r\n                dummyData,\r\n              })\r\n            }\r\n          >\r\n            Another Driving Expirence\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Address,\r\n  EmploymentAccidentHistories,\r\n} from \"../../Common/CommonVariables\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  AddressErrorsList,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \"../SubComponents/RadioQuestions\";\r\nimport ReactHookFormSelect from \"../SubComponents/ReactHookFormSelect\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  employmentAccidentHistoryList: EmploymentAccidentHistories;\r\n  useForm: any;\r\n  setEmploymentAccidentHistoryList: any;\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nlet addr = {\r\n  lastYearAddress: \"\",\r\n  lastYearAddressCity: \"\",\r\n  lastYearAddressState: \"\",\r\n  lastYearAddressZipCode: \"\",\r\n  lastYearAddressfrom: \"1990-01-01\",\r\n  lastYearAddressTo: \"1990-01-01\",\r\n};\r\n\r\nexport function DynamicEmploymentAccidentHistoryComponent(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n    setError,\r\n  } = props.useForm;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: props.idPrefix,\r\n    }\r\n  );\r\n\r\n  const submit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(e.target.data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {fields.map((item, index) => (\r\n          <Accordion elevation={3} key={index}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.heading}>\r\n                Accident Record for past three (3) years: {index + 1}\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"baseline\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    inputRef={register({\r\n                      required: reqBits.dateOfAccident,\r\n                    })}\r\n                    name={`${props.idPrefix}[${index}].dateOfAccident`}\r\n                    defaultValue={item.dateOfAccident}\r\n                    helperText=\"Date of Accident\"\r\n                    type=\"date\"\r\n                    size=\"small\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    defaultValue={item.numberofFatalities}\r\n                    label=\"Num of Fatalities\"\r\n                    inputRef={register({\r\n                      required: reqBits.numberofFatalities,\r\n                    })}\r\n                    name={`${props.idPrefix}[${index}].numberofFatalities`}\r\n                    size=\"small\"\r\n                    type=\"number\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    defaultValue={item.numberofPeopleleInjured}\r\n                    label=\"Num of Injured People\"\r\n                    inputRef={register({\r\n                      required: reqBits.numberofPeopleleInjured,\r\n                    })}\r\n                    name={`${props.idPrefix}[${index}].numberofPeopleleInjured`}\r\n                    size=\"small\"\r\n                    className=\"col-12\"\r\n                    type=\"number\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    size=\"small\"\r\n                    defaultValue={item.NatureOfAccidents}\r\n                    label=\"Nature of Accidents\"\r\n                    inputRef={register({\r\n                      required: reqBits.NatureOfAccidents,\r\n                    })}\r\n                    name={`${props.idPrefix}[${index}].NatureOfAccidents`}\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    className=\"col-12\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    defaultValue={item.LocationOfAccidents}\r\n                    label=\"Location of Accident\"\r\n                    inputRef={register({\r\n                      required: reqBits.LocationOfAccidents,\r\n                    })}\r\n                    name={`${props.idPrefix}[${index}].LocationOfAccidents`}\r\n                    size=\"small\"\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    className=\"col-12\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n            <AccordionActions\r\n              style={{\r\n                justifyContent: \"center\",\r\n                padding: \"20px 20px\",\r\n              }}\r\n            >\r\n              <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"col-6\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  id={\"id\" + index}\r\n                  onClick={() => remove(index)}\r\n                >\r\n                  Delete This\r\n                </Button>\r\n              </Grid>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-5\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              append({\r\n                addr,\r\n              })\r\n            }\r\n          >\r\n            Another Accident History\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Address } from \"../../Common/CommonVariables\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  AddressErrorsList,\r\n  tTrafficConvictions,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \"../SubComponents/RadioQuestions\";\r\nimport ReactHookFormSelect from \"../SubComponents/ReactHookFormSelect\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  trafficConvictionsList: tTrafficConvictions;\r\n  useForm: any;\r\n  settrafficConvictionsList: any;\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nlet dummy = {\r\n  dateOfViolation: \"Default\",\r\n  LocationOfViolation: \"Default\",\r\n  ViolationCharge: \"Default\",\r\n  ViolationPenalty: \"Default\",\r\n};\r\n\r\nexport function DynamicTrafficConvictions(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n    setError,\r\n  } = props.useForm;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: props.idPrefix,\r\n    }\r\n  );\r\n\r\n  const submit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(e.target.data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {fields.map((item, index) => (\r\n          <Accordion elevation={3} key={index}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.smallHeading}>\r\n                Traffic Convictions and Forfeitures for the last three (3) years\r\n                : 1\r\n                <Typography className={classes.caption}>\r\n                  (other than parking violations)\r\n                </Typography>\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"baseline\"\r\n                spacing={1}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={`${props.idPrefix}[${index}].dateOfViolation`}\r\n                    inputRef={register({\r\n                      required: reqBits.dateOfViolation,\r\n                    })}\r\n                    defaultValue={item.dateOfViolation}\r\n                    size=\"small\"\r\n                    helperText=\"Date Of Violation\"\r\n                    type=\"date\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    name={`${props.idPrefix}[${index}].ViolationPenalty`}\r\n                    inputRef={register({\r\n                      required: reqBits.ViolationPenalty,\r\n                    })}\r\n                    defaultValue={item.ViolationPenalty}\r\n                    size=\"small\"\r\n                    label=\"Penalty\"\r\n                    type=\"number\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Location\"\r\n                    multiline\r\n                    name={`${props.idPrefix}[${index}].LocationOfViolation`}\r\n                    inputRef={register({\r\n                      required: reqBits.LocationOfViolation,\r\n                    })}\r\n                    size=\"small\"\r\n                    defaultValue={item.LocationOfViolation}\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    className=\"col-12\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Charge\"\r\n                    multiline\r\n                    name={`${props.idPrefix}[${index}].ViolationCharge`}\r\n                    inputRef={register({\r\n                      required: reqBits.ViolationCharge,\r\n                    })}\r\n                    size=\"small\"\r\n                    defaultValue={item.ViolationCharge}\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    className=\"col-12\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n            <AccordionActions\r\n              style={{\r\n                justifyContent: \"center\",\r\n                padding: \"20px 20px\",\r\n              }}\r\n            >\r\n              <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"col-6\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  id={\"id\" + index}\r\n                  onClick={() => remove(index)}\r\n                >\r\n                  Delete This\r\n                </Button>\r\n              </Grid>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-5\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              append({\r\n                dummy,\r\n              })\r\n            }\r\n          >\r\n            Another Traffic Conviction\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Address,\r\n  EmploymentAccidentHistories,\r\n  driverLicenseDummyElement,\r\n} from \"../../Common/CommonVariables\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  tDriverLicenses,\r\n  AddressErrorsList,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \"../SubComponents/RadioQuestions\";\r\nimport ReactHookFormSelect from \"../SubComponents/ReactHookFormSelect\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  dirverLicenseList: tDriverLicenses;\r\n  useForm: any;\r\n  setdirverLicenseList: any;\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nexport function DynamicDriverLicense(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n    setError,\r\n  } = props.useForm;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: props.idPrefix,\r\n    }\r\n  );\r\n\r\n  const submit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(e.target.data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {fields.map((item, index) => (\r\n          <Accordion elevation={3}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.smallHeading}>\r\n                Driver’s License 1\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"baseline\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className=\"col-12\"\r\n                  >\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                      State\r\n                    </InputLabel>\r\n                    <Select\r\n                      // {`${props.idPrefix}[${index}].lastYearAddressTo`}\r\n                      labelId=\"demo-simple-select-outlined-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      label=\"State\"\r\n                      name={`${props.idPrefix}[${index}].licenceExpirationDate`}\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.licenceExpirationDate,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      {states.map(function (object: any, i: number) {\r\n                        return (\r\n                          <MenuItem value={object.value} key={i}>\r\n                            {object.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].licenceNumber`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.licenceNumber,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    label=\"License\"\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].licenceType`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.licenceType,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    label=\"Type\"\r\n                    size=\"small\"\r\n                    className=\"col-12\"\r\n                    type=\"text\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].licenceEndoresment`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.licenceEndoresment,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    id=\"outlined-multiline-static\"\r\n                    size=\"small\"\r\n                    label=\"Endorsement\"\r\n                    rows={4}\r\n                    defaultValue=\"\"\r\n                    variant=\"outlined\"\r\n                    className=\"col-12\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].licenceExpirationDate`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.licenceExpirationDate,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    id=\"outlined-multiline-static\"\r\n                    helperText=\"Expiration Date\"\r\n                    size=\"small\"\r\n                    type=\"date\"\r\n                    rows={4}\r\n                    defaultValue=\"\"\r\n                    variant=\"outlined\"\r\n                    className=\"col-12\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>{\" \"}\r\n            <AccordionActions\r\n              style={{\r\n                justifyContent: \"center\",\r\n                padding: \"20px 20px\",\r\n              }}\r\n            >\r\n              <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"col-6\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  id={\"id\" + index}\r\n                  onClick={() => remove(index)}\r\n                >\r\n                  Delete This\r\n                </Button>\r\n              </Grid>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-5\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              append({\r\n                driverLicenseDummyElement,\r\n              })\r\n            }\r\n          >\r\n            Another Driver License\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n//TODO\r\n","import React from \"react\";\r\nimport {\r\n  Address,\r\n  EmploymentAccidentHistories,\r\n  driverLicenseDummyElement,\r\n} from \"../../Common/CommonVariables\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useFieldArray, useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  tDriverLicenses,\r\n  AddressErrorsList,\r\n  tReferences,\r\n  ReferenceDummyElement,\r\n  tReferenceInfo,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \"../SubComponents/RadioQuestions\";\r\nimport ReactHookFormSelect from \"../SubComponents/ReactHookFormSelect\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  referenceList: tReferences;\r\n  useForm: any;\r\n  setReferenceList: any;\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nexport function DynamicReferences(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    trigger,\r\n    setError,\r\n  } = props.useForm;\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: props.idPrefix,\r\n    }\r\n  );\r\n\r\n  const submit = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(e.target.data);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {fields.map((item, index) => (\r\n          <Accordion elevation={3}>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography className={classes.smallHeading}>\r\n                References\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-around\"\r\n                alignItems=\"baseline\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].referencefirstName`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.referencefirstName,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    label=\"First Name\"\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].referencelastName`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.referencelastName,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    label=\"Last Name\"\r\n                    size=\"small\"\r\n                    type=\"text\"\r\n                    className=\"col-12\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].referenceCompany`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.referenceCompany,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    variant=\"outlined\"\r\n                    label=\"Company\"\r\n                    size=\"small\"\r\n                    className=\"col-12\"\r\n                    type=\"text\"\r\n                  ></TextField>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <TextField\r\n                    name={`${props.idPrefix}[${index}].referenceTitle`}\r\n                    inputRef={register({\r\n                      required: {\r\n                        value: reqBits.referenceTitle,\r\n                        message: RequireError,\r\n                      },\r\n                    })}\r\n                    id=\"outlined-multiline-static\"\r\n                    size=\"small\"\r\n                    label=\"Title\"\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    className=\"col-12\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n            <AccordionActions\r\n              style={{\r\n                justifyContent: \"center\",\r\n                padding: \"20px 20px\",\r\n              }}\r\n            >\r\n              <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  className=\"col-6\"\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  id={\"id\" + index}\r\n                  onClick={() => remove(index)}\r\n                >\r\n                  Delete This\r\n                </Button>\r\n              </Grid>\r\n            </AccordionActions>\r\n          </Accordion>\r\n        ))}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-5\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() =>\r\n              append({\r\n                driverLicenseDummyElement,\r\n              })\r\n            }\r\n          >\r\n            Another Reference\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n//TODO\r\n","import {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  addr,\r\n  debug,\r\n  startTimeVal,\r\n  states,\r\n  WrongPatternError,\r\n  RequireError,\r\n  EmploymentHistories,\r\n  employmentHistoryDummyElement,\r\n  drivingExperienceDummyElement,\r\n  tDrivingExperiences,\r\n  employmentAccidentHistoryDummyElement,\r\n  EmploymentAccidentHistories,\r\n  trafficConvictionDummyElement,\r\n  tTrafficConvictions,\r\n  tTrafficConvictionInfo,\r\n  tDriverLicenses,\r\n  driverLicenseDummyElement,\r\n  tDriverLicenseInfo,\r\n  reqBits,\r\n} from \"../Common/CommonVariables\";\r\nimport { Addresses, tReferences } from \"../Common/CommonVariables\";\r\nimport RadioQuestions from \"./SubComponents/RadioQuestions\";\r\nimport AddressesComponent from \"./SubComponents/AddressesComponent\";\r\nimport EmploymentHistory from \"./SubComponents/EmploymentHistory\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\nimport EmploymentAccidentHistory from \"./SubComponents/EmploymentAccidentHistory\";\r\nimport TrafficConvictions from \"./SubComponents/TrafficConvictions\";\r\nimport DriverLicense from \"./SubComponents/DriverLicense\";\r\nimport ReactHookFormSelect from \"./SubComponents/ReactHookFormSelect\";\r\nimport ReactUseFormTextField from \"./SubComponents/ReactUseFormTextField\";\r\nimport { DynamicAddressComponent } from \"./DynamicAddition/DynamicAddressComponent\";\r\nimport { DynamicEmploymentHistoryComponent } from \"./DynamicAddition/DynamicEmploymentHistoryComponent\";\r\nimport { DynamicDrivingExperienceComponent } from \"./DynamicAddition/DynamicDrivingExperienceComponent\";\r\nimport { DynamicEmploymentAccidentHistoryComponent } from \"./DynamicAddition/DynamicEmploymentAccidentHistoryComponent\";\r\nimport { DynamicTrafficConvictions } from \"./DynamicAddition/DynamicTrafficConvictions\";\r\nimport { DynamicDriverLicense } from \"./DynamicAddition/DynamicDriverLicense\";\r\nimport { update } from \"../services/updateApi\";\r\nimport { PinDropRounded } from \"@material-ui/icons\";\r\nimport { DynamicReferences } from \"./DynamicAddition/DynamicReferences\";\r\nimport { useRef } from \"react\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    default: {},\r\n    paper: {\r\n      color: theme.palette.text.secondary,\r\n      padding: \"5px 10px\",\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(19),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    smallHeading: {\r\n      fontSize: theme.typography.pxToRem(17),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      color: theme.palette.text.secondary,\r\n      textJustify: \"inter-word\",\r\n    },\r\n    text: {\r\n      fontSize: theme.typography.pxToRem(17),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      color: theme.palette.text.secondary,\r\n      textJustify: \"inter-word\",\r\n    },\r\n    caption: {\r\n      fontSize: theme.typography.pxToRem(12),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      color: theme.palette.text.secondary,\r\n      textAlign: \"left\",\r\n    },\r\n    paperProminantStyle: {\r\n      margin: \"5px 0px\",\r\n      elevation: 3,\r\n      padding: \"20px 0px\",\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    questionTextStyle: {\r\n      textAlign: \"left\",\r\n    },\r\n  })\r\n);\r\n\r\nlet UpdateAddressesList: Addresses;\r\nlet UdpatedEmploymentHistoryList: EmploymentHistories;\r\nlet UpdateDrivingExperienceList: tDrivingExperiences;\r\nlet EmploymentAccidentHistoryList: EmploymentAccidentHistories;\r\nlet TrafficConvictionsList: tTrafficConvictions;\r\nlet DriverLicenseList: tDriverLicenses;\r\nlet ReferencesList: tReferences;\r\n\r\ntype Props = { data?: any; handler?: any };\r\n\r\nfunction EmpApplicationForm3(props: Props) {\r\n  const Forms = useForm({ defaultValues: props.data });\r\n  const { register, handleSubmit, errors, control } = Forms;\r\n\r\n  const sigPad = useRef<any>();\r\n  let base64SignatureImage = \"\";\r\n\r\n  const clearSigPad = () => {\r\n    if (sigPad && sigPad.current) {\r\n      sigPad.current?.clear();\r\n      base64SignatureImage = \"\";\r\n    }\r\n  };\r\n\r\n  const saveImage = () => {\r\n    if (sigPad.current && !sigPad.current.isEmpty()) {\r\n      base64SignatureImage = sigPad.current\r\n        ?.getTrimmedCanvas()\r\n        .toDataURL(\"image/png\");\r\n    }\r\n  };\r\n\r\n  if (debug === true) {\r\n    // props.data = props.data;\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (sigPad.current && sigPad.current.isEmpty()) return;\r\n    {\r\n      base64SignatureImage = sigPad.current\r\n        .getTrimmedCanvas()\r\n        .toDataURL(\"image/png\");\r\n    }\r\n    data.signature = base64SignatureImage;\r\n\r\n    console.log(data);\r\n    data.user_name = props.data.user_name;\r\n    const resdata = await update(data);\r\n    console.log(resdata);\r\n    props.handler[0]();\r\n  };\r\n\r\n  const updateReferencesList = (updateReferences: any) => {\r\n    console.log(\"------------Update Driver License List------------\");\r\n    ReferencesList = updateReferences;\r\n    console.log(ReferencesList);\r\n  };\r\n\r\n  const updateDriverLicenseList = (updateDriverLicense: any) => {\r\n    console.log(\"------------Update Driver License List------------\");\r\n    DriverLicenseList = updateDriverLicense;\r\n    console.log(DriverLicenseList);\r\n  };\r\n\r\n  const updateTrafficConvictionsList = (updateTrafficConvictions: any) => {\r\n    console.log(\"------------Update Traffic Convictions List------------\");\r\n    TrafficConvictionsList = updateTrafficConvictions;\r\n    console.log(TrafficConvictionsList);\r\n  };\r\n\r\n  const updateEmploymentAccidentHistoryList = (\r\n    updateEmploymentAccidentHistories: any\r\n  ) => {\r\n    console.log(\r\n      \"------------Update Employment Accident History List------------\"\r\n    );\r\n    EmploymentAccidentHistoryList = updateEmploymentAccidentHistories;\r\n    console.log(EmploymentAccidentHistoryList);\r\n  };\r\n\r\n  const updateDrivingExperienceList = (updateDrivingExperiences: any) => {\r\n    console.log(\"------------Update Driving Experience List------------\");\r\n    UpdateDrivingExperienceList = updateDrivingExperiences;\r\n    console.log(UpdateDrivingExperienceList);\r\n  };\r\n\r\n  const updateEmploymentHistoryList = (udpatedEmploymentHistory: any) => {\r\n    console.log(\"------------Updated Employment History List------------\");\r\n    UdpatedEmploymentHistoryList = udpatedEmploymentHistory;\r\n    console.log(UdpatedEmploymentHistoryList);\r\n  };\r\n\r\n  const updateAddressList = (updatedAddresses: any) => {\r\n    console.log(\"------------Updated Addresses------------\");\r\n    //  console.log(updatedAddresses);\r\n    UpdateAddressesList = updatedAddresses;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ backgroundColor: \"#fafafa\" }}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.paper, classes.paperProminantStyle)}\r\n              >\r\n                <h4>AWB Transport Inc., Employment Application</h4>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"baseline\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Paper\r\n                    style={{ margin: \"10px 0px\" }}\r\n                    elevation={3}\r\n                    className={(classes.heading, classes.paperProminantStyle)}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"baseline\"\r\n                      spacing={3}\r\n                    >\r\n                      <Grid item xs={12} className={classes.heading}>\r\n                        COMMERCIAL DRIVER APPLICATION\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          name=\"companyName\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          className=\"col-10\"\r\n                          label=\"Company Name\"\r\n                          error={\r\n                            errors.companyName === undefined ? false : true\r\n                          }\r\n                          helperText={\r\n                            errors.companyName && errors.companyName?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.companyName,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          className=\"col-10\"\r\n                          name=\"companyAddress\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Address\"\r\n                          error={\r\n                            errors.companyAddress == undefined ? false : true\r\n                          }\r\n                          helperText={\r\n                            errors.companyAddress &&\r\n                            errors.companyAddress?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.companyAddress,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          name=\"companyCity\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"City\"\r\n                          className=\"col-6\"\r\n                          error={\r\n                            errors.companyCity === undefined ? false : true\r\n                          }\r\n                          helperText={\r\n                            errors.companyCity && errors.companyCity?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.companyCity,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <ReactHookFormSelect\r\n                          nameVal=\"companyState\"\r\n                          label=\"State\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          control={control}\r\n                          className=\"col-10\"\r\n                          defaultValue={props.data.companyState}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {states.map(function (object: any, i: number) {\r\n                            return (\r\n                              <MenuItem value={object.value} key={i}>\r\n                                {object.value}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </ReactHookFormSelect>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          name=\"companyPostCode\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Zip Code\"\r\n                          className=\"col-6\"\r\n                          error={\r\n                            errors.companyPostCode == undefined ? false : true\r\n                          }\r\n                          helperText={\r\n                            errors.companyPostCode &&\r\n                            errors.companyPostCode?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.companyPostCode,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"baseline\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Paper\r\n                    style={{ margin: \"10px 0px\" }}\r\n                    elevation={3}\r\n                    className={(classes.heading, classes.paperProminantStyle)}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-evenly\"\r\n                      alignItems=\"center\"\r\n                      spacing={3}\r\n                    >\r\n                      <Grid item xs={12} className={classes.heading}>\r\n                        APPLICANT INFORMATION\r\n                      </Grid>\r\n\r\n                      <Grid item xs={10}>\r\n                        <Paper\r\n                          className={\r\n                            (classes.heading, classes.paperProminantStyle)\r\n                          }\r\n                        >\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={2}\r\n                          >\r\n                            <Grid item xs={4}>\r\n                              <Typography className={classes.text}>\r\n                                Application Date:\r\n                              </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={8}>\r\n                              <TextField\r\n                                name=\"applicationApplyDate\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"date\"\r\n                                className=\"col-10\"\r\n                                label=\"\"\r\n                                error={\r\n                                  errors.applicationApplyDate == undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                inputRef={register({\r\n                                  required: reqBits.applicationApplyDate,\r\n                                })}\r\n                                defaultValue={props.data.applicationApplyDate}\r\n                                helperText={\r\n                                  errors.applicationApplyDate &&\r\n                                  errors.applicationApplyDate?.type.toUpperCase() +\r\n                                    \" Error\"\r\n                                }\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                              <RadioQuestions\r\n                                id=\"applicationApplyAsPosition\"\r\n                                optionValue={[\r\n                                  \"contractor\",\r\n                                  \"driver\",\r\n                                  \"contractor_driver\",\r\n                                  \"other\",\r\n                                ]}\r\n                                question=\"Position applying for:\"\r\n                                optionList={[\r\n                                  \"Contractor\",\r\n                                  \"Driver\",\r\n                                  \"Contractor's Driver\",\r\n                                  \"Other\",\r\n                                ]}\r\n                                defaultSelected={\r\n                                  props.data.applicationApplyAsPosition\r\n                                }\r\n                                useForm={Forms}\r\n                                isReq={false}\r\n                                xsSize={11}\r\n                              ></RadioQuestions>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={10}>\r\n                        <Paper\r\n                          style={{ margin: \"10px 0px\" }}\r\n                          elevation={3}\r\n                          className={\r\n                            (classes.paper, classes.paperProminantStyle)\r\n                          }\r\n                        >\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                            alignItems=\"center\"\r\n                            spacing={1}\r\n                          >\r\n                            <Grid item xs={5}>\r\n                              <TextField\r\n                                name=\"applicantfirstName\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.applicantfirstName === undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                label=\"First Name\"\r\n                                helperText={\r\n                                  errors.applicantfirstName &&\r\n                                  errors.applicantfirstName?.message\r\n                                }\r\n                                inputRef={register({\r\n                                  required: {\r\n                                    value: reqBits.applicantfirstName,\r\n                                    message: RequireError,\r\n                                  },\r\n                                })}\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <TextField\r\n                                name=\"applicantLastName\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.applicantLastName === undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                label=\"Last Name\"\r\n                                inputRef={register({\r\n                                  required: reqBits.applicantLastName,\r\n                                })}\r\n                                helperText={\r\n                                  errors.applicantLastName &&\r\n                                  errors.applicantLastName?.type.toUpperCase() +\r\n                                    \" Error\"\r\n                                }\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                              <TextField\r\n                                name=\"applicantPhoneNumber\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.applicantPhoneNumber == undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                label=\"Phone Number\"\r\n                                helperText={\r\n                                  errors.applicantPhoneNumber &&\r\n                                  errors.applicantPhoneNumber?.message\r\n                                }\r\n                                inputRef={register({\r\n                                  required: {\r\n                                    value: reqBits.applicantPhoneNumber,\r\n                                    message: RequireError,\r\n                                  },\r\n                                  pattern: {\r\n                                    value: /^([0-9]{3}[-.][0-9]{3}[-.][0-9]{4}[-. ][x][0-9]{4})$/,\r\n                                    message:\r\n                                      WrongPatternError +\r\n                                      \" : ###-###-#### x####\",\r\n                                  },\r\n                                })}\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <TextField\r\n                                name=\"emergencyContactfirstName\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.emergencyContactfirstName == undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                label=\"Emergency: First Name\"\r\n                                helperText={\r\n                                  errors.emergencyContactfirstName &&\r\n                                  errors.emergencyContactfirstName?.message\r\n                                }\r\n                                inputRef={register({\r\n                                  required: {\r\n                                    value: reqBits.emergencyContactfirstName,\r\n                                    message: RequireError,\r\n                                  },\r\n                                })}\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <TextField\r\n                                name=\"emergencyContactlastName\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"text\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.emergencyContactlastName == undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                label=\"Emergency: Last Name\"\r\n                                inputRef={register({\r\n                                  required: reqBits.emergencyContactlastName,\r\n                                })}\r\n                                helperText={\r\n                                  errors.emergencyContactlastName &&\r\n                                  errors.emergencyContactlastName?.type.toUpperCase() +\r\n                                    \" Error\"\r\n                                }\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                              <TextField\r\n                                name=\"emergencyContactNumber\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"tel\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.emergencyContactNumber == undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                label=\"Emergency: Mobile Num\"\r\n                                helperText={\r\n                                  errors.emergencyContactNumber &&\r\n                                  errors.emergencyContactNumber?.message\r\n                                }\r\n                                inputRef={register({\r\n                                  required: {\r\n                                    value: reqBits.emergencyContactNumber,\r\n                                    message: RequireError,\r\n                                  },\r\n                                  pattern: {\r\n                                    value: /^([0-9]{3}[-.][0-9]{3}[-.][0-9]{4}[-. ][x][0-9]{4})$/,\r\n                                    message:\r\n                                      WrongPatternError +\r\n                                      \" : ###-###-#### x####\",\r\n                                  },\r\n                                })}\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <TextField\r\n                                name=\"age\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"number\"\r\n                                className=\"col-12\"\r\n                                error={errors.age == undefined ? false : true}\r\n                                label=\"Age\"\r\n                                helperText={errors.age && errors.age?.message}\r\n                                inputRef={register({\r\n                                  required: {\r\n                                    value: reqBits.age,\r\n                                    message: RequireError,\r\n                                  },\r\n                                })}\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                              <TextField\r\n                                name=\"applicantdateofbirth\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"date\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.applicantdateofbirth == undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                label=\"Date of Birth\"\r\n                                inputRef={register({\r\n                                  required: reqBits.applicantdateofbirth,\r\n                                })}\r\n                                helperText={\r\n                                  errors.applicantdateofbirth &&\r\n                                  errors.applicantdateofbirth?.type.toUpperCase() +\r\n                                    \" Error\"\r\n                                }\r\n                              ></TextField>\r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                              <TextField\r\n                                name=\"physicalExamExpirationDate\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                type=\"date\"\r\n                                className=\"col-12\"\r\n                                error={\r\n                                  errors.physicalExamExpirationDate == undefined\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                helperText=\"Phyical Exam Exp Date\"\r\n                                inputRef={register({\r\n                                  required: reqBits.physicalExamExpirationDate,\r\n                                })}\r\n                                // helperText={\r\n                                //   errors.physicalExamExpirationDate == undefined\r\n                                //     ? \"\"\r\n                                //     : \"Exp Date \" +\r\n                                //       errors.physicalExamExpirationDate?.type.toUpperCase() +\r\n                                //       \" Error\"\r\n                                // }\r\n                              ></TextField>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Paper\r\n                    style={{ margin: \"10px 0px\" }}\r\n                    elevation={3}\r\n                    className={(classes.paper, classes.paperProminantStyle)}\r\n                  >\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-around\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        className={classes.heading}\r\n                        style={{ textAlign: \"center\", margin: \"10px 0px\" }}\r\n                      >\r\n                        ADDRESS\r\n                      </Grid>\r\n\r\n                      <Grid item xs={10}>\r\n                        <DynamicAddressComponent\r\n                          idPrefix=\"applicantAddresses\"\r\n                          setAddresses={updateAddressList}\r\n                          addressesList={props.data.applicantAddresses}\r\n                          addressId=\"applicantAddresses\"\r\n                          cityId=\"\"\r\n                          stateId=\"\"\r\n                          zipCodeId=\"\"\r\n                          fromDateId=\"\"\r\n                          toDateId=\"\"\r\n                          forms={Forms}\r\n                        ></DynamicAddressComponent>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-around\"\r\n                  alignItems=\"center\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={12} className={classes.heading}>\r\n                    COMPANY HISTORY\r\n                  </Grid>\r\n\r\n                  <Grid item xs={11}>\r\n                    <Paper\r\n                      style={{ margin: \"10px 0px\" }}\r\n                      elevation={3}\r\n                      className={(classes.heading, classes.paperProminantStyle)}\r\n                    >\r\n                      <RadioQuestions\r\n                        id=\"everWorkedForCompany\"\r\n                        question=\"Have you worked for this company before?\"\r\n                        optionValue={[\"Yes\", \"No\"]}\r\n                        optionList={[\"Yes\", \"No\"]}\r\n                        defaultSelected={props.data.everWorkedForCompany}\r\n                        useForm={Forms}\r\n                        isReq={reqBits.everWorkedForCompany}\r\n                      ></RadioQuestions>\r\n                    </Paper>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} className={classes.heading}>\r\n                    EDUCATION HISTORY\r\n                  </Grid>\r\n\r\n                  <Grid item xs={11}>\r\n                    <Paper\r\n                      style={{ margin: \"10px 0px\" }}\r\n                      elevation={3}\r\n                      className={(classes.heading, classes.paperProminantStyle)}\r\n                    >\r\n                      <RadioQuestions\r\n                        id=\"applicantSchoolGrade\"\r\n                        question=\"Please circle the highest School grade completed\"\r\n                        optionValue={[\r\n                          \"1\",\r\n                          \"2\",\r\n                          \"3\",\r\n                          \"4\",\r\n                          \"5\",\r\n                          \"6\",\r\n                          \"7\",\r\n                          \"8\",\r\n                          \"9\",\r\n                          \"10\",\r\n                          \"11\",\r\n                          \"12\",\r\n                        ]}\r\n                        optionList={[\r\n                          \"1\",\r\n                          \"2\",\r\n                          \"3\",\r\n                          \"4\",\r\n                          \"5\",\r\n                          \"6\",\r\n                          \"7\",\r\n                          \"8\",\r\n                          \"9\",\r\n                          \"10\",\r\n                          \"11\",\r\n                          \"12\",\r\n                        ]}\r\n                        defaultSelected={props.data.applicantSchoolGrade}\r\n                        isReq={reqBits.applicantSchoolGrade}\r\n                        useForm={Forms}\r\n                      ></RadioQuestions>\r\n\r\n                      <RadioQuestions\r\n                        id=\"applicantCollegeGrade\"\r\n                        question=\"Please circle the highest Collage grade completed\"\r\n                        optionValue={[\"1\", \"2\", \"3\", \"4\"]}\r\n                        optionList={[\"1\", \"2\", \"3\", \"4\"]}\r\n                        defaultSelected={props.data.applicantCollegeGrade}\r\n                        isReq={reqBits.applicantCollegeGrade}\r\n                        useForm={Forms}\r\n                      ></RadioQuestions>\r\n\r\n                      <RadioQuestions\r\n                        id=\"applicantPostGraduateGrade\"\r\n                        question=\"Please circle the highest Post Graduate grade completed\"\r\n                        optionValue={[\"1\", \"2\", \"3\", \"4\"]}\r\n                        optionList={[\"1\", \"2\", \"3\", \"4\"]}\r\n                        defaultSelected={props.data.applicantPostGraduateGrade}\r\n                        isReq={reqBits.applicantPostGraduateGrade}\r\n                        useForm={Forms}\r\n                      ></RadioQuestions>\r\n                    </Paper>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <hr style={{ marginBottom: \"10px\" }} />\r\n                  </Grid>\r\n                  <Grid item xs={12} className={classes.heading}>\r\n                    EMPLOYMENT HISTORY\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={10} className={classes.paper}>\r\n                    <Typography\r\n                      className={\r\n                        (classes.text, classes.questionTextStyle, \"col-12\")\r\n                      }\r\n                      style={{ textAlign: \"left\" }}\r\n                    >\r\n                      Give a COMPLETE RECORD of all employment for the past\r\n                      three (3) years, including any unemployment or self\r\n                      employment periods, and all commercial driving experience\r\n                      for the past ten (10) years.\r\n                      <i>(List most current first)</i>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={10}>\r\n                    <DynamicEmploymentHistoryComponent\r\n                      idPrefix=\"employmentHistory\"\r\n                      useForm={Forms}\r\n                      employmentHistoryList={props.data.employmentHistory}\r\n                      setEmploymentHistoryList={updateEmploymentHistoryList}\r\n                    ></DynamicEmploymentHistoryComponent>\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"5px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-around\"\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid item xs={12} className={classes.heading}>\r\n                    DRIVING EXPERIENCE\r\n                  </Grid>\r\n\r\n                  <Grid item xs={10}>\r\n                    <DynamicDrivingExperienceComponent\r\n                      idPrefix=\"employmentExperienceHistory\"\r\n                      drivingExperienceList={\r\n                        props.data.employmentExperienceHistory\r\n                      }\r\n                      useForm={Forms}\r\n                      setDrivingExperienceList={updateDrivingExperienceList}\r\n                    ></DynamicDrivingExperienceComponent>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"List states operated in, for the last five (5) years:\"\r\n                  name=\"lastFiveYearStatesOperate\"\r\n                  inputRef={register({\r\n                    required: reqBits.lastFiveYearStatesOperate,\r\n                  })}\r\n                  multiline\r\n                  rows={4}\r\n                  defaultValue={props.data.lastFiveYearStatesOperate}\r\n                  variant=\"outlined\"\r\n                  className=\"col-10\"\r\n                />\r\n                <br />\r\n                <br />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"List special courses/training completed (PTD/DDC, HAZMAT, ETC)\"\r\n                  multiline\r\n                  inputRef={register({\r\n                    required: reqBits.Listspecialcourses,\r\n                  })}\r\n                  name=\"Listspecialcourses\"\r\n                  rows={4}\r\n                  defaultValue={props.data.Listspecialcourses}\r\n                  variant=\"outlined\"\r\n                  className=\"col-10\"\r\n                />\r\n                <br />\r\n                <br />\r\n                <TextField\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"List any Safe Driving Awards you hold and from whom:\"\r\n                  multiline\r\n                  rows={4}\r\n                  inputRef={register({\r\n                    required: reqBits.ListanySafeDrivingAwards,\r\n                  })}\r\n                  name=\"ListanySafeDrivingAwards\"\r\n                  defaultValue={props.data.ListanySafeDrivingAwards}\r\n                  variant=\"outlined\"\r\n                  className=\"col-10\"\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  List of accident history\r\n                </Typography>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <DynamicEmploymentAccidentHistoryComponent\r\n                      idPrefix=\"employmentAccidentsHistory\"\r\n                      employmentAccidentHistoryList={\r\n                        props.data.employmentAccidentsHistory\r\n                      }\r\n                      useForm={Forms}\r\n                      setEmploymentAccidentHistoryList={\r\n                        updateEmploymentAccidentHistoryList\r\n                      }\r\n                    ></DynamicEmploymentAccidentHistoryComponent>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  List of traffic conviction\r\n                </Typography>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <DynamicTrafficConvictions\r\n                      idPrefix=\"violations\"\r\n                      trafficConvictionsList={[trafficConvictionDummyElement]}\r\n                      useForm={Forms}\r\n                      settrafficConvictionsList={updateTrafficConvictionsList}\r\n                    ></DynamicTrafficConvictions>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Driver’s License (list each driver’s license held in the past\r\n                  three(3) years):\r\n                </Typography>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <DynamicDriverLicense\r\n                      idPrefix=\"licences\"\r\n                      dirverLicenseList={[]}\r\n                      setdirverLicenseList={updateDriverLicenseList}\r\n                      useForm={Forms}\r\n                    ></DynamicDriverLicense>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <RadioQuestions\r\n                      id=\"deniedLicences\"\r\n                      question=\"Have you ever been denied a license, permit or privilege to operate a motor vehicle? *\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      xsSize={11}\r\n                      defaultSelected={\"Yes\"}\r\n                      isReq={reqBits.deniedLicences}\r\n                    ></RadioQuestions>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <RadioQuestions\r\n                      id=\"permitLicences\"\r\n                      question=\"Has any license, permit or privilege ever been suspended or revoked? *\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      xsSize={11}\r\n                      defaultSelected={\"Yes\"}\r\n                      isReq={reqBits.permitLicences}\r\n                    ></RadioQuestions>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <RadioQuestions\r\n                      id=\"reasonforUnableToPerformActions\"\r\n                      question=\"Is there any reason you might be unable to perform the functions of the job for which\r\n                      you have applied (as described in the job description)?\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      xsSize={11}\r\n                      defaultSelected={\"Yes\"}\r\n                      isReq={reqBits.reasonforUnableToPerformActions}\r\n                    ></RadioQuestions>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <RadioQuestions\r\n                      id=\"convictedofafelony\"\r\n                      question=\"Have you ever been convicted of a felony? *\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      xsSize={11}\r\n                      defaultSelected={\"Yes\"}\r\n                      isReq={reqBits.convictedofafelony}\r\n                    ></RadioQuestions>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <TextField\r\n                      id=\"outlined-multiline-static\"\r\n                      label=\"If the answers to any questions listed above are “yes”,\r\n                      give details\"\r\n                      multiline\r\n                      rows={4}\r\n                      inputRef={register({\r\n                        required: reqBits.answerToAnyQuestion,\r\n                      })}\r\n                      name=\"answerToAnyQuestion\"\r\n                      defaultValue={props.data.answerToAnyQuestion}\r\n                      variant=\"outlined\"\r\n                      className=\"col-11\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Driver’s License (list each driver’s license held in the past\r\n                  three(3) years):\r\n                </Typography>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2\">\r\n                    <DynamicReferences\r\n                      idPrefix=\"references\"\r\n                      referenceList={[]}\r\n                      setReferenceList={updateReferencesList}\r\n                      useForm={Forms}\r\n                    ></DynamicReferences>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  To Be Read and Signed by Applicant:\r\n                </Typography>\r\n                <div className=\"row\">\r\n                  <div className=\"col-1\"></div>\r\n                  <div className=\"col-10 mt-2 text-left\">\r\n                    <Typography>\r\n                      <ul>\r\n                        <li>\r\n                          It is agreed and understood that any misrepresentation\r\n                          given on this application shall be considered an act\r\n                          of dishonesty.\r\n                        </li>\r\n                        <li>\r\n                          It is agreed and understood that the motor carrier or\r\n                          his agents may investigate the applicant’s background\r\n                          to obtain any and all information of concern to\r\n                          applicant’s record, whether same is of record or not,\r\n                          and applicant releases employers and person named\r\n                          herein from all liability for any damages on account\r\n                          of his furnishing such information.\r\n                        </li>\r\n                        <li>\r\n                          It is also agreed and understood that under the Fair\r\n                          Credit Reporting Act, Public Law 91-508, I have been\r\n                          told that this investigation may include an\r\n                          investigating Consumer Report, including information\r\n                          regarding my character, general reputation, personal\r\n                          characteristics, and mode of living.\r\n                        </li>\r\n                        <li>\r\n                          I agree to furnish such additional information and\r\n                          complete such examinations as may be required to\r\n                          complete my application file.\r\n                        </li>\r\n                        <li>\r\n                          It is agreed and understood that this Application in\r\n                          no way obligates the motor carrier to employ or hire\r\n                          the applicant.\r\n                        </li>\r\n                        <li>\r\n                          It is agreed and understood that if qualified and\r\n                          hired, I may be on a probationary period during which\r\n                          time I may be disqualified without recourse.\r\n                        </li>\r\n                        <li>\r\n                          This certifies that this application was completed by\r\n                          me, and that all entries on it and information in it\r\n                          are true and complete to the best of my knowledge.\r\n                        </li>\r\n                      </ul>\r\n                    </Typography>\r\n                  </div>\r\n                  <div className=\"col-1\"></div>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{ paddingLeft: \"40px\", paddingRight: \"60px\" }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Typography align=\"left\" variant=\"h6\">\r\n                  Employee Signature\r\n                </Typography>\r\n                <SignatureCanvas\r\n                  penColor=\"black\"\r\n                  ref={sigPad}\r\n                  canvasProps={{\r\n                    width: 500,\r\n                    height: 200,\r\n                    className: \"sigCanvas\",\r\n                  }}\r\n                />\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={3}></Grid>\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"col-12\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={clearSigPad}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      className=\"col-12\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={saveImage}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={3}></Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  props.handler[1]();\r\n                }}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Save This & Next\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default EmpApplicationForm3;\r\n","import {\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n  Typography,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport {\r\n  reqBits,\r\n  reqBitsKeys,\r\n  RequireError,\r\n} from \"../../Common/CommonVariables\";\r\nimport { useStyles } from \"../EmpApplicationForm3\";\r\n\r\ntype Props = {\r\n  id: string;\r\n  question: string;\r\n  optionList: string[];\r\n  optionValue: boolean[] | string[];\r\n  defaultSelected?: string;\r\n  useForm: any;\r\n  xsSize?:\r\n    | boolean\r\n    | \"auto\"\r\n    | 1\r\n    | 12\r\n    | 3\r\n    | 2\r\n    | 4\r\n    | 5\r\n    | 6\r\n    | 7\r\n    | 8\r\n    | 9\r\n    | 10\r\n    | 11\r\n    | undefined;\r\n  isReq: boolean;\r\n};\r\n\r\nexport default function RadioQuestions(props: Props) {\r\n  const classes = useStyles();\r\n  const Forms = props.useForm;\r\n  const { register, handleSubmit, errors, control } = Forms;\r\n  const bools = props.optionValue;\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"flex-start\"\r\n        spacing={1}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={props.xsSize === undefined ? 10 : props.xsSize}\r\n          className={(classes.paper, classes.questionTextStyle)}\r\n        >\r\n          <Typography className={classes.text}>{props.question}</Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={props.xsSize === undefined ? 10 : props.xsSize}\r\n          style={{ textAlign: \"left\" }}\r\n        >\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            error={errors[props.id] === undefined ? false : true}\r\n          >\r\n            <Controller\r\n              rules={{ required: true }}\r\n              control={control}\r\n              name={props.id}\r\n              defaultValue={props.defaultSelected + \"\"}\r\n              as={\r\n                <RadioGroup row>\r\n                  {props.optionList.map((optionItem, index) => {\r\n                    return (\r\n                      <FormControlLabel\r\n                        key={index}\r\n                        value={props.optionValue[index] + \"\"}\r\n                        control={<Radio />}\r\n                        label={optionItem}\r\n                      />\r\n                    );\r\n                  })}\r\n                </RadioGroup>\r\n              }\r\n            />\r\n            <FormHelperText>\r\n              {errors[props.id] && errors[props.id].message}\r\n            </FormHelperText>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../../Common/styleClasses\";\r\nimport {\r\n  Address,\r\n  Addresses,\r\n  Form1,\r\n  reqBits,\r\n  states,\r\n  AddressErrorsList,\r\n} from \"../../Common/CommonVariables\";\r\nimport { update } from \"../../services/updateApi\";\r\nimport RadioQuestions from \".././SubComponents/RadioQuestions\";\r\n\r\ntype Props = {\r\n  idPrefix: string;\r\n  addressesList: Address[];\r\n  setAddresses: any;\r\n  addressId: string;\r\n  cityId: string;\r\n  stateId: string;\r\n  zipCodeId: string;\r\n  fromDateId: string;\r\n  toDateId: string;\r\n};\r\n\r\nconst RequireError: string = \"Required *\";\r\nconst WrongPatternError: string = \"Wrong Pattern\";\r\n\r\nlet addr = {\r\n  lastYearAddress: \"\",\r\n  lastYearAddressCity: \"\",\r\n  lastYearAddressState: \"\",\r\n  lastYearAddressZipCode: \"\",\r\n  lastYearAddressfrom: \"1990-01-01\",\r\n  lastYearAddressTo: \"1990-01-01\",\r\n};\r\n\r\nexport default function AddressesComponent(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  // const Forms = props.useForm;\r\n  // const { register, handleSubmit, errors, defaultValues } = Forms;\r\n\r\n  const [addressesState, addressesStateHandler] = useState(\r\n    props.addressesList && props.addressesList.length > 0\r\n      ? props.addressesList\r\n      : [addr]\r\n  );\r\n  const [errorsList, errorListHandler] = useState();\r\n  useEffect(() => {\r\n    addressesStateHandler(\r\n      props.addressesList && props.addressesList.length > 0\r\n        ? props.addressesList\r\n        : [addr]\r\n    );\r\n  }, [props.addressesList]);\r\n\r\n  useEffect(() => {\r\n    props.setAddresses(addressesState);\r\n  }, [addressesState]);\r\n\r\n  const addAddress = (event: any) => {\r\n    event.preventDefault();\r\n    addressesStateHandler([...addressesState, addr]);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        {addressesState.map((address: Address, index: number) => {\r\n          return (\r\n            // lastYearAddress: string;\r\n            // lastYearAddressCity: string;\r\n            // lastYearAddressState: string;\r\n            // lastYearAddressZipCode: string;\r\n            // lastYearAddressfrom: string;\r\n            // lastYearAddressTo: string;\r\n\r\n            <Accordion key={index}>\r\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography className={classes.text}>\r\n                  Address {index + 1}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      className=\"col-12\"\r\n                      name={props.addressId}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      label={\"Address Require\"}\r\n                      required={reqBits.lastYearAddress === true}\r\n                      value={addressesState[index].lastYearAddress}\r\n                      onChange={(e) => {\r\n                        const addrNew = {\r\n                          ...addressesState[index],\r\n                          lastYearAddress: e.target.value,\r\n                        };\r\n                        const addressesStateNew = [...addressesState];\r\n                        addressesStateNew.splice(index, 1, addrNew);\r\n                        addressesStateHandler(addressesStateNew);\r\n                      }}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      name={props.cityId}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      label={\r\n                        \"City \" +\r\n                        (() => {\r\n                          return reqBits.lastYearAddressCity === true\r\n                            ? \"*\"\r\n                            : \"\";\r\n                        })()\r\n                      }\r\n                      required={reqBits.lastYearAddressCity === true}\r\n                      className=\"col-12\"\r\n                      value={addressesState[index].lastYearAddressCity}\r\n                      onChange={(e) => {\r\n                        const addrNew = {\r\n                          ...addressesState[index],\r\n                          lastYearAddressCity: e.target.value,\r\n                        };\r\n                        const addressesStateNew = [...addressesState];\r\n                        addressesStateNew.splice(index, 1, addrNew);\r\n                        addressesStateHandler(addressesStateNew);\r\n                      }}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <FormControl\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      className=\"col-12\"\r\n                      required={reqBits.lastYearAddressState === true}\r\n                    >\r\n                      <InputLabel\r\n                        id={\"demo-simple-select-outlined-label\" + index}\r\n                      >\r\n                        State\r\n                      </InputLabel>\r\n                      <Select\r\n                        name={props.stateId}\r\n                        labelId={\"demo-simple-select-outlined-label\" + index}\r\n                        id=\"demo-simple-select-outlined\"\r\n                        label={\"State \"}\r\n                        defaultValue={\r\n                          addressesState[index].lastYearAddressState\r\n                        }\r\n                        value={addressesState[index].lastYearAddressState}\r\n                        onChange={(e) => {\r\n                          console.log(e.target);\r\n                          const addrNew = {\r\n                            ...addressesState[index],\r\n                            lastYearAddressState: e.target.value as string,\r\n                          };\r\n                          const addressesStateNew = [...addressesState];\r\n                          addressesStateNew.splice(index, 1, addrNew);\r\n                          addressesStateHandler(addressesStateNew);\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {states.map(function (object: any, i: number) {\r\n                          return (\r\n                            <MenuItem value={object.value} key={i}>\r\n                              {object.value}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                      {/* <FormHelperText>{errors.seqAddressCity && errors.seqAddressCity.message}</FormHelperText> */}\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      name={props.zipCodeId}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      label={\r\n                        \"Zip Code \" +\r\n                        (() => {\r\n                          return reqBits.lastYearAddressZipCode == true\r\n                            ? \"*\"\r\n                            : \"\";\r\n                        })()\r\n                      }\r\n                      required={reqBits.lastYearAddressZipCode == true}\r\n                      className=\"col-12\"\r\n                      value={addressesState[index].lastYearAddressZipCode}\r\n                      onChange={(e) => {\r\n                        const addrNew = {\r\n                          ...addressesState[index],\r\n                          lastYearAddressZipCode: e.target.value,\r\n                        };\r\n                        const addressesStateNew = [...addressesState];\r\n                        addressesStateNew.splice(index, 1, addrNew);\r\n                        addressesStateHandler(addressesStateNew);\r\n                      }}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name={props.fromDateId}\r\n                      variant=\"outlined\"\r\n                      type=\"date\"\r\n                      size=\"small\"\r\n                      className=\"col-12\"\r\n                      helperText={\"From Date Require *\"}\r\n                      required={reqBits.lastYearAddressfrom == true}\r\n                      value={addressesState[index].lastYearAddressfrom}\r\n                      onChange={(e) => {\r\n                        const addrNew = {\r\n                          ...addressesState[index],\r\n                          lastYearAddressfrom: e.target.value,\r\n                        };\r\n                        const addressesStateNew = [...addressesState];\r\n                        addressesStateNew.splice(index, 1, addrNew);\r\n                        addressesStateHandler(addressesStateNew);\r\n                      }}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name={props.toDateId}\r\n                      variant=\"outlined\"\r\n                      type=\"date\"\r\n                      size=\"small\"\r\n                      className=\"col-12\"\r\n                      helperText={\"To Date Require *\"}\r\n                      required={reqBits.lastYearAddressTo == true}\r\n                      value={addressesState[index].lastYearAddressTo}\r\n                      onChange={(e) => {\r\n                        const addrNew = {\r\n                          ...addressesState[index],\r\n                          lastYearAddressTo: e.target.value,\r\n                        };\r\n                        const addressesStateNew = [...addressesState];\r\n                        addressesStateNew.splice(index, 1, addrNew);\r\n                        addressesStateHandler(addressesStateNew);\r\n                      }}\r\n                    ></TextField>\r\n                  </Grid>\r\n                </Grid>\r\n              </AccordionDetails>\r\n              <Divider />\r\n              <AccordionActions\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  padding: \"20px 20px\",\r\n                }}\r\n              >\r\n                <Grid item xs={6} style={{ padding: \"20px 10px\" }}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    className=\"col-6\"\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    id={\"id\" + index}\r\n                    onClick={(e) => {\r\n                      if (addressesState.length > 1) {\r\n                        addressesState.splice(index, 1);\r\n                        addressesStateHandler([...addressesState]);\r\n                      }\r\n                    }}\r\n                  >\r\n                    Delete This\r\n                  </Button>\r\n                </Grid>\r\n              </AccordionActions>\r\n            </Accordion>\r\n          );\r\n        })}\r\n        <Grid item xs={12} style={{ padding: \"20px 10px\" }}>\r\n          <Button\r\n            size=\"small\"\r\n            className=\"col-3\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={(e) => {\r\n              addressesStateHandler([...addressesState, addr]);\r\n              console.log(addressesState);\r\n            }}\r\n          >\r\n            Another Address\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React, { Component, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport { styleClasses } from \"../Common/styleClasses\";\r\nimport AttachmentIcon from \"@material-ui/icons/Attachment\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  states,\r\n  Form1,\r\n  Addresses,\r\n  reqBits,\r\n  debug,\r\n} from \"../Common/CommonVariables\";\r\n\r\nimport { fileUploadApi } from \"../services/fileUploadApi\";\r\n\r\nimport { update } from \"../services/updateApi\";\r\nimport RadioQuestions from \"./SubComponents/RadioQuestions\";\r\nimport AddressesComponent from \"./SubComponents/AddressesComponent\";\r\nimport classNames from \"classnames\";\r\nimport { DynamicFileUpload } from \"./DynamicAddition/DynamicFileUpload\";\r\ntype Props = { data?: any; handler?: any; setData: any };\r\nconst startTimeVal = [\r\n  { value: \"Immediately\" },\r\n  { value: \"Within 2 Weeks\" },\r\n  { value: \"Within 1 Month\" },\r\n];\r\nconst classAExperienceLevelVal = [\r\n  { value: \"Experienced Class A Driver\" },\r\n  { value: \"Have Class A, But Need Training\" },\r\n  { value: \"Currently in the Truck School\" },\r\n];\r\nlet addr = {\r\n  lastYearAddress: \"Default\",\r\n  lastYearAddressCity: \"Default\",\r\n  lastYearAddressState: \"Default\",\r\n  lastYearAddressZipCode: \"Default\",\r\n  lastYearAddressfrom: \"Default\",\r\n  lastYearAddressTo: \"Default\",\r\n};\r\n\r\nlet UpdateAddressesList: Addresses;\r\n\r\nfunction EmpApplicationForm1(props: Props) {\r\n  const [manualStates, setManualStates] = useState(props.data);\r\n\r\n  const handleFileUpload = (event: any) => {\r\n    console.log(\"------------FILE UPLOAD----------\");\r\n    console.log(event.target.files[0].name);\r\n    console.log(event.target.files[0]);\r\n    const formData = new FormData();\r\n\r\n    if (manualStates.resume1 == undefined || manualStates.resume1 == null) {\r\n      setManualStates({ ...manualStates, resume1: event.target.files[0] });\r\n      formData.append(\r\n        \"file\",\r\n        event.target.files[0],\r\n        event.target.files[0].name\r\n      );\r\n      formData.append(\"user_name\", props.data.user_name);\r\n      // axios.post(\"api/fileUploadApi\", formData);\r\n      fileUploadApi(formData);\r\n    } else {\r\n      setManualStates({ ...manualStates, resume2: event.target.files[0] });\r\n      formData.append(\r\n        \"file\",\r\n        event.target.files[0],\r\n        event.target.files[0].name\r\n      );\r\n      formData.append(\"user_name\", props.data.user_name);\r\n\r\n      fileUploadApi(formData);\r\n    }\r\n  };\r\n\r\n  // if (debug === true) {\r\n  //   props.data.first_name = \"Default\";\r\n  //   props.data.last_name = \"Default\";\r\n  //   props.data.phone_number = \"111-111-1111 x1111\";\r\n  //   props.data.email = \"Default@email.com\";\r\n  //   props.data.dateofBirth = \"2018-01-01\";\r\n  //   props.data.socialSecurity = \"012345678\";\r\n  //   props.data.address = \"Default\";\r\n  //   props.data.city = \"Default\";\r\n  //   props.data.state = states[1].value;\r\n  //   props.data.zipCode = \"0123456\";\r\n  //   props.data.lastThreeYearResidenceCheck = \"false\";\r\n  //   props.data.addresses = [\r\n  //     {\r\n  //       lastYearAddress: \"Default\",\r\n  //       lastYearAddressCity: \"Default\",\r\n  //       lastYearAddressState: states[1].value,\r\n  //       lastYearAddressZipCode: \"0123456\",\r\n  //       lastYearAddressfrom: \"2018-01-01\",\r\n  //       lastYearAddressTo: \"2018-01-01\",\r\n  //     },\r\n  //     {\r\n  //       lastYearAddress: \"Default\",\r\n  //       lastYearAddressCity: \"Default\",\r\n  //       lastYearAddressState: states[1].value,\r\n  //       lastYearAddressZipCode: \"0123456\",\r\n  //       lastYearAddressfrom: \"2018-01-01\",\r\n  //       lastYearAddressTo: \"2018-01-01\",\r\n  //     },\r\n  //     {\r\n  //       lastYearAddress: \"Default\",\r\n  //       lastYearAddressCity: \"Default\",\r\n  //       lastYearAddressState: states[1].value,\r\n  //       lastYearAddressZipCode: \"0123456\",\r\n  //       lastYearAddressfrom: \"2018-01-01\",\r\n  //       lastYearAddressTo: \"2018-01-01\",\r\n  //     },\r\n  //   ];\r\n  //   props.data.startTime = startTimeVal[1].value;\r\n  //   props.data.hearAbout = \"Default\";\r\n  //   props.data.eligibletoWorkInUnitedState = false;\r\n  //   props.data.classAExperienceLevel = classAExperienceLevelVal[1].value;\r\n  //   props.data.willingForDrugTest = false;\r\n  // }\r\n\r\n  let preLoadedValues = {\r\n    first_name: props.data.first_name,\r\n    last_name: props.data.last_name,\r\n    phone_number: props.data.phone_number,\r\n    email: props.data.email,\r\n    dateofBirth: props.data.dateofBirth,\r\n    socialSecurity: props.data.socialSecurity,\r\n    address: props.data.address,\r\n    city: props.data.city,\r\n    state: props.data.state,\r\n    zipCode: props.data.zipCode,\r\n    lastThreeYearResidenceCheck: props.data.lastThreeYearResidenceCheck,\r\n    addresses: props.data.addresses,\r\n    lastYearAddress: props.data.lastYearAddress,\r\n    lastYearAddressCity: props.data.lastYearAddressCity,\r\n    lastYearAddressState: props.data.lastYearAddressState,\r\n    lastYearAddressZipCode: props.data.lastYearAddressZipCode,\r\n    lastYearAddressfrom: props.data.lastYearAddressfrom,\r\n    lastYearAddressTo: props.data.lastYearAddressTo,\r\n    startTime: props.data.startTime,\r\n    hearAbout: props.data.hearAbout,\r\n    eligibletoWorkInUnitedState: props.data.eligibletoWorkInUnitedState,\r\n    classAExperienceLevel: props.data.classAExperienceLevel,\r\n    willingForDrugTest: props.data.willingForDrugTest,\r\n  };\r\n\r\n  const Forms = useForm({\r\n    defaultValues: props.data,\r\n  });\r\n\r\n  const { register, handleSubmit, errors } = Forms;\r\n\r\n  const onSubmit = async (data: any) => {\r\n    data.addresses = UpdateAddressesList;\r\n    data.user_name = props.data.user_name;\r\n    console.log(data);\r\n    const resdata = await update(data);\r\n    props.setData(resdata.data.data);\r\n    props.handler();\r\n  };\r\n\r\n  const updateAddressList = (updatedAddresses: any) => {\r\n    UpdateAddressesList = updatedAddresses;\r\n  };\r\n\r\n  const classes = styleClasses.useStyles();\r\n\r\n  const RequireError: string = \"Required *\";\r\n  const WrongPatternError: string = \"Wrong Pattern\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ backgroundColor: \"#fafafa\" }}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            alignItems=\"baseline\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <h4>AWB Transport Inc., Employment Application</h4>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={classes.heading}\r\n                    style={{ textAlign: \"center\", marginTop: \"10px\" }}\r\n                  >\r\n                    Basic Information\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"first_name\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      className={classNames(\"col-8\")}\r\n                      label=\"First Name\"\r\n                      error={errors.first_name == undefined ? false : true}\r\n                      helperText={\r\n                        errors.first_name && errors.first_name?.message\r\n                      }\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.first_name,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"last_name\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      className=\"col-8\"\r\n                      label=\"Last Name\"\r\n                      inputRef={register}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"phone_number\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"tel\"\r\n                      className=\"col-8\"\r\n                      error={errors.phone_number == undefined ? false : true}\r\n                      label=\"Phone Number\"\r\n                      helperText={\r\n                        errors.phone_number && errors.phone_number?.message\r\n                      }\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.phone_number,\r\n                          message: RequireError,\r\n                        },\r\n                        pattern: {\r\n                          value: /^([0-9]{3}[-.][0-9]{3}[-.][0-9]{4}[-. ][x][0-9]{4})$/,\r\n                          message: WrongPatternError + \" : ###-###-#### x####\",\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      size=\"small\"\r\n                      label=\"Email\"\r\n                      className={classNames(\"col-8\", { \"is-invalid\": true })}\r\n                      error={errors.email == undefined ? false : true}\r\n                      helperText={errors.email && errors.email?.message}\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.email,\r\n                          message: RequireError,\r\n                        },\r\n                        pattern: {\r\n                          value: /\\S+@\\S+\\.\\S+/,\r\n                          message: WrongPatternError + \" Email\",\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"dateofBirth\"\r\n                      name=\"dateofBirth\"\r\n                      variant=\"outlined\"\r\n                      type=\"date\"\r\n                      size=\"small\"\r\n                      className=\"col-8\"\r\n                      error={errors.dateofBirth == undefined ? false : true}\r\n                      helperText={\r\n                        errors.dateofBirth == undefined\r\n                          ? \"Date of Birth\"\r\n                          : \"Date of Brith \" + errors.dateofBirth?.message\r\n                      }\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.dateofBirth,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      name=\"socialSecurity\"\r\n                      variant=\"outlined\"\r\n                      type=\"text\"\r\n                      size=\"small\"\r\n                      label=\"Social Security\"\r\n                      className=\"col-8\"\r\n                      error={errors.socialSecurity == undefined ? false : true}\r\n                      helperText={\r\n                        errors.socialSecurity && errors.socialSecurity?.message\r\n                      }\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.socialSecurity,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      className=\"col-10\"\r\n                      name=\"address\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      label=\"Address\"\r\n                      error={errors.address == undefined ? false : true}\r\n                      helperText={errors.address && errors.address?.message}\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.address,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      name=\"city\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      label=\"city\"\r\n                      className=\"col-6\"\r\n                      error={errors.city == undefined ? false : true}\r\n                      helperText={errors.city && errors.city?.message}\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.city,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <FormControl\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      className=\"col-10\"\r\n                    >\r\n                      <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                        State\r\n                      </InputLabel>\r\n                      <Select\r\n                        name=\"state\"\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        label=\"State\"\r\n                        defaultValue={props.data?.state}\r\n                        onChange={(e) => {\r\n                          setManualStates({\r\n                            ...manualStates,\r\n                            state: e.target.value,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        {states.map(function (object: any, i: number) {\r\n                          return (\r\n                            <MenuItem value={object.value} key={i}>\r\n                              {object.value}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      name=\"zipCode\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"text\"\r\n                      label=\"zipCode\"\r\n                      className=\"col-6\"\r\n                      error={errors.zipCode == undefined ? false : true}\r\n                      helperText={errors.zipCode && errors.zipCode?.message}\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.zipCode,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n\r\n            {/* Question Start */}\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={classes.heading}\r\n                    style={{ textAlign: \"center\", margin: \"10px 0px\" }}\r\n                  >\r\n                    Address\r\n                  </Grid>\r\n                  <RadioQuestions\r\n                    id=\"lastThreeYearResidenceCheck\"\r\n                    question=\"Have You Lived At This Residence For The Past 3 Years?\"\r\n                    optionList={[\"Yes\", \"No\"]}\r\n                    optionValue={[\"Yes\", \"No\"]}\r\n                    useForm={Forms}\r\n                    isReq={reqBits.lastThreeYearResidenceCheck}\r\n                    defaultSelected={props.data.lastThreeYearResidenceCheck}\r\n                  />\r\n\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={10}\r\n                    className=\"caption\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    <b>NOTE 1:</b>{\" \"}\r\n                    <i>\r\n                      If no, add any additional addresses you lived at within\r\n                      the past 3 years below.\r\n                    </i>\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={10}\r\n                    className=\"caption\"\r\n                    style={{ textAlign: \"left\" }}\r\n                  >\r\n                    <b>NOTE 2:</b> <i>List current address first</i>\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  {/* <Grid item xs={1}></Grid> */}\r\n                  {/* Current Address Starting */}\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={10}>\r\n                    <Divider\r\n                      orientation=\"horizontal\"\r\n                      variant=\"fullWidth\"\r\n                      style={{ margin: \"20px 0px\" }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={10}>\r\n                    {/* {(props.data.addresses = addr)} */}\r\n                    <AddressesComponent\r\n                      idPrefix=\"\"\r\n                      addressId=\"lastYearAddress\"\r\n                      cityId=\"lastYearAddressCity\"\r\n                      stateId=\"lastYearAddressState\"\r\n                      zipCodeId=\"lastYearAddressZipCode\"\r\n                      fromDateId=\"lastYearAddressfrom\"\r\n                      toDateId=\"lastYearAddressTo\"\r\n                      addressesList={props.data.addresses}\r\n                      setAddresses={updateAddressList}\r\n                    ></AddressesComponent>\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                  {/* Current Address Ending */}\r\n                  {/* <Grid item xs={1}></Grid> */}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            {/* Question End */}\r\n\r\n            {/* Upload Resume Start */}\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper elevation={3} className={classes.paper}>\r\n                {/* <Button onClick={()=>{console.log(manualStates.resume1);}}>check file uploaded</Button> */}\r\n\r\n                {/* <DynamicFileUpload\r\n                  idPrefix=\"fileUpload\"\r\n                  // prevFileUploaded={props.fileUpload}\r\n                  useForm={Forms}\r\n                  setNewFileToUpload={handleFileUpload}\r\n                ></DynamicFileUpload> */}\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-around\"\r\n                  alignItems=\"center\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={1}></Grid>\r\n                  <Grid item xs={10}>\r\n                    {manualStates.resume1 && (\r\n                      <div className=\"mb-3\">\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                            alignItems=\"center\"\r\n                            spacing={3}\r\n                          >\r\n                            <Grid item xs={2}>\r\n                              <InsertDriveFileIcon />\r\n                            </Grid>\r\n                            <Grid item xs={8} className=\"text-left\">\r\n                              {manualStates.resume1?.name}\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <Button>\r\n                                <DeleteIcon\r\n                                  onClick={() => {\r\n                                    setManualStates({\r\n                                      ...manualStates,\r\n                                      resume1: null,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    )}\r\n                    {manualStates.resume2 && (\r\n                      <div className=\"mb-3\">\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                          <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-around\"\r\n                            alignItems=\"center\"\r\n                            spacing={3}\r\n                          >\r\n                            <Grid item xs={2}>\r\n                              <InsertDriveFileIcon />\r\n                            </Grid>\r\n                            <Grid item xs={8} className=\"text-left\">\r\n                              {manualStates.resume2?.name}\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                              <Button>\r\n                                <DeleteIcon\r\n                                  onClick={() => {\r\n                                    setManualStates({\r\n                                      ...manualStates,\r\n                                      resume2: null,\r\n                                    });\r\n                                  }}\r\n                                />\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={1}></Grid>\r\n                </Grid>\r\n\r\n                <input\r\n                  accept=\".pdf,.jpg,.jpge,.doc,.docx\"\r\n                  className={classes.input}\r\n                  id=\"contained-button-file\"\r\n                  type=\"file\"\r\n                  onChange={handleFileUpload}\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                  <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Upload Resume\r\n                  </Button>\r\n                </label>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"center\"\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className=\"caption\"\r\n                    style={{ textAlign: \"center\", marginTop: \"10px\" }}\r\n                  >\r\n                    <b>NOTE:</b>\r\n                    <i>\r\n                      Please upload your resume in PDF format, and DMV record in\r\n                      PDF or any valid picture format.\r\n                    </i>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            {/* Upload Resume End */}\r\n\r\n            {/* Questions Start */}\r\n            <Grid item xs={1}></Grid>\r\n            {/* Questions and Awnsers Starting */}\r\n            <Grid item xs={10}>\r\n              <Accordion>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                  <Typography className={classes.heading}>\r\n                    Questions and Anwsers\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={9}\r\n                      className={(classes.paper, classes.addressPaper)}\r\n                    >\r\n                      <Typography className={classes.text}>\r\n                        How Soon Are You Available To Start?\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"col-12\"\r\n                      >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                          Join with in\r\n                        </InputLabel>\r\n                        <Select\r\n                          name=\"startTime\"\r\n                          labelId=\"demo-simple-select-outlined-label\"\r\n                          id=\"demo-simple-select-outlined\"\r\n                          defaultValue={preLoadedValues.startTime}\r\n                          label=\"Join with in\"\r\n                          onChange={(e) => {\r\n                            setManualStates({\r\n                              ...manualStates,\r\n                              startTime: e.target.value,\r\n                            });\r\n                          }}\r\n\r\n                          // error={errors.startTime == undefined ? false : true}\r\n                          // inputRef={register({\r\n                          //   required: {\r\n                          //     value: true,\r\n                          //     message: RequireError,\r\n                          //   },\r\n                          // })}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {startTimeVal.map(function (object: any, i: number) {\r\n                            return (\r\n                              <MenuItem value={object.value} key={i}>\r\n                                {object.value}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                        <FormHelperText>\r\n                          {errors.startTime && errors.startTime?.message}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      xs={9}\r\n                      className={(classes.paper, classes.addressPaper)}\r\n                    >\r\n                      <Typography className={classes.text}>\r\n                        What is your Class A Driving Experience Level?\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        className=\"col-12\"\r\n                      >\r\n                        <InputLabel id=\"classExperienceLbl\">\r\n                          Experience Level\r\n                        </InputLabel>\r\n                        <Select\r\n                          name=\"classAExperienceLevel\"\r\n                          labelId=\"classExperienceLbl\"\r\n                          id=\"classExp\"\r\n                          label=\"Experience Level\"\r\n                          defaultValue={preLoadedValues.classAExperienceLevel}\r\n                          onChange={(e) => {\r\n                            setManualStates({\r\n                              ...manualStates,\r\n                              classAExperienceLevel: e.target.value,\r\n                            });\r\n                          }}\r\n                          // error={errors.classAExperienceLevel == undefined ? false : true}\r\n                          // inputRef={register({\r\n                          //   required: {\r\n                          //     value: true,\r\n                          //     message: RequireError,\r\n                          //   },\r\n                          // })}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {classAExperienceLevelVal.map(function (\r\n                            object: any,\r\n                            i: number\r\n                          ) {\r\n                            return (\r\n                              <MenuItem value={object.value} key={i}>\r\n                                {object.value}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                        <FormHelperText>\r\n                          {errors.classAExperienceLevel &&\r\n                            errors.classAExperienceLevel?.message}\r\n                        </FormHelperText>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      xs={9}\r\n                      className={(classes.paper, classes.addressPaper)}\r\n                    >\r\n                      <Typography className={classes.text}>\r\n                        How Did You Hear About Us?\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        name=\"hearAbout\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        label=\"Heard From ...\"\r\n                        className=\"col-12\"\r\n                        inputRef={register}\r\n                      ></TextField>\r\n                    </Grid>\r\n\r\n                    <div style={{ paddingLeft: \"13px\" }}>\r\n                      <RadioQuestions\r\n                        id=\"eligibletoWorkInUnitedState\"\r\n                        question=\"Are You Eligible To Work In The United States?\"\r\n                        optionList={[\"Yes\", \"No\"]}\r\n                        optionValue={[\"Yes\", \"No\"]}\r\n                        xsSize={12}\r\n                        useForm={Forms}\r\n                        isReq={reqBits.eligibletoWorkInUnitedState}\r\n                        defaultSelected={props.data.eligibletoWorkInUnitedState}\r\n                      />\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: \"13px\" }}>\r\n                      <RadioQuestions\r\n                        id=\"willingForDrugTest\"\r\n                        question=\"Are you willing to undertake a drug test as part of this\r\n                      hiring process?\"\r\n                        xsSize={12}\r\n                        optionList={[\"Yes\", \"No\"]}\r\n                        optionValue={[\"Yes\", \"No\"]}\r\n                        useForm={Forms}\r\n                        isReq={reqBits.willingForDrugTest}\r\n                        defaultSelected={props.data.willingForDrugTest}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Grid>\r\n            {/* Questions and Awnsers Ending */}\r\n            <Grid item xs={1}></Grid>\r\n            {/* Questions End */}\r\n\r\n            {/* BUTTON Start */}\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Save This & Next\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4}></Grid>\r\n            {/* BUTTON End */}\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default EmpApplicationForm1;\r\n\r\n// COMPLETED UI PHASE\r\n","import {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { ControlCameraOutlined } from \"@material-ui/icons\";\r\nimport ReactHookFormSelect from \"./SubComponents/ReactHookFormSelect\";\r\nimport { debug } from \"../Common/CommonVariables\";\r\nimport { update } from \"../services/updateApi\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      color: theme.palette.text.secondary,\r\n      padding: \"5px 10px\",\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(19),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    text: {\r\n      fontSize: theme.typography.pxToRem(17),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      color: theme.palette.text.secondary,\r\n    },\r\n\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  })\r\n);\r\n\r\ntype Props = { data?: any; handler?: any };\r\n\r\nfunction EmpApplicationForm2(props: Props) {\r\n  const gender = [{ value: \"Male\" }, { value: \"Female\" }, { value: \"Other\" }];\r\n  const veteranStatus = [\r\n    { value: \"No Military Experience\" },\r\n    { value: \"Veteran (VA Eligible)\" },\r\n    { value: \"Active Reverse\" },\r\n    { value: \"Other\" },\r\n  ];\r\n\r\n  if (debug === true) {\r\n    props.data.gender = gender[1].value;\r\n    props.data.veteranStatus = veteranStatus[1].value;\r\n  }\r\n\r\n  const Forms = useForm();\r\n\r\n  const { register, handleSubmit, errors, control } = Forms;\r\n\r\n  const classes = useStyles();\r\n\r\n  const onSubmit = async (data: any) => {\r\n    console.log(data);\r\n    data.user_name = props.data.user_name;\r\n    const resdata = await update(data);\r\n    console.log(resdata);\r\n    props.handler[0]();\r\n  };\r\n\r\n  const RequireError: string = \"Required *\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ backgroundColor: \"#fafafa\" }}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"baseline\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <h4>AWB Transport Inc., Employment Application</h4>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                elevation={3}\r\n                className={classes.paper}\r\n                style={{ padding: \"30px 15px\" }}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={classes.heading}\r\n                    style={{ textAlign: \"center\", marginTop: \"10px\" }}\r\n                  >\r\n                    <b>EEO Information</b>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                      <Typography align=\"justify\">\r\n                        We provide equal opportunity to all qualified\r\n                        individuals regardless of race, color, religion, age,\r\n                        sex, national origin, veteran status or disability.\r\n                      </Typography>\r\n                    </Paper>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                      <Typography align=\"justify\">\r\n                        <b>Providing this information is voluntary.</b> We ask\r\n                        for this information to maintain records. Any\r\n                        information you voluntarily provide is confidential and\r\n                        will not be considered in making any employment\r\n                        decision. If you choose no.\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <ReactHookFormSelect\r\n                      nameVal=\"gender\"\r\n                      label=\"Gender\"\r\n                      control={control}\r\n                      defaultValue={props?.data?.gender}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      className=\"col-10\"\r\n                    >\r\n                      <MenuItem value=\"\">None</MenuItem>\r\n                      {gender.map(function (object: any, i: number) {\r\n                        return (\r\n                          <MenuItem value={object.value} key={i}>\r\n                            {object.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </ReactHookFormSelect>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <ReactHookFormSelect\r\n                      nameVal=\"veteranStatus\"\r\n                      label=\"Veteran Status\"\r\n                      defaultValue={props?.data?.veteranStatus}\r\n                      control={control}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      className=\"col-10\"\r\n                    >\r\n                      <MenuItem value=\"\">None</MenuItem>\r\n                      {veteranStatus.map(function (object: any, i: number) {\r\n                        return (\r\n                          <MenuItem value={object.value} key={i}>\r\n                            {object.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </ReactHookFormSelect>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: \"25px\" }}>\r\n                  <b>Thank you for considering AWB Transport, Inc.</b>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n\r\n            {/* BUTTON Start */}\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  props.handler[1]();\r\n                }}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Save This & Next\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n            {/* BUTTON End */}\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default EmpApplicationForm2;\r\n\r\n// COMPLETED UI PHASE\r\n","import { Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Accordion, Col, Container, Row } from \"react-bootstrap\";\r\nimport styleClasses from \"../Common/styleClasses\";\r\nimport { update } from \"../services/updateApi\";\r\n\r\ntype Props = { data?: any; handler?: any };\r\n\r\nexport default function EmpApplicationForm4(props: Props) {\r\n  const onSubmit = async (data: any) => {\r\n    // const resdata = await update(data);\r\n    data.user_name = props.data.user_name;\r\n    // const resdata = await update(data);\r\n    // console.log(resdata);\r\n    props.handler[0]();\r\n  };\r\n\r\n  const classes = styleClasses.useStyles();\r\n  return (\r\n    <div>\r\n      <Container style={{ backgroundColor: \"#fafafa\" }}>\r\n        <form onSubmit={onSubmit}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={12}>\r\n              <Paper\r\n                style={{ margin: \"10px 0px\" }}\r\n                elevation={3}\r\n                className={(classes.paper, classes.paperProminantStyle)}\r\n              >\r\n                <h4>Drug and Alcohol Misuse Policy</h4>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* PAGE 1 */}\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{ paddingLeft: \"40px\", paddingRight: \"60px\" }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={6}>\r\n                    <Typography align=\"left\" variant=\"subtitle2\">\r\n                      AWB Transport Inc\r\n                      <br />\r\n                      5751 La Venta Way\r\n                      <br />\r\n                      Sacramento, CA 95835\r\n                      <br />\r\n                      <br />\r\n                      <br />\r\n                      Effective Date: 7/20/2018\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography align=\"right\" variant=\"subtitle2\">\r\n                      <br />\r\n                      U.S. Department of Transportation\r\n                      <br />\r\n                      Federal Motor Carrier Safety Administration\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography align=\"center\" variant=\"subtitle2\">\r\n                      FEDERAL MOTOR CARRIER SAFETY ADMINISTRATION (FMSCA)\r\n                      <br />\r\n                      <br />\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"subtitle2\">\r\n                      THIS POLICY APPLIES ONLY TO COMMERCIAL DRIVER'S LICENSE\r\n                      (CDL) HOLDERS AND OTHER DRIVERS AS INDICATED. THESE\r\n                      PROVISIONS ONLY APPLY IF THE CDL IS REQUIRED FOR WORK\r\n                      PURPOSES.\r\n                      <br />\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>A. General.</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          <b>\r\n                            A complete copy of the anti-drug/alcohol misuse\r\n                            prevention procedures is available to all employees.\r\n                            This policy only discusses the FMCSA provisions of\r\n                            the mandated drug and alcohol testing regulations\r\n                            and how they relate to employees. Portions of this\r\n                            policy that exceed Department of Transportation\r\n                            rules and regulations are in bold.\r\n                          </b>\r\n                        </li>\r\n                        <li>\r\n                          The provisions contained in the Company\r\n                          Anti-Drug/Alcohol Misuse Prevention Plan (AMPP) are\r\n                          applicable to those Company employees who perform\r\n                          safety-sensitive trucking functions covered under 49\r\n                          CFR Part 382. This policy will also be in effect for\r\n                          any employee who hold a Class B or C drivers license.\r\n                          <b>\r\n                            These employees will not be included in the DOT\r\n                            regulated random drug testing pool but will be in a\r\n                            random pool of their own.\r\n                          </b>\r\n                        </li>\r\n                        <li>\r\n                          Company employees who only perform trucking functions\r\n                          must be aware of the general testing provisions\r\n                          discussed in the Company policy and must be aware of\r\n                          the specific highway regulations as set forth in this\r\n                          policy.\r\n                        </li>\r\n                        <li>\r\n                          The Company recognizes that the misuse of drugs and\r\n                          alcohol in today's society is a major problem, which\r\n                          has also found its way into the trucking industry. The\r\n                          purpose of this policy is to reduce highway accidents\r\n                          that result from driver misuse of drugs and alcoholic\r\n                          substances, thereby reducing fatalities, injuries, and\r\n                          property damage. The Department of Transportation,\r\n                          Federal Motor Carrier Safety Administration, has\r\n                          established extensive regulations requiring testing\r\n                          under certain circumstances. In light of the above,\r\n                          the Company has adopted this plan to specify the\r\n                          circumstances under which testing may be required, the\r\n                          procedures for conducting such testing and the methods\r\n                          and procedures for complying with the requirements of\r\n                          the Federal Motor Carrier Safety Administration\r\n                          regulations.\r\n                        </li>\r\n                        <li>\r\n                          The Company will implement necessary and reasonable\r\n                          measures to maintain a work environment, free of drugs\r\n                          and alcohol. Employees with drug and alcohol misuse\r\n                          problems are strongly encouraged to seek assistance.\r\n                        </li>\r\n                        <li>\r\n                          The Companies Designated Employee Representative is{\" \"}\r\n                          <b>Usman Khalid</b>\r\n                        </li>\r\n                        <li>\r\n                          <b>\r\n                            These policies and procedures are not intended to\r\n                            create a contract between the Company and its\r\n                            employees. All employment with the Company is\r\n                            at-will” and can be terminated by the Company or the\r\n                            employee for any reason or no reason.\r\n                          </b>\r\n                        </li>\r\n                      </ol>\r\n                    </Typography>\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>B. Applicability.</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          This information is applicable to every Company\r\n                          employee who operates a commercial motor vehicle in\r\n                          interstate or intrastate commerce and is subject to\r\n                          the commercial driver license requirements of 49 CFR\r\n                          Part 382.\r\n                        </li>\r\n                        <li>\r\n                          For purposes of these regulations the Company is\r\n                          considered an employer with regard to the Federal\r\n                          Motor Carrier Safety Administration alcohol\r\n                          regulations. As an employer who employ’s drivers, the\r\n                          Company must comply with the requirements outlined\r\n                          herein as they apply to the employer and to drivers.\r\n                          All Company employees who perform safety-sensitive\r\n                          trucking functions shall be subject to the drug and\r\n                          alcohol misuse testing provisions.\r\n                        </li>\r\n                        <li>\r\n                          The following exceptions apply with regard to the\r\n                          Company and their drivers:\r\n                        </li>\r\n                        <ol type=\"a\">\r\n                          <li>\r\n                            When required to comply with the alcohol and /or\r\n                            controlled substances testing requirements of 49 CFR\r\n                            Parts 653 and 654 of the Federal Transit\r\n                            Administration regulations; OR\r\n                          </li>\r\n                          <li>\r\n                            When granted a full waiver from the requirements of\r\n                            the commercial driver license program; OR\r\n                          </li>\r\n                          <li>\r\n                            When granted an optional State waiver from the\r\n                            requirements of part 383 of this subchapter; OR\r\n                          </li>\r\n                          <li>\r\n                            When foreign domiciled operations, with respect to\r\n                            any driver whose place of reporting for duty (home\r\n                            terminal) for commercial motor vehicle\r\n                            transportation services is located outside the\r\n                            territory of the United States.\r\n                          </li>\r\n                        </ol>\r\n                      </ol>\r\n                    </Typography>\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>C. Policy.</b>\r\n                      <br />\r\n                      <b>ALCOHOL PROHIBITIONS</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          <b>Prohibited Alcohol</b>- The presence in the body,\r\n                          possession, use, distribution, dispensing, and/or\r\n                          unlawful manufacture of alcohol or alcoholic products\r\n                          is not condoned while conducting Company business, or\r\n                          while in work areas or Company vehicles on or off\r\n                          Company premises. No employee will work under the\r\n                          influence of alcohol. It will be against the Company\r\n                          policy for any supervisor/manager that has actual\r\n                          knowledge of a driver using a controlled substance or\r\n                          alcohol to permit the driver to perform or continue to\r\n                          perform safety-sensitive functions.\r\n                        </li>\r\n                        <li>\r\n                          <b>\r\n                            Drivers Subject to Alcohol Testing Covered Under\r\n                            This Plan\r\n                          </b>\r\n                          - Company drivers and contract drivers under contract\r\n                          for 90 days or more in any period of 365 days, who\r\n                          perform safety sensitive trucking functions covered\r\n                          under 49 CFR Parts 382 and 383, and who meet the\r\n                          definition of \"Driver\" in D.6. of this section.\r\n                        </li>\r\n                        <li>\r\n                          <b>Alcohol Prohibitions.</b>\r\n                        </li>\r\n                        <ol type=\"a\">\r\n                          <li>\r\n                            No driver shall be on duty, as defined in 395.2, if\r\n                            the driver uses alcohol.\r\n                          </li>\r\n                          <li>\r\n                            No driver shall be on duty, as defined in 395.2, if\r\n                            the driver tests positive for use of alcohol.\r\n                          </li>\r\n                          <li>\r\n                            A person who tests positive for the use of alcohol\r\n                            is medically unqualified to operate a commercial\r\n                            motor vehicle and will be not be permitted to\r\n                            perform covered functions and may be subject to\r\n                            disciplinary action up to and including termination.\r\n                          </li>\r\n                          <li>\r\n                            A person who refuses to be tested under the plan\r\n                            provisions shall not be permitted to operate a\r\n                            commercial motor vehicle. Such refusal shall be\r\n                            treated as a positive alcohol test and subject the\r\n                            driver to the restrictions contained in paragraph\r\n                            (c) above.\r\n                          </li>\r\n                          <li>\r\n                            No employee will consume alcohol (4) four hours\r\n                            prior to performing safety sensitive functions.\r\n                          </li>\r\n                          <li>\r\n                            It is against Company policy for a driver to consume\r\n                            alcohol within eight (8) hours after an accident\r\n                            that requires a drug alcohol test.\r\n                          </li>\r\n                          <li>\r\n                            It is against policy to allow any driver that has a\r\n                            Breath-Alcohol Content (BrAC) of .02 -039 grams per\r\n                            210 liters of breath to operate any vehicle. An\r\n                            employee with a BrAC of .02-.039 must be removed\r\n                            from duty for one shift or 24 hours. Upon return to\r\n                            work the employee must have a BrAC below .02.\r\n                          </li>\r\n                          <li>\r\n                            An employee with a BrAC of .04 grams per 210 liters\r\n                            of breath will be considered to be in violation of\r\n                            this policy and the Department of Transportation\r\n                            rules, and will be subject to disciplinary action.\r\n                            An employee with a BrAC of .04 or higher will be\r\n                            considered to be disqualified from driving.\r\n                          </li>\r\n                        </ol>\r\n                      </ol>\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <u>\r\n                        Drug/Alcohol Misuse Prevention Plan herein sets forth\r\n                        the requirements of 49 CFR Parts 382 and 40. Those areas\r\n                        of the plan that appear in bold and underlined print\r\n                        reflect this company? independent authority to require\r\n                        additional provisions with regard to the alcohol testing\r\n                        procedures.\r\n                      </u>\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            {/* BUTTON Start */}\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  props.handler[1]();\r\n                }}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Save This & Next\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n            {/* BUTTON End */}\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Accordion, Col, Container, Row } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styleClasses from \"../Common/styleClasses\";\r\nimport { update } from \"../services/updateApi\";\r\n\r\ntype Props = { data?: any; handler?: any };\r\n\r\nexport default function EmpApplicationForm5(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const Forms = useForm();\r\n  const { register, handleSubmit, errors, control } = Forms;\r\n\r\n  const onSubmit = async (data: any) => {\r\n    data.user_name = props.data.user_name;\r\n    // const resdata = await update(data);\r\n    // console.log(resdata);\r\n    console.log(data);\r\n    props.handler[0]();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container style={{ backgroundColor: \"#fafafa\" }}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            {/* PAGE 2 */}\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{ paddingLeft: \"40px\", paddingRight: \"60px\" }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <input type=\"hidden\" value=\"true\" id=\"form5\" name=\"form5\" />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography align=\"justify\" variant=\"subtitle2\">\r\n                      <b>DRUG PROHIBITIONS</b>\r\n                      <br />\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          <u>Prohibited Drugs -</u> The presence in the body\r\n                          (including the presence as a metabolite), possession,\r\n                          use, distribution, dispensing, and/or unlawful\r\n                          manufacture of prohibited drugs is not condoned while\r\n                          conducting Company business, or while in work areas or\r\n                          Company vehicles on or off Company premises. No\r\n                          employee will work under the influence of prohibited\r\n                          drugs. The following drugs are prohibited:\r\n                          <b>\r\n                            Marijuana, Cocaine, Opioids, Amphetamines,\r\n                            Phencyclidine, 6AM, Ecstasy\r\n                          </b>\r\n                        </li>\r\n                        <li>\r\n                          <u>\r\n                            Drivers Subject to Testing Covered Under This Plan\r\n                          </u>{\" \"}\r\n                          - Company drivers and contract drivers under contract\r\n                          for 90 days or more in any period of 365 days, who\r\n                          perform safety sensitive trucking functions covered\r\n                          under 49 CFR Parts 382 and 383, and who meet the\r\n                          definition of \"Driver\" in D.6. of this section.\r\n                        </li>\r\n                        <li>\r\n                          <u>Drug Use Prohibitions</u>\r\n                        </li>\r\n                        <ol>\r\n                          <li>\r\n                            No driver shall be on duty, as defined in 395.2, if\r\n                            the driver uses any controlled substance, except as\r\n                            provided in 391.97 (prescribed drugs).\r\n                          </li>\r\n                          <li>\r\n                            No driver shall be on duty, as defined in 395.2, if\r\n                            the driver tests positive for use of controlled\r\n                            substances, except as provided in 397.97 (prescribed\r\n                            drugs).\r\n                          </li>\r\n                          <li>\r\n                            A person who tests positive for the use of a\r\n                            controlled substances as defined in 49 CFR Part 40,\r\n                            is medically unqualified to operate a commercial\r\n                            motor vehicle and will be suspended without pay.\r\n                          </li>\r\n                          <li>\r\n                            A person who refuses to be tested under the plan\r\n                            provisions shall not be permitted to operate a\r\n                            commercial motor vehicle. Such refusal shall be\r\n                            treated as a positive test and subject the driver to\r\n                            the restrictions contained in paragraph (c) above.\r\n                          </li>\r\n                          <li>\r\n                            <b>\r\n                              Use of a prescription drug, where the prescribing\r\n                              physician advises that it could impair the ability\r\n                              of an employee to operate in a safety sensitive\r\n                              manner must be reported to the employee’s\r\n                              supervisor.\r\n                            </b>\r\n                          </li>\r\n                        </ol>\r\n                      </ol>\r\n                    </Typography>\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>D. Definitions:</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          <b>\"Alcohol\"</b> means the intoxicating agent in\r\n                          beverage alcohol, ethyl alcohol, or other low\r\n                          molecular weight alcohols including methyl and\r\n                          isopropyl alcohol.\r\n                        </li>\r\n                        <li>\r\n                          <b>\"Alcohol Concentration\"</b> means the alcohol in a\r\n                          volume of breath expressed in terms of grams of\r\n                          alcohol per 210 liters of breath.\r\n                        </li>\r\n                        <li>\r\n                          <b>\"Alcohol Testing\"</b> - testing conducted by a\r\n                          Department of Transportation (DOT), certified\r\n                          breath-alcohol technician using a DOT approved\r\n                          breath-testing device.\r\n                        </li>\r\n                        <li>\r\n                          <b>\"Commercial Motor Vehicle\"</b> - means a motor\r\n                          vehicle or combination of motor vehicles used in\r\n                          commerce to transport passengers or property if the\r\n                          motor vehicle-\r\n                        </li>\r\n                        <ol>\r\n                          <li>\r\n                            Has a gross combination weight rating of 26,001 or\r\n                            more pounds inclusive of a towed unit with a gross\r\n                            vehicle weight rating of more than 10,000 pounds; or\r\n                          </li>\r\n                          <li>\r\n                            Has a gross vehicle weight rating of 26,001 or more\r\n                            pounds; or\r\n                          </li>\r\n                          <li>\r\n                            Is designed to transport 16 or more passengers,\r\n                            including the driver; or\r\n                          </li>\r\n                          <li>\r\n                            Is of any size and is used in the transportation of\r\n                            material found to be hazardous for the purposes of\r\n                            the Hazardous Materials Transportation Act and which\r\n                            require the motor vehicle to be placard under the\r\n                            Hazardous Materials Regulations (CFR part 172,\r\n                            subpart F).\r\n                          </li>\r\n                        </ol>\r\n                        <li>\r\n                          <b>“Controlled Substance”</b> - any substance\r\n                          including those assigned by 21U.S.C. 802 and includes\r\n                          all substances listed on Schedule I. through Schedule\r\n                          V., as they may be revised from time to time (21 CFR\r\n                          1308). Specifically for this policy a Controlled\r\n                          Substance is one listed in Section 40.85 49 CFR part\r\n                          382.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Driver”</b> - means any person who operates a\r\n                          commercial motor vehicle. This includes, but is not\r\n                          limited to: full time, regularly employed drivers;\r\n                          casual, intermittent or occasional drivers; leased\r\n                          drivers and independent, owner-operator contractors\r\n                          who are either directly employed by or under lease to\r\n                          an employer or who operate a commercial motor vehicle\r\n                          at the direction of or with the consent of an\r\n                          employer. For the purposes of pre-employment/pre-duty\r\n                          testing only, the term driver includes a person\r\n                          applying to an employer to drive a commercial motor\r\n                          vehicle.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Drug Testing” or “Drug Test”</b> - scientific\r\n                          analysis for the presence of drugs or their\r\n                          metabolites in the human body.\r\n                        </li>\r\n                        <li>\r\n                          <b>“DER”</b> (Designated Employee Representative) is\r\n                          an individual identified by the employer as able to\r\n                          receive communications and test results from service\r\n                          agents and who is authorized to take immediate actions\r\n                          to remove employees from safety-sensitive duties and\r\n                          to make required decisions in the testing and\r\n                          evaluation process. The individual must be an employee\r\n                          of the Company and not be a service agent\r\n                        </li>\r\n                        <li>\r\n                          <b>“Employee”</b>- individual or officer in the\r\n                          service of the employer for compensation.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Employer”</b> - means any person (including the\r\n                          United States, a State, District of Columbia or a\r\n                          political subdivision of a State) who owns or leases a\r\n                          commercial motor vehicle or assigns persons to operate\r\n                          such a vehicle. The term employer includes an employer\r\n                          agents, officers and representatives.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Interstate Commerce”</b> - means (1) any trade,\r\n                          traffic, or transportation within the jurisdiction of\r\n                          the United States between a place in a State and a\r\n                          place outside of such State, including a place outside\r\n                          of the United States, and (2) trade, traffic, and\r\n                          transportation in the United States which affects any\r\n                          trade, traffic, and transportation as described above\r\n                          in this definition.\r\n                        </li>\r\n                        <li>\r\n                          <b>\"Medical Review Officer (MRO)\"</b> – a licensed\r\n                          physician responsible for receiving laboratory results\r\n                          generated by an employer drug testing program who has\r\n                          knowledge of substance abuse disorders and has\r\n                          appropriate medical training to interpret and evaluate\r\n                          an individual confirmed positive test result together\r\n                          with his or her medical history and any other relevant\r\n                          biomedical information.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Motor Carrier”</b> - means a for-hire motor\r\n                          carrier or a private motor carrier of property. The\r\n                          term “motor carrier” includes a motor carrier agents,\r\n                          officers and representatives as well as employees\r\n                          responsible for hiring, supervising, training,\r\n                          assigning, or dispatching of drivers and employees\r\n                          concerned with the installation, inspection, and\r\n                          maintenance of motor vehicle equipment and/or\r\n                          accessories.\r\n                        </li>\r\n                        <li>\r\n                          <b>“On-Duty Time”</b> - means all time from the time a\r\n                          driver begins to work or is required to be in\r\n                          readiness to work until the time he/she is relieved\r\n                          from work and all responsibility for performing work.\r\n                          On duty time shall include:\r\n                        </li>\r\n                        <ol>\r\n                          <li>\r\n                            All time at a carrier or shipper plant, terminal,\r\n                            facility, or other property, or on any public\r\n                            property, waiting to be dispatched, unless the\r\n                            driver has been relieved from duty by the motor\r\n                            carrier;\r\n                          </li>\r\n                          <li>\r\n                            All time inspecting equipment as required by 392.7\r\n                            and 392.8 of this chapter or otherwise inspecting,\r\n                            servicing, or conditioning any commercial motor\r\n                            vehicle at any time;\r\n                          </li>\r\n                          <li>\r\n                            All driving time as defined in the term driving time\r\n                            in this section;\r\n                          </li>\r\n                          <li>\r\n                            All time, other than driving time, in or upon any\r\n                            commercial motor vehicle except time spent resting\r\n                            in a sleeper berth as defined by the term sleeper\r\n                            berth of this section;\r\n                          </li>\r\n                          <li>\r\n                            All time loading or unloading a vehicle,\r\n                            supervision, or assisting in the loading or\r\n                            unloading, attending a vehicle being loaded or\r\n                            unloaded, remaining in readiness to operate the\r\n                            vehicle, or in giving or receiving receipts from\r\n                            shipments loaded or unloaded;\r\n                          </li>\r\n                          <li>\r\n                            All time spent performing the driver requirements of\r\n                            392.40 and 392.41 of this chapter relating to\r\n                            accidents;\r\n                          </li>\r\n                          <li>\r\n                            All time repairing, obtaining assistance, or\r\n                            remaining in attendance upon a disabled vehicle;\r\n                          </li>\r\n                        </ol>\r\n                        <li>\r\n                          <b>“On Duty or Safety Sensitive Function”</b> - all\r\n                          time from the time a driver begins to work or is\r\n                          required to be in readiness to work until the time\r\n                          he/she is relieved from work and all responsibility\r\n                          for performing work. This shall include:\r\n                        </li>\r\n                        <ol>\r\n                          <li>All time driving.</li>\r\n                          <li>\r\n                            All time repairing, obtaining assistance, or\r\n                            remaining in attendance upon a disabled vehicle.\r\n                          </li>\r\n                          <li>\r\n                            All time other than driving time, in or upon any\r\n                            commercial motor vehicle except time spent sleeping\r\n                            or resting in a sleeper berth.\r\n                          </li>\r\n                          <li>\r\n                            All time inspecting equipment or servicing a vehicle\r\n                          </li>\r\n                          <li>\r\n                            All time at an employer or shipper plant, terminal,\r\n                            facility or other property, or on any public\r\n                            property, waiting to be dispatched, unless the\r\n                            driver has been relieved from duty by the employer.\r\n                          </li>\r\n                        </ol>\r\n                        <li>\r\n                          <b>“Performing (a safety-sensitive function)”</b> -\r\n                          means a driver is considered to be performing a\r\n                          safety-sensitive function during any period in which\r\n                          he/she is actually performing, ready to perform, or\r\n                          immediately available to perform any safety-sensitive\r\n                          functions.\r\n                        </li>\r\n                        <li>\r\n                          <b>\"Post-Accident Testing\"</b> – is required when\r\n                          there is an occurrence involving a commercial motor\r\n                          vehicle operating on a public road in interstate or\r\n                          intrastate commerce which results in the following:\r\n                        </li>\r\n                        <ol>\r\n                          <li>a fatality; or</li>\r\n                          <li>\r\n                            and accident where a driver receives a moving\r\n                            violation citation and one of the following occurs\r\n                          </li>\r\n                          <ol>\r\n                            <li>\r\n                              injury to a person who, as a result of the injury,\r\n                              immediately receives medical treatment away from\r\n                              the scene of the accident;\r\n                            </li>\r\n                            <li>\r\n                              or one or more motor vehicles incurring disabling\r\n                              damage as a result of the accident, requiring the\r\n                              motor vehicle to be transported away from the\r\n                              scene by a tow truck or other motor vehicle and\r\n                              the driver receives a moving citation violation.\r\n                            </li>\r\n                          </ol>\r\n                        </ol>\r\n                        <li>\r\n                          <b>“Prospective Employee”</b> - any individual who has\r\n                          made a written or oral application to become an\r\n                          employee of the Company.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Reasonable Suspicion\" or \"For Cause Testing”</b> -\r\n                          an articulated belief, based on recorded specific\r\n                          facts and reasonable inference drawn from those facts\r\n                          that an employee is in violation of this policy.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Random Testing”</b> - unannounced drug testing of\r\n                          an employee who was selected by using a method\r\n                          uninfluenced by any personal characteristic other than\r\n                          job category.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Refusal”</b> means that a driver:\r\n                        </li>\r\n                        <ol>\r\n                          <li>\r\n                            Fails to show up for any test within a reasonable\r\n                            time after being directed to do so by the employer\r\n                            or to remain at the testing site until the testing\r\n                            process is complete. This includes the failure of an\r\n                            employee (including an owner-operator) to appear for\r\n                            a test when called by a Consortium/Third Party\r\n                            Administrator.\r\n                          </li>\r\n                          <li>\r\n                            Fails to provide a urine specimen for any drug test\r\n                            require by the Act.\r\n                          </li>\r\n                          <li>\r\n                            In the case of a directly observed or monitored\r\n                            collection in a drug test, fails to permit the\r\n                            observation of monitoring of the provision of a\r\n                            specimen (Sec. Sec 40.76(k) and 40.69 (g) of this\r\n                            title.\r\n                          </li>\r\n                          <li>\r\n                            Fails to provide a sufficient amount of urine when\r\n                            directed, unless it has been determined through a\r\n                            required medical evaluation, that there was an\r\n                            adequate medical explanation for the failure.\r\n                          </li>\r\n                          <li>\r\n                            Fails to undergo an additional medical evaluation as\r\n                            directed by the MRO as part of the verification\r\n                            process or as directed by the DER concerning the\r\n                            evaluation of the shy bladder procedures in part 40,\r\n                            subpart I of this title.\r\n                          </li>\r\n                          <li>\r\n                            Fails to cooperate with any part of the testing\r\n                            process.\r\n                          </li>\r\n                          <li>\r\n                            Fails or declines to take a second test the employer\r\n                            has directed following a negative dilute result.\r\n                          </li>\r\n                        </ol>\r\n                        <li>\r\n                          <b>“Sample”</b> - any sample of urine, blood, breath,\r\n                          saliva used for drug and/or alcohol testing.\r\n                        </li>\r\n                        <li>\r\n                          <b>“Safety Sensitive Position”</b> - all employees who\r\n                          possess Commercial Driver's Licenses (CDL's) and who\r\n                          operate a vehicle with the following characteristics:\r\n                        </li>\r\n                        <ol>\r\n                          <li>\r\n                            Has a gross combination weight rating of 26,001 or\r\n                            more pounds inclusive of a towed unit with a gross\r\n                            vehicle weight rating of more than 10,000 pounds; or\r\n                          </li>\r\n                          <li>\r\n                            Has a gross vehicle weight rating of 26,001 or more\r\n                            pounds; or\r\n                          </li>\r\n                          <li>\r\n                            Is designed to transport 16 or more passengers,\r\n                            including the driver; or\r\n                          </li>\r\n                          <li>\r\n                            Is of any size and is used in the transportation of\r\n                            material found to be hazardous for the purposes of\r\n                            the Hazardous Materials Transportation Act and which\r\n                            require the motor vehicle to be placard under the\r\n                            Hazardous Materials Regulations (CFR part 172,\r\n                            subpart F).\r\n                          </li>\r\n                        </ol>\r\n                      </ol>\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            {/* BUTTON Start */}\r\n            <Grid item xs={2}></Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  props.handler[1]();\r\n                }}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Save This & Next\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n            {/* BUTTON End */}\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/drug and alcohol policy snapshot 1.59e9a112.jpg\";","import { Button, Grid, Paper, Typography, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Accordion, Col, Container, Row } from \"react-bootstrap\";\r\nimport styleClasses from \"../Common/styleClasses\";\r\nimport { reqBits, RequireError } from \"../Common/CommonVariables\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport drug_and_alcohol_policy_snapshot_1 from \"../assets/images/drug and alcohol policy snapshot 1.jpg\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport { update } from \"../services/updateApi\";\r\nimport { useRef } from \"react\";\r\n\r\ntype Props = { data?: any; handler?: any };\r\n\r\nexport default function EmpApplicationForm6(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: props.data,\r\n  });\r\n\r\n  const sigPad = useRef<any>();\r\n  let base64SignatureImage = \"\";\r\n\r\n  const clearSigPad = () => {\r\n    if (sigPad && sigPad.current) {\r\n      sigPad.current?.clear();\r\n      base64SignatureImage = \"\";\r\n    }\r\n  };\r\n\r\n  const saveImage = () => {\r\n    if (sigPad.current && !sigPad.current.isEmpty()) {\r\n      base64SignatureImage = sigPad.current\r\n        ?.getTrimmedCanvas()\r\n        .toDataURL(\"image/png\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (sigPad.current && sigPad.current.isEmpty()) return;\r\n    {\r\n      base64SignatureImage = sigPad.current\r\n        .getTrimmedCanvas()\r\n        .toDataURL(\"image/png\");\r\n    }\r\n    data.alcoholTestEmployeeSignature = base64SignatureImage;\r\n    data.user_name = props.data.user_name;\r\n    const resdata = await update(data);\r\n    console.log(\r\n      \"-------------------FORM 6 Submited Data and Response-------------------\"\r\n    );\r\n    console.log(data);\r\n    console.log(resdata);\r\n    props.handler[0]();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container style={{ backgroundColor: \"#fafafa\" }}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-around\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            {/* PAGE 2 */}\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{ paddingLeft: \"40px\", paddingRight: \"60px\" }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <Typography align=\"justify\" variant=\"subtitle2\">\r\n                      <b>E. Alcohol Testing.</b>\r\n                      <br />\r\n                    </Typography>\r\n                    <br />\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          <u>\r\n                            <b>\r\n                              Pre-Employment (Background Check Only – Alcohol\r\n                              Testing is Optional).\r\n                            </b>\r\n                          </u>\r\n                          The company must obtain and review the information\r\n                          listed below from any employer for whom the driver\r\n                          performed safety-sensitive functions in the previous\r\n                          two years. The information must be obtained and\r\n                          reviewed to later than 30 days after the driver\r\n                          performs safety-sensitive functions (driving).\r\n                          <ul>\r\n                            <li>\r\n                              Information of the driver's alcohol test in which\r\n                              a breath alcohol concentration of 0.04 or greater\r\n                              was indicated\r\n                            </li>\r\n                            <li>\r\n                              Information on the driver’s-controlled substances\r\n                              test in which a positive result was indicated.\r\n                            </li>\r\n                            <li>\r\n                              Any refusal to submit to a required alcohol or\r\n                              controlled substance test.\r\n                            </li>\r\n                          </ul>\r\n                          The company must provide to each of the driver's\r\n                          previous employers of the past two years a written\r\n                          authorization from the driver for the release of the\r\n                          required information. The company may not use a driver\r\n                          to perform safety-sensitive functions if the employer\r\n                          obtains information indicating the driver has tested\r\n                          positive for controlled substances, tested at or above\r\n                          .04 breath alcohol concentration, or refused to test\r\n                          unless the employer has evidence the driver has been\r\n                          evaluated by a SAP, completed any required counseling,\r\n                          passed a return-to-duty test, and been subject to\r\n                          follow-up testing.\r\n                        </li>\r\n                        <li>\r\n                          <u>Random Testing</u>\r\n                          <ul>\r\n                            <li>\r\n                              Employees in \"covered\" positions will be subject\r\n                              to random testing at any time with no advance\r\n                              notice. The random selection process will ensure\r\n                              each employee the same fair and equal chance of\r\n                              being selected.\r\n                            </li>\r\n                            <li>\r\n                              An employee randomly selected will be notified by\r\n                              his/her supervisor of the selection and instructed\r\n                              to immediately go to the designated\r\n                              alcohol-testing site.\r\n                            </li>\r\n                            <li>\r\n                              Random testing will be conducted monthly and will\r\n                              be administered at a 10% annualized rate. This\r\n                              means that the total number of tests conducted\r\n                              during any 12-month period will be equal to at\r\n                              least 10 percent of the total pool of covered\r\n                              employees.\r\n                            </li>\r\n                          </ul>\r\n                        </li>\r\n                        <li>\r\n                          <u>Reasonable Suspicion.</u>\r\n                        </li>\r\n                        <ul>\r\n                          <li>\r\n                            An employee/driver shall submit to testing, for\r\n                            reasonable suspicion, for the use of alcohol when\r\n                            requested to do so by the Company.\r\n                          </li>\r\n                          <li>\r\n                            The employee conduct must be witnessed by at least\r\n                            one supervisor and company official. The supervisor\r\n                            or witnesses must have received training in the\r\n                            specific identification of actions, appearance,\r\n                            behavior, or conduct of a commercial motor vehicle\r\n                            driver, which are indicative of alcohol use.\r\n                          </li>\r\n                          <li>\r\n                            The supervisor shall ensure that the employee is\r\n                            transported to the alcohol-testing site.\r\n                          </li>\r\n                          <li>\r\n                            If an employee refuses to submit to the alcohol test\r\n                            or attempts to leave Company premises and is\r\n                            impaired to the extent that he/she would present a\r\n                            danger to either him/herself or others, local law\r\n                            enforcement should be contacted immediately by the\r\n                            Company representative.\r\n                          </li>\r\n                          <li>\r\n                            While waiting for an employee's alcohol test\r\n                            results, that employee will be removed from\r\n                            performing safety-sensitive functions and, if the\r\n                            test results are positive, may be subject to further\r\n                            disciplinary action up to and including termination.\r\n                            Specific disciplinary actions are described in\r\n                            detail in the end of this policy\r\n                          </li>\r\n                        </ul>\r\n                        <li>\r\n                          <u>Post-Accident Testing.</u>\r\n                          <ul>\r\n                            <li>\r\n                              A driver shall submit to an alcohol test within 2\r\n                              hours (but not later than 8 hours) of a\r\n                              determination by the Company officials that a test\r\n                              is required and that circumstances indicate the\r\n                              accident is reportable under the FMSCA\r\n                              regulations. It must be determined that the driver\r\n                              received a citation for a moving traffic violation\r\n                              arising from the accident. A DOT reportable\r\n                              accident is defined in 49 CFR Part 394.3 (Federal\r\n                              Motor Carrier Safety Regulations Pocketbook, Form\r\n                              2133) as;\r\n                            </li>\r\n                            <ul>\r\n                              <li>\r\n                                indicate the accident is reportable under the\r\n                                FMSCA regulations. It must be determined that\r\n                                the driver received a citation for a moving\r\n                                traffic violation arising from the accident. A\r\n                                DOT reportable accident is defined in 49 CFR\r\n                                Part 394.3 (Federal Motor Carrier Safety\r\n                                Regulations Pocketbook, Form 2133) as;\r\n                              </li>\r\n                              <ul>\r\n                                <li>\r\n                                  An occurrence involving a commercial motor\r\n                                  vehicle operating on a public road in\r\n                                  commerce: see below image\r\n                                </li>\r\n                              </ul>\r\n                            </ul>\r\n                          </ul>\r\n                          <img\r\n                            src={drug_and_alcohol_policy_snapshot_1}\r\n                            style={{ paddingRight: \"100px\" }}\r\n                          />\r\n                          <ul style={{ listStyleType: \"none\" }}>\r\n                            <li>\r\n                              <ul>\r\n                                <li>\r\n                                  A driver who is seriously injured and cannot\r\n                                  be tested at the time of the accident should\r\n                                  provide the necessary authorization for\r\n                                  obtaining hospital reports and other documents\r\n                                  that would indicate whether there was any\r\n                                  alcohol in his/her system.\r\n                                </li>\r\n                                <li>\r\n                                  The results of a breath or blood test for the\r\n                                  use of alcohol conducted by Federal, State, or\r\n                                  Local law enforcement officials having\r\n                                  independent authority to conduct such tests,\r\n                                  shall be considered to meet the requirements\r\n                                  of this section, provided such tests conform\r\n                                  to the applicable Federal, State, or Local\r\n                                  requirements. Company officials shall obtain\r\n                                  such test results.\r\n                                </li>\r\n                                <li>\r\n                                  The Company shall provide drivers with\r\n                                  necessary information and procedures so that\r\n                                  the driver will be able to meet the\r\n                                  requirement as set forth in this section.\r\n                                </li>\r\n                                <li>\r\n                                  While waiting for an employee's alcohol test\r\n                                  results, that employee will be removed from\r\n                                  performing safety-sensitive functions and, if\r\n                                  the test results are positive, may be subject\r\n                                  to further disciplinary action up to and\r\n                                  including termination. Specific disciplinary\r\n                                  actions are described in detail in the end of\r\n                                  this policy.\r\n                                </li>\r\n                                <li>\r\n                                  Employee Responsibility. As soon as\r\n                                  practicable following an accident as defined\r\n                                  in this plan, the employee shall make every\r\n                                  attempt to contact his/her supervisor and the\r\n                                  substance abuse program administrator.\r\n                                </li>\r\n                                <ul>\r\n                                  <li>\r\n                                    The employee will be given instructions for\r\n                                    obtaining alcohol and substance abuse\r\n                                    testing.\r\n                                  </li>\r\n                                  <li>\r\n                                    An employee who is subject to post-accident\r\n                                    testing must remain available for testing,\r\n                                    or company may consider the employee to have\r\n                                    refused to submit to testing.\r\n                                  </li>\r\n                                  <li>\r\n                                    The employee subject to post-accident\r\n                                    testing must refrain from consuming alcohol\r\n                                    for eight hours following the accident, or\r\n                                    until he or she submits to an alcohol test,\r\n                                    whichever comes first.\r\n                                  </li>\r\n                                </ul>\r\n                                <li>Company Responsibility.</li>\r\n                                <ul>\r\n                                  <li>\r\n                                    Upon receiving a report of an accident, the\r\n                                    company shall test the employee (if no a\r\n                                    fatality) for alcohol and controlled\r\n                                    substances as soon as practicable.\r\n                                  </li>\r\n                                </ul>\r\n                                <li>\r\n                                  <u>Return to Duty.</u>\r\n                                </li>\r\n                                <ul>\r\n                                  <li>\r\n                                    <u>\r\n                                      The requirements for return-to-duty\r\n                                      testing must be performed in accordance\r\n                                      with 49 CFR Part 40, Subpart O and that\r\n                                      information can be found in Section V of\r\n                                      the Alcohol Misuse Prevention plan.\r\n                                    </u>\r\n                                  </li>\r\n                                </ul>\r\n                                <li>\r\n                                  <u>Follow-up Testing.</u>\r\n                                </li>\r\n                                <ul>\r\n                                  <li>\r\n                                    <u>\r\n                                      The requirements for follow-up testing\r\n                                      must be performed in accordance with 49\r\n                                      CFR Part 40, Subpart O and that\r\n                                      information can be found in Section V of\r\n                                      the Alcohol Misuse Prevention plan.\r\n                                    </u>\r\n                                  </li>\r\n                                </ul>\r\n                              </ul>\r\n                            </li>\r\n                          </ul>\r\n                        </li>\r\n                      </ol>\r\n                    </Typography>\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>F. Drug Testing.</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      Dilute Specimens – If the Company receives a test result,\r\n                      which is verified positive, but dilute, it will be treated\r\n                      as a positive test.\r\n                      <ol>\r\n                        <li>\r\n                          If the Company receives a test, which is negative and\r\n                          dilute, it will not retest the employee.\r\n                        </li>\r\n                      </ol>\r\n                      Invalid Tests- If the Company receives a test result,\r\n                      which is determined to be invalid (49 CFR 40.23) it will\r\n                      immediately have the employee retested. The employee will\r\n                      be given no notification of the need to retest. The test\r\n                      will be an observed specimen collection. No action will be\r\n                      taken on the first test result.\r\n                      <br />\r\n                      <br />\r\n                      Types of Drug Testing\r\n                      <ol>\r\n                        <li>\r\n                          Pre-Employment Testing.\r\n                          <ol>\r\n                            <li>\r\n                              The Company shall require a driver-applicant who\r\n                              they intend to hire or use to be tested for the\r\n                              use of controlled substance as a pre-qualification\r\n                              condition.\r\n                            </li>\r\n                            <li>\r\n                              A driver-applicant shall submit to controlled\r\n                              substance testing as a pre-qualification\r\n                              condition.\r\n                            </li>\r\n                            <li>\r\n                              Prior to collection of a urine sample, a\r\n                              driver-applicant shall be notified that the sample\r\n                              will be tested for the presence of controlled\r\n                              substances.\r\n                            </li>\r\n                            <li>\r\n                              The Company may use a driver who is a regularly\r\n                              employed driver of another motor carrier without\r\n                              complying with paragraph 1.a. above, if the driver\r\n                              meets the requirements of 391.65, &quot;Drivers\r\n                              Furnished by other Motor Carriers&quot;.\r\n                            </li>\r\n                            <li>\r\n                              The Company may use a driver who is not tested by\r\n                              the Company provided they assures itself:\r\n                              <ol>\r\n                                <li>\r\n                                  That the driver has participated in a drug\r\n                                  testing program that meets the requirements\r\n                                  under this Plan within the previous 30 days\r\n                                  and,\r\n                                </li>\r\n                                <li>\r\n                                  While participating in that program was either\r\n                                  <ol>\r\n                                    <li>\r\n                                      Tested for controlled substances within\r\n                                      the past 6 months (from the date of\r\n                                      application with the Company) or\r\n                                    </li>\r\n                                    <li>\r\n                                      Participated in the drug-testing program\r\n                                      for the previous 12 months (from the date\r\n                                      of application with the Company).\r\n                                    </li>\r\n                                  </ol>\r\n                                </li>\r\n                                <li>\r\n                                  When the Company exercises either paragraph d\r\n                                  or e above, the Company will contact the\r\n                                  controlled substances testing program in which\r\n                                  the driver participates or participated and\r\n                                  will obtain the following information;\r\n                                  <ol>\r\n                                    <li>Name and address of the program.</li>\r\n                                    <li>\r\n                                      Verification that the driver participates\r\n                                      or participated in the program.\r\n                                    </li>\r\n                                    <li>\r\n                                      Verification that the program conforms to\r\n                                      49 CFR Part 40.\r\n                                    </li>\r\n                                    <li>\r\n                                      Verification that the driver is qualified\r\n                                      under the rules of this part including\r\n                                      that the driver has not refused to be\r\n                                      tested for controlled substances.\r\n                                    </li>\r\n                                    <li>\r\n                                      The date the driver was last tested for\r\n                                      controlled substances.\r\n                                    </li>\r\n                                    <li>\r\n                                      The results, positive or negative, of any\r\n                                      test taken.\r\n                                    </li>\r\n                                  </ol>\r\n                                </li>\r\n                              </ol>\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                        <li>\r\n                          Random Testing.\r\n                          <ol>\r\n                            <li>\r\n                              Employees in &quot;covered&quot; positions will be\r\n                              subject to random testing at any time with no\r\n                              advance notice. The random selection process will\r\n                              ensure each employee the same fair and equal\r\n                              chance of being selected.\r\n                            </li>\r\n                            <li>\r\n                              An employee randomly selected will be notified by\r\n                              his/her supervisor of the selection and instructed\r\n                              to immediately go to the designated collection\r\n                              site.\r\n                            </li>\r\n                            <li>\r\n                              Random testing will be conducted monthly and will\r\n                              be administered at a 25% annualized rate. This\r\n                              means that the total number of tests conducted\r\n                              during any 12-month period will be equal to at\r\n                              least 25 percent of the total pool of covered\r\n                              employees.\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                        <li>\r\n                          Reasonable Cause.\r\n                          <ol>\r\n                            <li>\r\n                              An employee/driver shall submit to testing, for\r\n                              reasonable cause, for the use of controlled\r\n                              substances when requested to do so by the Company.\r\n                            </li>\r\n                            <li>\r\n                              The conduct should be witnessed by at least two\r\n                              supervisors or company officials, if feasible. If\r\n                              not feasible, only one supervisor or company\r\n                              official need witness the conduct. The witness or\r\n                              witnesses must have received training in the\r\n                              identification of actions, appearance, or conduct\r\n                              of a commercial motor vehicle driver, which are\r\n                              indicative of the use of a controlled substance.\r\n                            </li>\r\n                            <li>\r\n                              The supervisor shall transport the employee to the\r\n                              collection site.\r\n                            </li>\r\n                            <li>\r\n                              If an employee refuses to submit to drug testing\r\n                              or attempts to leave the Company? premises and is\r\n                              impaired, in the opinion of a trained supervisor,\r\n                              to the extent that he/she would present a danger\r\n                              to either him/herself or others, local law\r\n                              enforcement should be contacted immediately by the\r\n                              supervisor.\r\n                            </li>\r\n                            <li>\r\n                              While waiting for an employee's drug test results,\r\n                              that employee will be removed from their\r\n                              &quot;covered&quot; position until the Medical\r\n                              Review Officer (MRO) confirms that the employee\r\n                              tested negative for drugs.\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                        <li>\r\n                          Post-Accident Testing.\r\n                          <ol>\r\n                            <li>\r\n                              A driver shall provide a urine sample to be tested\r\n                              for the use of controlled substances as soon as\r\n                              possible, but no later than 32 hours, after a\r\n                              reportable accident if the driver of the\r\n                              commercial vehicle received a citation for a\r\n                              moving traffic violation arising from the\r\n                              accident. A DOT reportable accident is defined in\r\n                              49 CFR Part 394.3 (Federal Motor Carrier Safety\r\n                              Regulations Pocketbook, Form 2133) as;\r\n                              <ol>\r\n                                <li>\r\n                                  An occurrence involving a commercial motor\r\n                                  vehicle operating on a public road in\r\n                                  commerce:\r\n                                </li>\r\n                              </ol>\r\n                            </li>\r\n                            <img\r\n                              src={drug_and_alcohol_policy_snapshot_1}\r\n                              style={{ paddingRight: \"100px\" }}\r\n                            />\r\n                          </ol>\r\n                        </li>\r\n                      </ol>\r\n                      <ul style={{ listStyleType: \"none\" }}>\r\n                        <li>\r\n                          <ol start={2}>\r\n                            <li>\r\n                              A driver who is seriously injured and cannot\r\n                              provide a specimen at the time of the accident\r\n                              shall provide the necessary authorization for\r\n                              obtaining hospital reports and other documents\r\n                              that would indicate whether there were any\r\n                              controlled substances in his/her system.\r\n                            </li>\r\n                            <li>\r\n                              The Company shall provide drivers with necessary\r\n                              information and procedures so that the driver will\r\n                              be able to meet the requirement of paragraphs 5.a.\r\n                              and 5.b. of this section.\r\n                            </li>\r\n                            <li>\r\n                              While waiting for an employee's drug test results,\r\n                              that employee will be removed from their\r\n                              &quot;covered&quot; position until the Medical\r\n                              Review Officer (MRO) confirms that the employee\r\n                              tested negative for drugs.\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                      </ul>\r\n                      <ol start={5}>\r\n                        <li>Return to Duty.</li>\r\n                        <ul>\r\n                          <li>\r\n                            (a) The requirements for return-to-duty testing must\r\n                            be performed in accordance with 49 CFR Part 40,\r\n                            Subpart O\r\n                          </li>\r\n                        </ul>\r\n                        <li>Follow-up Testing.</li>\r\n                        <ul>\r\n                          <li>\r\n                            The requirements for follow-up testing must be\r\n                            performed in accordance with 49 CFR Part 40, Subpart\r\n                            O and that information can be found in Section V of\r\n                            the Alcohol Misuse Prevention plan.\r\n                          </li>\r\n                        </ul>\r\n                      </ol>\r\n                    </Typography>\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>\r\n                        G. Employee Admission of Alcohol and Controlled\r\n                        Substances Use. (The Company does not have a voluntary\r\n                        admission program. This section is not applicable.)\r\n                      </b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          Employees who admit to alcohol misuse or controlled\r\n                          substances use are not subject to the referral,\r\n                          evaluation and treatment requirements of this part and\r\n                          part 40 of this title, provided that:\r\n                          <ol>\r\n                            <li>\r\n                              (a) The admission is in accordance with a written\r\n                              employer-established voluntary self-identification\r\n                              program or policy that meets the requirements of\r\n                              paragraph (b) of this section;\r\n                            </li>\r\n                            <li>\r\n                              (b) The driver does not self-identify in order to\r\n                              avoid testing under the requirements of this part;\r\n                            </li>\r\n                            <li>\r\n                              (c) The driver makes the admission of alcohol\r\n                              misuse or controlled substances use prior to\r\n                              performing a safety sensitive function (i.e.,\r\n                              prior to reporting for duty); and\r\n                            </li>\r\n                            <li>\r\n                              (d) The driver does not perform a safety sensitive\r\n                              function until the employer is satisfied that the\r\n                              employee has been evaluated and has successfully\r\n                              completed education or treatment requirements in\r\n                              accordance with the self-identification program\r\n                              guidelines.\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                        <li>\r\n                          A qualified voluntary self-identification program or\r\n                          policy must contain the following elements:\r\n                          <ol>\r\n                            <li>\r\n                              (a) It must prohibit the employer from taking\r\n                              adverse action against an employee making a\r\n                              voluntary admission of alcohol misuse or\r\n                              controlled substances use within the parameters of\r\n                              the program or policy and paragraph (a) of this\r\n                              section;\r\n                            </li>\r\n                            <li>\r\n                              (b) It must allow the employee sufficient\r\n                              opportunity to seek evaluation, education or\r\n                              treatment to establish control over the employee's\r\n                              drug or alcohol problem;\r\n                            </li>\r\n                            <li>\r\n                              (c) It must permit the employee to return to\r\n                              safety sensitive duties only upon successful\r\n                              completion of an educational or treatment program,\r\n                              as determined by a drug and alcohol abuse\r\n                              evaluation expert, i.e., employee assistance\r\n                              professional, substance abuse professional, or\r\n                              qualified drug and alcohol counselor;\r\n                            </li>\r\n                            <li>\r\n                              (d) It must ensure that:\r\n                              <ol>\r\n                                <li>\r\n                                  Prior to the employee participating in a\r\n                                  safety sensitive function, the employee shall\r\n                                  undergo a return to duty test with a result\r\n                                  indicating an alcohol concentration of less\r\n                                  than 0.02; and/or\r\n                                </li>\r\n                                <li>\r\n                                  Prior to the employee participating in a\r\n                                  safety sensitive function, the employee shall\r\n                                  undergo a return to duty controlled substance\r\n                                  test with a verified negative test result for\r\n                                  controlled substances use; and\r\n                                </li>\r\n                              </ol>\r\n                            </li>\r\n                            <li>\r\n                              (e) It may incorporate employee monitoring and\r\n                              include non-DOT follow-up testing\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                      </ol>\r\n                    </Typography>\r\n\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>H. Disciplinary Action.</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          Violation of Policy.\r\n                          <ol>\r\n                            <li>\r\n                              a) Any driver with a verified positive\r\n                              pre-employment drug test will not be hired. After\r\n                              a Return to Duty clearance the driver may be\r\n                              eligible for a new pre-employment after 30 days\r\n                              and shows qualification to drive under a Return to\r\n                              Duty authorization by SAP.\r\n                            </li>\r\n                            <li>\r\n                              b) Any driver with a verified positive drug test\r\n                              will be suspended from a safety sensitive duty and\r\n                              subject to disciplinary action up to and including\r\n                              termination.\r\n                            </li>\r\n                            <li>\r\n                              c) If Driver is not terminated for positive drug\r\n                              test the driver will be required to complete a\r\n                              treatment and counseling program that meets the\r\n                              requirements of the DOT for returning to duty (at\r\n                              the employees own expense). They employee will\r\n                              have to take and pass a return to duty test and\r\n                              will be subject to a minimum of six (6)\r\n                              unannounced tests in the first 12 months of\r\n                              returning to duty.\r\n                            </li>\r\n                            <li>\r\n                              d) Any driver with a positive alcohol test of\r\n                              0.02-0.039 will be suspended with out pay for one\r\n                              work shift or 24 hours and will be required to\r\n                              have a negative alcohol test before returning to a\r\n                              covered position.\r\n                            </li>\r\n                            <li>\r\n                              e) Any employee who consumes alcohol or drugs\r\n                              while “On-duty” will be terminated.\r\n                            </li>\r\n                            <li>\r\n                              f) Any employee with an alcohol level of 0.04 or\r\n                              greater will be subject to disciplinary action up\r\n                              to and including termination from employment or\r\n                              will be required to meet the return to duty\r\n                              requirements listed in subsection (c).\r\n                            </li>\r\n                            <li>\r\n                              g) Any transferring employee found in violation of\r\n                              the Company policy will be subject to disciplinary\r\n                              action up to and including termination from\r\n                              employment.\r\n                            </li>\r\n                            <li>\r\n                              h) Any attempt to adulterate, substitute, tamper\r\n                              or refuse to test will be treated as a positive\r\n                              test.\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                        <li>\r\n                          Refusal, Adulterate or Substitute a Test.\r\n                          <ol>\r\n                            <li>\r\n                              a) No employee shall adulterate, substitute or\r\n                              refuse a test or to submit to a random,\r\n                              reasonable-suspicion, post-accident, or follow-up\r\n                              alcohol test.\r\n                            </li>\r\n                            <li>\r\n                              b) An employee who refuses a return-to-duty test\r\n                              is not in violation of the plan; however, such\r\n                              refusal will result in not allowing the individual\r\n                              to perform safety-sensitive functions and may\r\n                              result in disciplinary action up to and including\r\n                              termination of employment.\r\n                            </li>\r\n                            <li>\r\n                              c) Employees who: (1) without a legitimate reason\r\n                              fail to report to the alcohol testing site; or (2)\r\n                              without a valid medical reason fail to provide an\r\n                              adequate breath sample under this policy will be\r\n                              suspended without pay and be subject to\r\n                              disciplinary action up to and including\r\n                              termination of employment.\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                        <li>\r\n                          Return to Duty.\r\n                          <ol>\r\n                            <li>\r\n                              a) An employee testing positive for alcohol may be\r\n                              returned to a &quot;safety-sensitive&quot;\r\n                              position after a return-to-duty test with an\r\n                              alcohol concentration of less than 0.02.\r\n                            </li>\r\n                            <li>\r\n                              b) After returning to work the employee will be\r\n                              subject to: 1) unannounced follow-up testing, as\r\n                              determined by the SAP and the Company officials;\r\n                              and 2) the other required types of testing which\r\n                              includes random.\r\n                            </li>\r\n                          </ol>\r\n                        </li>\r\n                        <li> 4. Contesting a Test Result.</li>\r\n                        <li></li>\r\n                        <li>\r\n                          An employee will have 72 hours from the time a\r\n                          positive drug test is reported to the company to\r\n                          contest a positive drug test result.\r\n                        </li>\r\n                      </ol>\r\n                    </Typography>\r\n\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>I. Alcohol Testing Overview.</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ol>\r\n                        <li>\r\n                          Alcohol Testing Procedures. All collection,\r\n                          transportation, testing procedures, test evaluation\r\n                          measures, quality control measures, substance abuse\r\n                          professionals, record keeping, and reporting of\r\n                          alcohol test results will conform to the Department of\r\n                          Transportation regulations as set forth in 49 CFR Part\r\n                          40, Procedures for Transportation Workplace Drug and\r\n                          Alcohol Testing Programs.\r\n                        </li>\r\n                      </ol>\r\n                    </Typography>\r\n\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>J. Record Retention.</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ul>\r\n                        <li>\r\n                          Record keeping.\r\n                          <ul>\r\n                            <li>\r\n                              The Company will retain the following records for\r\n                              a period of at least five (5) years:\r\n                              <ul>\r\n                                <li>\r\n                                  Records of driver alcohol test results with\r\n                                  results indicating a level of greater than\r\n                                  0.02.\r\n                                </li>\r\n                                <li>\r\n                                  Documentation of driver refusal to take\r\n                                  required alcohol tests.\r\n                                </li>\r\n                                <li>Driver referral and evaluation records.</li>\r\n                              </ul>\r\n                            </li>\r\n                            <li>\r\n                              The Company will retain records regarding the\r\n                              alcohol collection process for two years.\r\n                            </li>\r\n                            <li>\r\n                              The Company will retain test records of drivers\r\n                              with alcohol concentrations of less than 0.02 for\r\n                              a minimum of one year.\r\n                            </li>\r\n                            <li>\r\n                              The Company will retain records confirming\r\n                              supervisory and employee training for at least\r\n                              three (3) years.\r\n                            </li>\r\n                          </ul>\r\n                        </li>\r\n                        <li>Driver Qualification Files.</li>\r\n                        <li>\r\n                          These records are subject to the Company? current\r\n                          divided record keeping authority and are to be\r\n                          maintained at authorized record keeping locations.\r\n                          Below is a list of information to be maintained in\r\n                          these files regarding employee alcohol abuse.\r\n                          <ul>\r\n                            <li>\r\n                              The name of the employee submitted to a alcohol\r\n                              test;\r\n                            </li>\r\n                            <li>Date the alcohol test was conducted;</li>\r\n                            <li>Location of the alcohol test;</li>\r\n                            <li>Test category;</li>\r\n                            <li>Results of the alcohol test.</li>\r\n                          </ul>\r\n                        </li>\r\n                        <li>\r\n                          Record Confidentiality.\r\n                          <ul>\r\n                            <li>\r\n                              Except for the breath alcohol technician,\r\n                              substance abuse professional, and designated\r\n                              Company personnel with a need to know, the Company\r\n                              will not release information regarding an\r\n                              employee's alcohol use or rehabilitation/treatment\r\n                              records without the express written consent of the\r\n                              tested employee. The only exception is when\r\n                              information must be released, regardless of\r\n                              consent, to the Federal Motor Carrier Safety\r\n                              Administrator to examine all records related to\r\n                              the administration and results of controlled\r\n                              substance testing performed under this program.\r\n                            </li>\r\n                            <li>\r\n                              To maintain confidentiality, written records\r\n                              regarding an employee's alcohol misuse and\r\n                              rehabilitation will be stored in a secured\r\n                              location. The employee's alcohol testing and/or\r\n                              rehabilitation/treatment records will not be made\r\n                              a part of the employee's personnel file.\r\n                            </li>\r\n                          </ul>\r\n                        </li>\r\n                      </ul>\r\n                    </Typography>\r\n\r\n                    <Typography align=\"left\" variant=\"body1\">\r\n                      <b>K. Responsibility.</b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <ul>\r\n                        <li>\r\n                          Reservation of Rights - The Company reserves the right\r\n                          to interpret, modify, and/or revise this policy in\r\n                          whole or in part without notice. Nothing in this\r\n                          policy is to be construed as an employment contract\r\n                          nor does this alter an employee's employment at-will\r\n                          status. The employee remains free to resign his/her\r\n                          employment at any time for any or no reason, without\r\n                          notice. Similarly, the Company reserves the right to\r\n                          terminate any employee's employment, for any or no\r\n                          reason, without notice.\r\n                        </li>\r\n                        <li>\r\n                          Compliance with All Laws. This policy will be amended\r\n                          from time to time to comply with changes in Federal\r\n                          and State Laws.\r\n                        </li>\r\n                      </ul>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      This policy is a general summary of the Company’s Drug and\r\n                      Alcohol Misuse Prevention Policy for Commercial Drivers.\r\n                      IF THERE IS ANY QUESTION OR CONFLICT BETWEEN WHAT IS SAID\r\n                      IN THE POLICY AND THE LANGUAGE IN THE DOT REGULATIONS AS\r\n                      CODIFIED AT 49 CFR PART 40 AND 382, THE DOT REGULATIONS\r\n                      WILL PREVAIL.\r\n                    </Typography>\r\n                    <Typography align=\"center\" variant=\"h6\">\r\n                      <br />\r\n                      ACKNOWLEDGMENT AND AGREEMENT\r\n                      <br />\r\n                      WITH RESPECT TO DRUG AND ALCOHOL TESTING\r\n                    </Typography>\r\n                    <br />\r\n                    <br />\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      I, the undersigned employee hereby certify that I have\r\n                      been furnished with a copy of the DOT Alcohol and Drug\r\n                      Testing Program, and that I have read and understand same.\r\n                      I further certify that I have been provided with\r\n                      informational material, education and training on the\r\n                      dangers and problems of drug and alcohol misuse.\r\n                    </Typography>\r\n                    <br />\r\n                    <br />\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      I am fully aware, and agree that I may be discharged or\r\n                      otherwise disciplined for any violation by me of said DOT\r\n                      Alcohol and Drug Policy, for any failure or refusal to\r\n                      provide urine and/or breath specimens when requested by my\r\n                      employer, for the failure or refusal to identify and\r\n                      certify same, for the failure to cooperate with the forms\r\n                      and other documents, and/or for any other Alcohol and Drug\r\n                      Testing Program.\r\n                    </Typography>\r\n                    {/* SOME Text Field Remaing */}\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"baseline\"\r\n                    spacing={3}\r\n                  >\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"alcoholTestEmployeeFirstName\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        label=\"Employee First Name\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value: reqBits.alcoholTestEmployeeFirstName,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"alcoholTestEmployeeLastName\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        label=\"Employee Last Name\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value: reqBits.alcoholTestEmployeeLastName,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"alcoholTestSecurityNumber\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        label=\"Social Security Number\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value: reqBits.alcoholTestSecurityNumber,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"alcoholTestExecutionDate\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"date\"\r\n                        helperText=\"Executed on the date\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value: reqBits.alcoholTestExecutionDate,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={10}>\r\n                      <Paper\r\n                        elevation={3}\r\n                        style={{ paddingLeft: \"40px\", paddingRight: \"60px\" }}\r\n                        className={\r\n                          (classes.heading, classes.paperProminantStyle)\r\n                        }\r\n                      >\r\n                        <Typography align=\"left\" variant=\"h6\">\r\n                          Employee Signature\r\n                        </Typography>\r\n                        <SignatureCanvas\r\n                          penColor=\"black\"\r\n                          ref={sigPad}\r\n                          canvasProps={{\r\n                            width: 500,\r\n                            height: 200,\r\n                            className: \"sigCanvas\",\r\n                          }}\r\n                        />\r\n                        <Grid\r\n                          container\r\n                          direction=\"row\"\r\n                          justify=\"space-between\"\r\n                          alignItems=\"baseline\"\r\n                          spacing={3}\r\n                        >\r\n                          <Grid item xs={3}></Grid>\r\n                          <Grid item xs={3}>\r\n                            <Button\r\n                              type=\"button\"\r\n                              className=\"col-12\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={clearSigPad}\r\n                            >\r\n                              Clear\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item xs={3}>\r\n                            <Button\r\n                              className=\"col-12\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={saveImage}\r\n                            >\r\n                              Save\r\n                            </Button>\r\n                          </Grid>\r\n                          <Grid item xs={3}></Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            {/* BUTTON Start */}\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"baseline\"\r\n              spacing={3}\r\n            >\r\n              <Grid item xs={3}></Grid>\r\n              <Grid item xs={3}>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"col-12\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    props.handler[1]();\r\n                  }}\r\n                >\r\n                  Back\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"col-12\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Save This & Next\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={3}></Grid>\r\n            </Grid>\r\n            {/* BUTTON End */}\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styleClasses from \"../Common/styleClasses\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Typography,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Accordion, Col, Container, Row } from \"react-bootstrap\";\r\nimport { update } from \"../services/updateApi\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport ReactHookFormSelect from \"./SubComponents/ReactHookFormSelect\";\r\nimport RadioQuestions from \"./SubComponents/RadioQuestions\";\r\nimport { reqBits, RequireError, states } from \"../Common/CommonVariables\";\r\nimport { useRef } from \"react\";\r\n\r\ntype Props = { data?: any; handler?: any };\r\n\r\nexport default function EmpApplicationForm7(props: Props) {\r\n  const classes = styleClasses.useStyles();\r\n  const Forms = useForm({\r\n    defaultValues: props.data,\r\n  });\r\n  const { register, handleSubmit, errors, control } = Forms;\r\n\r\n  const sigPad = useRef<any>();\r\n  let base64SignatureImage = \"\";\r\n\r\n  const clearSigPad = () => {\r\n    if (sigPad && sigPad.current) {\r\n      sigPad.current?.clear();\r\n      base64SignatureImage = \"\";\r\n    }\r\n  };\r\n\r\n  const saveImage = () => {\r\n    if (sigPad.current && !sigPad.current.isEmpty()) {\r\n      base64SignatureImage = sigPad.current\r\n        ?.getTrimmedCanvas()\r\n        .toDataURL(\"image/png\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    if (sigPad.current && sigPad.current.isEmpty()) return;\r\n    {\r\n      base64SignatureImage = sigPad.current\r\n        .getTrimmedCanvas()\r\n        .toDataURL(\"image/png\");\r\n    }\r\n    data.employeeSignature = base64SignatureImage;\r\n    data.user_name = props.data.user_name;\r\n    const resdata = await update(data);\r\n    console.log(\r\n      \"-------------------FORM 6 Submited Data and Response-------------------\"\r\n    );\r\n    console.log(data);\r\n    console.log(resdata);\r\n    // props.handler[0]();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container style={{ backgroundColor: \"#fafafa\" }}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"baseline\"\r\n            spacing={3}\r\n          >\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{ paddingLeft: \"40px\", paddingRight: \"60px\" }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={10}>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <b>\r\n                        Suggested Format: \"Release of Information Form -- 49 CFR\r\n                        Part 40 Drug and Alcohol Testing\"\r\n                        <br />\r\n                        Section I. To be completed by the new employer, signed\r\n                        by the employee, and transmitted to the previous\r\n                        employer:\r\n                      </b>\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={10}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"baseline\"\r\n                      spacing={3}\r\n                    >\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"employeePrintedName\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Employee Printed Name\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.employeePrintedName,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"employeeSSNNumber\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Employee SSN or ID Number\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.employeeSSNNumber,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={10}>\r\n                    <Typography align=\"justify\" variant=\"subtitle2\">\r\n                      I hereby authorize release of information from my\r\n                      Department of Transportation regulated drug and alcohol\r\n                      testing records by my previous employer, listed in Section\r\n                      I-B, to the employer listed in Section I-A. This release\r\n                      is in accordance with DOT Regulation 49 CFR Part 40,\r\n                      Section 40.25. I understand that information to be\r\n                      released in Section II-A by my previous employer, is\r\n                      limited to the following DOT-regulated testing items:\r\n                      <ol>\r\n                        <li>Alcohol tests with a result of 0.04 or higher;</li>\r\n                        <li>Verified positive drug tests;</li>\r\n                        <li>Refusals to be tested;</li>\r\n                        <li>\r\n                          Other violations of DOT agency drug and alcohol\r\n                          testing regulations;\r\n                        </li>\r\n                        <li>\r\n                          Information obtained from previous employers of a drug\r\n                          and alcohol rule violation;\r\n                        </li>\r\n                        <li>\r\n                          Documentation, if any, of completion of the\r\n                          return-to-duty process following a rule violation.\r\n                        </li>\r\n                      </ol>\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={10}>\r\n                    <Paper\r\n                      elevation={3}\r\n                      style={{ paddingLeft: \"40px\", paddingRight: \"60px\" }}\r\n                      className={(classes.heading, classes.paperProminantStyle)}\r\n                    >\r\n                      <Typography align=\"left\" variant=\"h6\">\r\n                        Employee Signature\r\n                      </Typography>\r\n                      <SignatureCanvas\r\n                        penColor=\"black\"\r\n                        ref={sigPad}\r\n                        canvasProps={{\r\n                          width: 500,\r\n                          height: 200,\r\n                          className: \"sigCanvas\",\r\n                        }}\r\n                      />\r\n                      <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"baseline\"\r\n                        spacing={3}\r\n                      >\r\n                        <Grid item xs={3}></Grid>\r\n                        <Grid item xs={3}>\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"col-12\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={clearSigPad}\r\n                          >\r\n                            Clear\r\n                          </Button>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                          <Button\r\n                            className=\"col-12\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={saveImage}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        </Grid>\r\n                        <Grid item xs={3}></Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={8}>\r\n                    <TextField\r\n                      name=\"employeeDate\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      type=\"date\"\r\n                      helperText=\"Employee Date\"\r\n                      className=\"col-12\"\r\n                      inputRef={register({\r\n                        required: {\r\n                          value: reqBits.employeeDate,\r\n                          message: RequireError,\r\n                        },\r\n                      })}\r\n                    ></TextField>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* I-A */}\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{\r\n                  paddingLeft: \"40px\",\r\n                  paddingRight: \"60px\",\r\n                  paddingBottom: \"60px\",\r\n                }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={10}>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <b>I-A.</b>\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={10}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"baseline\"\r\n                      spacing={3}\r\n                    >\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"newEmployeerName\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"New Employer Name\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.newEmployeerName,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"newEmployeerphone\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Phone\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.newEmployeerphone,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"newEmployeerFax\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Fax\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.newEmployeerFax,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"newEmployeedesignatedEmployeeReprsentative\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Designated Employer Representative\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value:\r\n                                reqBits.newEmployeedesignatedEmployeeReprsentative,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          className=\"col-12\"\r\n                          name=\"newEmployeerAddress\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Address\"\r\n                          error={\r\n                            errors.newEmployeerAddress == undefined\r\n                              ? false\r\n                              : true\r\n                          }\r\n                          helperText={\r\n                            errors.newEmployeerAddress &&\r\n                            errors.newEmployeerAddress?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.newEmployeerAddress,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          name=\"newEmployeerCity\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"City\"\r\n                          className=\"col-12\"\r\n                          error={\r\n                            errors.newEmployeerCity == undefined ? false : true\r\n                          }\r\n                          helperText={\r\n                            errors.newEmployeerCity &&\r\n                            errors.newEmployeerCity?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.newEmployeerCity,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <ReactHookFormSelect\r\n                          className=\"col-12\"\r\n                          nameVal=\"newEmployeerState\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          defaultValue={props.data?.newEmployeerState}\r\n                          label=\"State\"\r\n                          control={control}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {states.map(function (object: any, i: number) {\r\n                            return (\r\n                              <MenuItem value={object.value} key={i}>\r\n                                {object.value}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </ReactHookFormSelect>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          name=\"newEmployeerpostalCode\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Zip Code\"\r\n                          className=\"col-12\"\r\n                          error={\r\n                            errors.newEmployeerpostalCode == undefined\r\n                              ? false\r\n                              : true\r\n                          }\r\n                          helperText={\r\n                            errors.newEmployeerpostalCode &&\r\n                            errors.newEmployeerpostalCode?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.newEmployeerpostalCode,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* I-B */}\r\n            <Grid item xs={10} style={{ marginBottom: \"10px\" }}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{\r\n                  paddingLeft: \"40px\",\r\n                  paddingRight: \"60px\",\r\n                  paddingBottom: \"60px\",\r\n                }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={10}>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <b>I-B.</b>\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={10}>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"baseline\"\r\n                      spacing={3}\r\n                    >\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"prevEmployeerName\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"New Employer Name\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.prevEmployeerName,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"prevEmployeerphone\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Phone\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.prevEmployeerphone,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"prevEmployeerFax\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Fax\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.prevEmployeerFax,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <TextField\r\n                          name=\"prevEmployeedesignatedEmployeeReprsentative\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Designated Employer Representative\"\r\n                          className=\"col-12\"\r\n                          inputRef={register({\r\n                            required: {\r\n                              value:\r\n                                reqBits.prevEmployeedesignatedEmployeeReprsentative,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <TextField\r\n                          className=\"col-12\"\r\n                          name=\"prevEmployeerAddress\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Address\"\r\n                          error={\r\n                            errors.prevEmployeerAddress == undefined\r\n                              ? false\r\n                              : true\r\n                          }\r\n                          helperText={\r\n                            errors.prevEmployeerAddress &&\r\n                            errors.prevEmployeerAddress?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.prevEmployeerAddress,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          name=\"prevEmployeerCity\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"City\"\r\n                          className=\"col-12\"\r\n                          error={\r\n                            errors.prevEmployeerCity == undefined ? false : true\r\n                          }\r\n                          helperText={\r\n                            errors.prevEmployeerCity &&\r\n                            errors.prevEmployeerCity?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.prevEmployeerCity,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <ReactHookFormSelect\r\n                          className=\"col-12\"\r\n                          nameVal=\"prevEmployeerState\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          defaultValue={props.data?.prevEmployeerState}\r\n                          label=\"State\"\r\n                          control={control}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          {states.map(function (object: any, i: number) {\r\n                            return (\r\n                              <MenuItem value={object.value} key={i}>\r\n                                {object.value}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </ReactHookFormSelect>\r\n                      </Grid>\r\n                      <Grid item xs={4}>\r\n                        <TextField\r\n                          name=\"prevEmployeerpostalCode\"\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          type=\"text\"\r\n                          label=\"Zip Code\"\r\n                          className=\"col-12\"\r\n                          error={\r\n                            errors.prevEmployeerpostalCode == undefined\r\n                              ? false\r\n                              : true\r\n                          }\r\n                          helperText={\r\n                            errors.prevEmployeerpostalCode &&\r\n                            errors.prevEmployeerpostalCode?.message\r\n                          }\r\n                          inputRef={register({\r\n                            required: {\r\n                              value: reqBits.prevEmployeerpostalCode,\r\n                              message: RequireError,\r\n                            },\r\n                          })}\r\n                        ></TextField>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <Paper\r\n                elevation={3}\r\n                style={{\r\n                  paddingLeft: \"40px\",\r\n                  paddingRight: \"60px\",\r\n                  paddingBottom: \"60px\",\r\n                }}\r\n                className={(classes.heading, classes.paperProminantStyle)}\r\n              >\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"center\"\r\n                  alignItems=\"baseline\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={10}>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <b>\r\n                        Section II. To be completed by the previous employer and\r\n                        transmitted by mail or fax to the new employer.\r\n                      </b>\r\n                    </Typography>\r\n                    <Typography align=\"justify\" variant=\"subtitle2\">\r\n                      II-A. In the two years prior to the date of the employee’s\r\n                      signature (in Section I), for DOT-regulated testing ~\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <RadioQuestions\r\n                      id=\"employeeAlcoholTestRateHigher\"\r\n                      question=\"1. Did the employee have alcohol tests with a result of 0.04 or higher?\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      isReq={reqBits.employeeAlcoholTestRateHigher}\r\n                      defaultSelected={props.data.employeeAlcoholTestRateHigher}\r\n                    />\r\n                    <RadioQuestions\r\n                      id=\"employeeverifiedDrugTest\"\r\n                      question=\"2. Did the employee have veried positive drug tests?\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      isReq={reqBits.employeeverifiedDrugTest}\r\n                      defaultSelected={props.data.employeeverifiedDrugTest}\r\n                    />\r\n\r\n                    <RadioQuestions\r\n                      id=\"employeerefuseTest\"\r\n                      question=\"3. Did the employee refuse to be tested?\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      isReq={reqBits.employeerefuseTest}\r\n                      defaultSelected={props.data.employeerefuseTest}\r\n                    />\r\n\r\n                    <RadioQuestions\r\n                      id=\"employeeotherViolations\"\r\n                      question=\"4. Did the employee have other violations of DOT agency drug and alcohol testing regulations?\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      isReq={reqBits.employeeotherViolations}\r\n                      defaultSelected={props.data.employeeotherViolations}\r\n                    />\r\n\r\n                    <RadioQuestions\r\n                      id=\"prevEmployeeReportDrug\"\r\n                      question=\"5. Did a previous employer report a drug and alcohol rule violation to you?\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      isReq={reqBits.prevEmployeeReportDrug}\r\n                      defaultSelected={props.data.prevEmployeeReportDrug}\r\n                    />\r\n\r\n                    <RadioQuestions\r\n                      id=\"answeredYes\"\r\n                      question=\"6. If you answered “yes” to any of the above items, did the employee complete the return-to-duty process?\"\r\n                      optionList={[\"Yes\", \"No\"]}\r\n                      optionValue={[\"Yes\", \"No\"]}\r\n                      useForm={Forms}\r\n                      isReq={reqBits.answeredYes}\r\n                      defaultSelected={props.data.answeredYes}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Typography align=\"justify\" variant=\"subtitle2\">\r\n                      NOTE: If you answered “yes” to item 5, you must provide\r\n                      the previous employer’s report. If you answered “yes” to\r\n                      item 6, you must also transmit the appropriate\r\n                      return-to-duty documentation (e.g., SAP report(s),\r\n                      follow-up testing record).\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={10}>\r\n                    <Typography align=\"justify\" variant=\"body2\">\r\n                      <b>\r\n                        II-B. Name of person providing information in Section II\r\n                      </b>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"baseline\"\r\n                    spacing={3}\r\n                  >\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"nameOfPersonProvidingInformation\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        label=\"A:\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value: reqBits.nameOfPersonProvidingInformation,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"nameOfPersonProvidingInformationTitle\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        label=\"Title\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value:\r\n                              reqBits.nameOfPersonProvidingInformationTitle,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"nameOfPersonProvidingInformationPhone\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"text\"\r\n                        label=\"Phone #\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value:\r\n                              reqBits.nameOfPersonProvidingInformationPhone,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item xs={5}>\r\n                      <TextField\r\n                        name=\"nameOfPersonProvidingInformationDate\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        type=\"date\"\r\n                        helperText=\"Date\"\r\n                        className=\"col-12\"\r\n                        inputRef={register({\r\n                          required: {\r\n                            value: reqBits.nameOfPersonProvidingInformationDate,\r\n                            message: RequireError,\r\n                          },\r\n                        })}\r\n                      ></TextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* BUTTON Start */}\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  props.handler[1]();\r\n                }}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"col-12\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Save All\r\n              </Button>\r\n            </Grid>\r\n            {/* BUTTON End */}\r\n          </Grid>\r\n        </form>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { withStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { user_data } from \"./User\";\r\nimport SideBar from \"./SideBar\";\r\nimport NavbarCareer from \"./NavbarCareer\";\r\nimport Footer from \"./Footer\";\r\nimport { Container, Col, Row } from \"reactstrap\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport EmpApplicationForm1 from \"./EmpApplicationForm1\";\r\nimport EmpApplicationForm2 from \"./EmpApplicationForm2\";\r\nimport EmpApplicationForm3 from \"./EmpApplicationForm3\";\r\nimport EmpApplicationForm4 from \"./EmpApplicationForm4\";\r\nimport EmpApplicationForm5 from \"./EmpApplicationForm5\";\r\nimport EmpApplicationForm6 from \"./EmpApplicationForm6\";\r\nimport EmpApplicationForm7 from \"./EmpApplicationForm7\";\r\nimport DynamicAddition from \"./DynamicAddition/DynamicAddition\";\r\nimport {\r\n  states,\r\n  employmentHistoryDummyElement,\r\n  drivingExperienceDummyElement,\r\n  employmentAccidentHistoryDummyElement,\r\n} from \"../Common/CommonVariables\";\r\n\r\ntype EmploymentApplicationStates = {\r\n  // form1: boolean;\r\n  // form2: boolean;\r\n  formCounter: number;\r\n\r\n  // first_name: string;\r\n  // last_name: string;\r\n  // email: string;\r\n  // phone_number: string;\r\n  // dateofBirth: string;\r\n  // socialSecurity: string;\r\n  // address: string;\r\n  // city: string;\r\n  // state: string;\r\n  // zipCode: string;\r\n  // lastThreeYearResidenceCheck: boolean;\r\n  // addresses: Address[];\r\n  // resume?: File;\r\n  // startTime: string;\r\n  // hearAbout: string;\r\n  // eligibletoWorkInUnitedState: boolean;\r\n  // classAExperienceLevel: boolean;\r\n  // willingForDrugTest: boolean;\r\n  // errors: formErrors;\r\n  // open: boolean;\r\n};\r\n\r\ninterface EmploymentApplicationProps {\r\n  classes: any;\r\n}\r\n\r\nconst styles = (theme: Theme) => ({\r\n  root: {},\r\n});\r\n\r\nlet addr1 = {\r\n  lastYearAddress: \"\",\r\n  lastYearAddressCity: \"\",\r\n  lastYearAddressState: \"\",\r\n  lastYearAddressZipCode: \"\",\r\n  lastYearAddressfrom: \"\",\r\n  lastYearAddressTo: \"\",\r\n};\r\n\r\nlet debug = false;\r\n\r\nclass EmploymentApplication extends Component<\r\n  EmploymentApplicationProps,\r\n  EmploymentApplicationStates\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      formCounter: 1,\r\n    };\r\n    this.gotoNextForm = this.gotoNextForm.bind(this);\r\n    this.gotoPreviousForm = this.gotoPreviousForm.bind(this);\r\n    if (debug === true) {\r\n      addr1 = {\r\n        lastYearAddress: \"Default\",\r\n        lastYearAddressCity: \"Default\",\r\n        lastYearAddressState: \"Alaska\",\r\n        lastYearAddressZipCode: \"0000\",\r\n        lastYearAddressfrom: \"2018-01-01\",\r\n        lastYearAddressTo: \"2018-01-01\",\r\n      };\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    // let data = { ...this.context.data, addresses: [addr1] };\r\n    console.log(\"context\", this.context);\r\n    // this.context.data = this.context.data.data;\r\n    if (debug === true) {\r\n      this.context.data.addresses = [addr1];\r\n      this.context.data.employmentHistory = [employmentHistoryDummyElement];\r\n      this.context.data.employmentExperienceHistory = [\r\n        drivingExperienceDummyElement,\r\n      ];\r\n      this.context.data.employmentAccidentsHistory = [\r\n        employmentAccidentHistoryDummyElement,\r\n      ];\r\n    } else {\r\n    }\r\n    if (this.context.data.user_name) {\r\n      this.setState(this.context.data);\r\n    }\r\n  }\r\n\r\n  gotoNextForm() {\r\n    this.setState({\r\n      formCounter: this.state.formCounter + 1,\r\n    });\r\n  }\r\n\r\n  gotoPreviousForm() {\r\n    this.setState({\r\n      formCounter: this.state.formCounter - 1,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.context.data.user_name) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <NavbarCareer addLogout={true} />\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            {/* <div\r\n              className=\"col mySideBar\"\r\n              style={{ flexGrow: 0, paddingLeft: \"0px\", paddingRight: \"0px\" }}\r\n            >\r\n              <SideBar activeEmployment={false} />\r\n            </div> */}\r\n            <div className=\"col-12\" style={{ paddingTop: \"100px\" }}>\r\n              {this.state.formCounter === 1 ? (\r\n                <EmpApplicationForm1\r\n                  data={this.context.data}\r\n                  setData={this.context.setUserData}\r\n                  handler={this.gotoNextForm}\r\n                ></EmpApplicationForm1>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.state.formCounter === 2 ? (\r\n                <EmpApplicationForm2\r\n                  data={this.context.data}\r\n                  handler={[this.gotoNextForm, this.gotoPreviousForm]}\r\n                ></EmpApplicationForm2>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.state.formCounter === 3 ? (\r\n                <EmpApplicationForm3\r\n                  data={this.context.data}\r\n                  handler={[this.gotoNextForm, this.gotoPreviousForm]}\r\n                ></EmpApplicationForm3>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.state.formCounter === 4 ? (\r\n                <EmpApplicationForm4\r\n                  data={this.context.data}\r\n                  handler={[this.gotoNextForm, this.gotoPreviousForm]}\r\n                ></EmpApplicationForm4>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.state.formCounter === 5 ? (\r\n                <EmpApplicationForm5\r\n                  data={this.context.data}\r\n                  handler={[this.gotoNextForm, this.gotoPreviousForm]}\r\n                ></EmpApplicationForm5>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.state.formCounter === 6 ? (\r\n                <EmpApplicationForm6\r\n                  data={this.context.data}\r\n                  handler={[this.gotoNextForm, this.gotoPreviousForm]}\r\n                ></EmpApplicationForm6>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {this.state.formCounter == 7 ? (\r\n                <EmpApplicationForm7\r\n                  data={this.context.data}\r\n                  handler={[this.gotoNextForm, this.gotoPreviousForm]}\r\n                ></EmpApplicationForm7>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Footer />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nEmploymentApplication.contextType = user_data;\r\n\r\nexport default withStyles(styles, { withTheme: true })(EmploymentApplication);\r\n","import React, { Component, RefObject } from \"react\";\r\nimport { Collapse, Navbar as ReactStrapNavbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { Link } from \"react-scroll\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst links = [\r\n  { href: \"services\", text: \"Services\" },\r\n  { href: \"portfolio\", text: \"Portfolio\" },\r\n  { href: \"about\", text: \"About\" },\r\n  { href: \"team\", text: \"Team\" },\r\n  { href: \"contact\", text: \"Contact\" },\r\n  { href: \"/career\", text: \"Career Opportunities\" },\r\n];\r\n\r\ntype createNavItemProps = {\r\n  href: string;\r\n  text: string;\r\n};\r\n\r\nconst CreateNavItem = ({ href, text }: createNavItemProps) => (\r\n  <NavItem className=\"nav-item\">\r\n    {text != \"Career Opportunities\" ? (\r\n      <Link className=\"nav-link\" activeClass=\"active\" to={href} spy={true} smooth={true} duration={1000}>\r\n        {text}\r\n      </Link>\r\n    ) : (\r\n      <RouterLink className=\"nav-link\" to={href}>\r\n        {text}\r\n      </RouterLink>\r\n    )}\r\n  </NavItem>\r\n);\r\n\r\ntype NavbarState = {\r\n  isOpen: boolean;\r\n  backgroundColor: string;\r\n  paddingTop: string;\r\n  paddingBottom: string;\r\n};\r\n\r\nexport default class Navbar extends Component<{}, NavbarState> {\r\n  ref1: RefObject<HTMLElement>;\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.ref1 = React.createRef<HTMLElement>();\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      backgroundColor: \"transparent\",\r\n      paddingTop: \"1rem\",\r\n      paddingBottom: \"1rem\",\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  }\r\n  onScroll1 = () => {\r\n    let y = 1 + (window.scrollY || window.pageYOffset) / 150;\r\n    y = y < 1 ? 1 : y; // ensure y is always >= 1 (due to Safari's elastic scroll)\r\n    if (y > 5) {\r\n      this.setState({ ...this.state, backgroundColor: \"#212529\", paddingTop: \"0.5rem\", paddingBottom: \"0.5rem\" });\r\n    } else {\r\n      this.setState({ ...this.state, backgroundColor: \"transparent\", paddingTop: \"1rem\", paddingBottom: \"1rem\" });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.onScroll1, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.onScroll1, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactStrapNavbar\r\n          className=\"navbar-expand-lg navbar-dark fixed-top\"\r\n          id=\"mainNav\"\r\n          style={{\r\n            backgroundColor: this.state.backgroundColor,\r\n            paddingTop: this.state.paddingTop,\r\n            paddingBottom: this.state.paddingBottom,\r\n            paddingRight: \"5%\",\r\n          }}\r\n        >\r\n          <NavbarBrand>\r\n            <Link activeClass=\"active\" to=\"page-top\" spy={true} smooth={true} duration={1000}>\r\n              <img src=\"assets/img/navbar-logo.png\" alt=\"\" />\r\n            </Link>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle}></NavbarToggler>\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              {links.map((link) => (\r\n                <CreateNavItem href={link.href} text={link.text} key={link.href} />\r\n              ))}\r\n            </Nav>\r\n          </Collapse>\r\n        </ReactStrapNavbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport { UncontrolledCarousel } from \"reactstrap\";\r\n\r\nconst items = [\r\n  {\r\n    src: \"assets/img/trucks/4.jpeg\",\r\n    caption: \"IT'S NICE TO MEET YOU\",\r\n    header: \"Welcome To Our Team!\",\r\n    key: \"4\",\r\n  },\r\n  {\r\n    src: \"assets/img/trucks/5.jpeg\",\r\n    caption: \"IT'S NICE TO MEET YOU\",\r\n    header: \"Welcome To Our Team!\",\r\n    key: \"5\",\r\n  },\r\n  {\r\n    src: \"assets/img/trucks/6.jpeg\",\r\n    caption: \"IT'S NICE TO MEET YOU\",\r\n    header: \"Welcome To Our Team!\",\r\n    key: \"6\",\r\n  },\r\n];\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"\" id=\"page-top\">\r\n      <UncontrolledCarousel\r\n        items={items}\r\n        autoPlay={true}\r\n        className=\"myCarousel\"\r\n      />\r\n      <Link\r\n        className=\"btn btn-primary btn-xl\"\r\n        to=\"services\"\r\n        spy={true}\r\n        smooth={true}\r\n        duration={1000}\r\n      >\r\n        Tell Me More\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Services() {\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <section className=\"page-section\" id=\"services\">\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"section-heading text-uppercase\">Services</h2>\r\n                    <h3 className=\"section-subheading text-muted\">AWB Transport is a renowned, reliable, professional and quality driven company that operates 24 hours a day, 365 days a year on the west coast. Whether you need truckload, or distribution solutions, we offer a vast range of services as detailed below.</h3>\r\n                </div>\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-md-4\">\r\n                        <span className=\"fa-stack fa-4x\">\r\n                            <i className=\"fas fa-circle fa-stack-2x text-primary\"></i>\r\n                            <i className=\"fas fa-shopping-cart fa-stack-1x fa-inverse\"></i>\r\n                        </span>\r\n                        <h4 className=\"my-3\">TRUCKLOAD</h4>\r\n                        <p className=\"text-muted\">We have a wide range of truckload solutions. Whether you need local, regional, or long-haul service, we have your back.</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <span className=\"fa-stack fa-4x\">\r\n                            <i className=\"fas fa-circle fa-stack-2x text-primary\"></i>\r\n                            <i className=\"fas fa-laptop fa-stack-1x fa-inverse\"></i>\r\n                        </span>\r\n                        <h4 className=\"my-3\">INTERMODAL</h4>\r\n                        <p className=\"text-muted\">Enjoy the convenience of trucking as well as the cost advantage of rail with our intermodal service.</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <span className=\"fa-stack fa-4x\">\r\n                            <i className=\"fas fa-circle fa-stack-2x text-primary\"></i>\r\n                            <i className=\"fas fa-lock fa-stack-1x fa-inverse\"></i>\r\n                        </span>\r\n                        <h4 className=\"my-3\">CRITICAL CAPACITY</h4>\r\n                        <p className=\"text-muted\">Running short on time? You can rely on us to get your shipment there! We understand that time means money, and your critical need to get your shipment delivered on time. Our drivers are professionals with an understanding for the time-critical nature of highly-sensitive rush shipments.</p>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-md-4\">\r\n                        <span className=\"fa-stack fa-4x\">\r\n                            <i className=\"fas fa-circle fa-stack-2x text-primary\"></i>\r\n                            <i className=\"fas fa-shopping-cart fa-stack-1x fa-inverse\"></i>\r\n                        </span>\r\n                        <h4 className=\"my-3\">DEDICATED CAPACITY</h4>\r\n                        <p className=\"text-muted\">Our dedicated capacity service is dedicated towards you! It's almost like having your own private fleet basically. We run our fleet as if it was yours. You get a complete management team, core group of drivers and quality equipment at your disposal.</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <span className=\"fa-stack fa-4x\">\r\n                            <i className=\"fas fa-circle fa-stack-2x text-primary\"></i>\r\n                            <i className=\"fas fa-laptop fa-stack-1x fa-inverse\"></i>\r\n                        </span>\r\n                        <h4 className=\"my-3\">LOGISTICS</h4>\r\n                        <p className=\"text-muted\">We provide linehaul and logistics services for both corporations and manufactures who require superior handling, time-definite delivery, and also full-service logistics management.</p>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <span className=\"fa-stack fa-4x\">\r\n                            <i className=\"fas fa-circle fa-stack-2x text-primary\"></i>\r\n                            <i className=\"fas fa-lock fa-stack-1x fa-inverse\"></i>\r\n                        </span>\r\n                        <h4 className=\"my-3\">DISTRIBUTION</h4>\r\n                        <p className=\"text-muted\">Our warehousing and distribution center are located strategically in order to provide direct rail access. Which provides you the advantage of both time and cost savings.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function Portfolio() {\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <section className=\"page-section bg-light\" id=\"portfolio\">\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"section-heading text-uppercase\">Portfolio</h2>\r\n                    <h3 className=\"section-subheading text-muted\">Lorem ipsum dolor sit amet consectetur.</h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-sm-6 mb-4\">\r\n                        <div className=\"portfolio-item\">\r\n                            <a className=\"portfolio-link\" data-toggle=\"modal\" href=\"#portfolioModal1\">\r\n                                <div className=\"portfolio-hover\">\r\n                                    <div className=\"portfolio-hover-content\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                </div>\r\n                                <img className=\"img-fluid\" src=\"assets/img/portfolio/01-thumbnail.jpg\" alt=\"\" />\r\n                            </a>\r\n                            <div className=\"portfolio-caption\">\r\n                                <div className=\"portfolio-caption-heading\">Threads</div>\r\n                                <div className=\"portfolio-caption-subheading text-muted\">Illustration</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-sm-6 mb-4\">\r\n                        <div className=\"portfolio-item\">\r\n                            <a className=\"portfolio-link\" data-toggle=\"modal\" href=\"#portfolioModal2\">\r\n                                <div className=\"portfolio-hover\">\r\n                                    <div className=\"portfolio-hover-content\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                </div>\r\n                                <img className=\"img-fluid\" src=\"assets/img/portfolio/02-thumbnail.jpg\" alt=\"\" />\r\n                            </a>\r\n                            <div className=\"portfolio-caption\">\r\n                                <div className=\"portfolio-caption-heading\">Explore</div>\r\n                                <div className=\"portfolio-caption-subheading text-muted\">Graphic Design</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-sm-6 mb-4\">\r\n                        <div className=\"portfolio-item\">\r\n                            <a className=\"portfolio-link\" data-toggle=\"modal\" href=\"#portfolioModal3\">\r\n                                <div className=\"portfolio-hover\">\r\n                                    <div className=\"portfolio-hover-content\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                </div>\r\n                                <img className=\"img-fluid\" src=\"assets/img/portfolio/03-thumbnail.jpg\" alt=\"\" />\r\n                            </a>\r\n                            <div className=\"portfolio-caption\">\r\n                                <div className=\"portfolio-caption-heading\">Finish</div>\r\n                                <div className=\"portfolio-caption-subheading text-muted\">Identity</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-sm-6 mb-4 mb-lg-0\">\r\n                        <div className=\"portfolio-item\">\r\n                            <a className=\"portfolio-link\" data-toggle=\"modal\" href=\"#portfolioModal4\">\r\n                                <div className=\"portfolio-hover\">\r\n                                    <div className=\"portfolio-hover-content\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                </div>\r\n                                <img className=\"img-fluid\" src=\"assets/img/portfolio/04-thumbnail.jpg\" alt=\"\" />\r\n                            </a>\r\n                            <div className=\"portfolio-caption\">\r\n                                <div className=\"portfolio-caption-heading\">Lines</div>\r\n                                <div className=\"portfolio-caption-subheading text-muted\">Branding</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-sm-6 mb-4 mb-sm-0\">\r\n                        <div className=\"portfolio-item\">\r\n                            <a className=\"portfolio-link\" data-toggle=\"modal\" href=\"#portfolioModal5\">\r\n                                <div className=\"portfolio-hover\">\r\n                                    <div className=\"portfolio-hover-content\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                </div>\r\n                                <img className=\"img-fluid\" src=\"assets/img/portfolio/05-thumbnail.jpg\" alt=\"\" />\r\n                            </a>\r\n                            <div className=\"portfolio-caption\">\r\n                                <div className=\"portfolio-caption-heading\">Southwest</div>\r\n                                <div className=\"portfolio-caption-subheading text-muted\">Website Design</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-sm-6\">\r\n                        <div className=\"portfolio-item\">\r\n                            <a className=\"portfolio-link\" data-toggle=\"modal\" href=\"#portfolioModal6\">\r\n                                <div className=\"portfolio-hover\">\r\n                                    <div className=\"portfolio-hover-content\"><i className=\"fas fa-plus fa-3x\"></i></div>\r\n                                </div>\r\n                                <img className=\"img-fluid\" src=\"assets/img/portfolio/06-thumbnail.jpg\" alt=\"\" />\r\n                            </a>\r\n                            <div className=\"portfolio-caption\">\r\n                                <div className=\"portfolio-caption-heading\">Window</div>\r\n                                <div className=\"portfolio-caption-subheading text-muted\">Photography</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <section className=\"page-section\" id=\"about\">\r\n        <div className=\"container\">\r\n          <div className=\"text-center\">\r\n            <h2 className=\"section-heading text-uppercase\">About</h2>\r\n            <h3 className=\"section-subheading text-muted\">\r\n              LEADERS IN QUALITY TRANSPORTATION\r\n            </h3>\r\n          </div>\r\n          <ul className=\"timeline\">\r\n            <li>\r\n              <div className=\"timeline-image\">\r\n                <img\r\n                  className=\"rounded-circle img-fluid\"\r\n                  src=\"assets/img/about/1.jpg\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"timeline-panel\">\r\n                <div className=\"timeline-heading\">\r\n                  <h4>2009-2011</h4>\r\n                  <h4 className=\"subheading\">Our Humble Beginnings</h4>\r\n                </div>\r\n                <div className=\"timeline-body\">\r\n                  <p className=\"text-muted\">\r\n                    At AWB Transport, we have understand the importance and\r\n                    value of being a reliable, professional and quality driven\r\n                    shipping provider for our customers. Renown for our services\r\n                    and recognized for quality, we will continue to reinforce\r\n                    our commitment to these values.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"timeline-inverted\">\r\n              <div className=\"timeline-image\">\r\n                <img\r\n                  className=\"rounded-circle img-fluid\"\r\n                  src=\"assets/img/about/2.jpg\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"timeline-panel\">\r\n                <div className=\"timeline-heading\">\r\n                  <h4>March 2011</h4>\r\n                  <h4 className=\"subheading\">An Agency is Born</h4>\r\n                </div>\r\n                <div className=\"timeline-body\">\r\n                  <p className=\"text-muted\">\r\n                    We are glad you have made a choice to consider us to handle\r\n                    your shipping needs. You can feel confident that your\r\n                    requirements and fullest satisfaction have been, and will\r\n                    always be our main concern and priority - 24 hours a day,\r\n                    365 days a year.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"timeline-image\">\r\n                <img\r\n                  className=\"rounded-circle img-fluid\"\r\n                  src=\"assets/img/about/3.jpg\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"timeline-panel\">\r\n                <div className=\"timeline-heading\">\r\n                  <h4>December 2012</h4>\r\n                  <h4 className=\"subheading\">Transition to Full Service</h4>\r\n                </div>\r\n                <div className=\"timeline-body\">\r\n                  <p className=\"text-muted\">\r\n                    We are glad you have made a choice to consider us to handle\r\n                    your shipping needs. You can feel confident that your\r\n                    requirements and fullest satisfaction have been, and will\r\n                    always be our main concern and priority - 24 hours a day,\r\n                    365 days a year.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"timeline-inverted\">\r\n              <div className=\"timeline-image\">\r\n                <img\r\n                  className=\"rounded-circle img-fluid\"\r\n                  src=\"assets/img/about/4.jpeg\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"timeline-panel\">\r\n                <div className=\"timeline-heading\">\r\n                  <h4>July 2014</h4>\r\n                  <h4 className=\"subheading\">Phase Two Expansion</h4>\r\n                </div>\r\n                <div className=\"timeline-body\">\r\n                  <p className=\"text-muted\">\r\n                    We are glad you have made a choice to consider us to handle\r\n                    your shipping needs. You can feel confident that your\r\n                    requirements and fullest satisfaction have been, and will\r\n                    always be our main concern and priority - 24 hours a day,\r\n                    365 days a year.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                className=\"timeline-image\"\r\n                activeClass=\"active\"\r\n                to=\"contact\"\r\n                spy={true}\r\n                smooth={true}\r\n                duration={1000}\r\n                style={{ textDecoration: \"None\", cursor: \"pointer\" }}\r\n              >\r\n                <h4>\r\n                  Be Part\r\n                  <br />\r\n                  Of Our\r\n                  <br />\r\n                  Story!\r\n                </h4>\r\n              </Link>\r\n              <div className=\"timeline-panel\">\r\n                <div className=\"timeline-heading\">\r\n                  <h4></h4>\r\n                  <h4 className=\"subheading\"></h4>\r\n                </div>\r\n                <div className=\"timeline-body\">\r\n                  <p className=\"text-muted\">\r\n                    To learn more about our company and transportation services,\r\n                    please contact us today. You can request a freight quote for\r\n                    any trucking service by completing our online form, or for\r\n                    immediate service, please call our staff directly!\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nexport default function Team() {\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <section className=\"page-section\" id=\"team\">\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"section-heading color-white\">Join Our Team</h2>\r\n                    <h3 className=\"section-subheading color-white\">We're on the look for adding more, customer-focused drivers to our team.  If this is you, find out what it takes and how to apply here.</h3>\r\n                </div>\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-lg-10\">\r\n                       <img src=\"assets/img/team/team1.jpg\" alt=\"\" width=\"90%\" />\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n                        <h3 className=\"color-white\">100,000 + <br/> Loads Successfully Delivered</h3>\r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <h3 className=\"color-white\">250+ <br/> Satisfied Clients</h3>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <div className=\"row text-center\" style={{marginTop:\"50px\"}} >\r\n                    <div className=\"col-lg-8 mx-auto text-center\">\r\n                        <Link className=\"btn btn-primary btn-xl\" to=\"/career\">Apply To Be A Driver</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function Clients() {\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <div className=\"py-5\">\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"section-heading text-uppercase\">PARTNERSHIPS</h2>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 col-sm-6 my-3\">\r\n                        <a href=\"#!\"><img className=\"img-fluid d-block mx-auto\" src=\"assets/img/partners/California.jpg\" alt=\"\" /></a>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-6 my-3\">\r\n                         <a href=\"#!\"><img className=\"img-fluid d-block mx-auto\" src=\"assets/img/partners/AmericanTruckingAssociations_logo.jpg\" alt=\"\" /></a>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-6 my-3\">\r\n                         <a href=\"#!\"><img className=\"img-fluid d-block mx-auto\" src=\"assets/img/partners/smart_way.jpg\" alt=\"\" /></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }","import React, { useState } from 'react';\r\n\r\nexport default function Contacts() {\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <section className=\"page-section\" id=\"contact\">\r\n            <div className=\"container\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"section-heading\">Contact Us</h2>\r\n                    <h3 className=\"section-subheading text-muted\">For any inquiries, questions or commendations, please call: 916-248-1008 or fill out the following form.</h3>\r\n                </div>\r\n                <form id=\"contactForm\" name=\"sentMessage\" >\r\n                    <div className=\"row align-items-stretch mb-5\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control\" id=\"name\" type=\"text\" placeholder=\"Your Name *\" required data-validation-required-message=\"Please enter your name.\" />\r\n                                <p className=\"help-block text-danger\"></p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control\" id=\"email\" type=\"email\" placeholder=\"Your Email *\" required data-validation-required-message=\"Please enter your email address.\" />\r\n                                <p className=\"help-block text-danger\"></p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input className=\"form-control\" id=\"phone\" type=\"tel\" placeholder=\"Your Phone *\" required data-validation-required-message=\"Please enter your phone number.\" />\r\n                                <p className=\"help-block text-danger\"></p>\r\n                            </div>\r\n                            <div className=\"form-group mb-md-0\">\r\n                                <textarea className=\"form-control\" id=\"message\" placeholder=\"Your Message *\" required data-validation-required-message=\"Please enter a message.\" style={{height:\"300px\"}}></textarea>\r\n                                <p className=\"help-block text-danger\"></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <img src=\"assets/img/awbfulllogo.jpg\" alt=\"\"/>\r\n                                <div className=\"myDiv\">\r\n                                    <p>AWB TRANSPORT 5751<br/>La Venta Way Sacramento, CA 95835<br/>Way Sacramento, CA 95835</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"myDiv\">\r\n                                <h6>Employment</h6>\r\n                                <p>To apply for a job with AWB Transport,<br/>please send your resume to:<br/>awbtransportinc@gmail.com</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <div id=\"success\"></div>\r\n                        <button className=\"btn btn-primary myContactButton\" id=\"sendMessageButton\" type=\"submit\">Send Message</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Navbar from \"./MainNavBar\";\r\nimport Header from \"./Header\";\r\nimport Services from \"./Services\";\r\nimport Portfolio from \"./Portfolio\";\r\nimport About from \"./About\";\r\nimport Team from \"./Team\";\r\nimport Clients from \"./Clients\";\r\nimport Contacts from \"./Contacts\";\r\nimport Footer from \"./Footer\";\r\n\r\nexport default function MainPage() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Header />\r\n      <Services />\r\n      <Portfolio />\r\n      <About />\r\n      <Team />\r\n      <Clients />\r\n      <Contacts />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\n\r\nexport default function ApplyDriver() {\r\n\r\n  return (\r\n    <section className=\"page-section\" id=\"services\">\r\n        <div className=\"container\">\r\n            <div className=\"text-center\">\r\n                <h2 className=\"section-heading applyDriver\">Apply To Be A Driver</h2>\r\n                <hr className=\"myHr\" />\r\n            </div>\r\n            <div className=\"row \">\r\n                <div className=\"col-md-12\">\r\n                    <h4 className=\"my_3_1\" >What You'll Do:</h4>\r\n                    <p className=\"my_3_1\">AWB TRANSPORTATION is Hiring CDL-A Drivers in the Sacramento, CA Area!  At AWB, we strive to maintain a flexible, \r\n                    stress-free work environment where drivers feel valued and have enough work-life balance to spend time with family and maintain their passion \r\n                    for logging hours on the road. We have immediate openings for full-time drivers. If you’re looking to find a home on the road, join the AWB \r\n                    Transportation team today!</p>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h4 className=\"my_3_1\" >What You’ll Get:</h4>\r\n                    <p className=\"my_3_1\">Our drivers enjoy a great balance between work and life, as well as COMPETITIVE pay.  \r\n                    As a professional truck driver with AWB, you can enjoy the following benefits:</p>\r\n                    <ul>\r\n                        <li className=\"my_3_1\">Starting pay up to $0.62 per mile for teams and $0.45-$0.50 per mile DOE</li>\r\n                        <li className=\"my_3_1\">Activity, Training, and Mileage Pay from Day 1 </li>\r\n                        <li className=\"my_3_1\">Quarterly Safe Driving Bonuses</li>\r\n                        <li className=\"my_3_1\">No Loading or Unloading Freight</li>\r\n                        <li className=\"my_3_1\">Home Once a Week as Well as Reset Hours Not Spent on the Road </li>\r\n                        <li className=\"my_3_1\">Opportunity to Earn Up to 21 Paid Days Off in Your First Year</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h4 className=\"my_3_1\" >Minimum Qualifications:</h4>\r\n                    <ul>\r\n                        <li className=\"my_3_1\">Must be 25 years of age or over, with social security enrollment.</li>\r\n                        <li className=\"my_3_1\">A Class A Commercial Driver's License (Hazmat or Tanker endorsement a plus)</li>\r\n                        <li className=\"my_3_1\">A DOT cleared background check</li>\r\n                        <li className=\"my_3_1\">A minimum of 12 months experience working in a full-time Class A tractor/trailer driving position in the previous 3 years.</li>\r\n                        <li className=\"my_3_1\">No more than two (2) moving violations while operating a personal or commercial motor vehicle in the last three (3) years. </li>\r\n                        <li className=\"my_3_1\">No serious traffic violations, DUI's, DWI's, or OUI's</li>\r\n                        <li className=\"my_3_1\">TWIC card is a plus (optional).</li>\r\n                        <li className=\"my_3_1\">Must maintain full PPE (i.e. FRC’s, hard hat, safety glasses, steel toe boots, safety vest). </li>\r\n                        <li className=\"my_3_1\">Must check for all required securement equipment is retained for your type of truck. </li>\r\n                        <li className=\"my_3_1\">Must be able to read a key map. </li>\r\n                        <li className=\"my_3_1\">Great customer service skills.</li>\r\n                    </ul>\r\n                </div>\r\n                <br /> \r\n                <div className=\"col-md-12\">\r\n                    <p className=\"my_3_1\" style={{fontWeight:\"bold\"}} >We believe skills can be taught, but the right attitude and personality are hard to find. We are always looking for \r\n                    the right person and the right fit for AWB Transport.  If this is a description of you, then please apply!</p>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <RouterLink className=\"btn btn-primary btn-md btn-apply-now\" to=\"/register\">Apply Now</RouterLink> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n  )\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport NavbarCareer from './NavbarCareer';\r\nimport ApplyDriver from './ApplyDriver';\r\nimport Footer from './Footer';\r\n\r\nexport default function Career() {\r\n  return (\r\n    <>\r\n    <NavbarCareer addLogout={false} />\r\n        <ApplyDriver/>\r\n    <Footer/>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React, {Component, useContext} from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { user_data } from \"./User\";\r\n\r\n\r\nclass Logout extends Component<{}, {}> {\r\n    componentDidMount(){\r\n        this.context.setUserData({});\r\n        console.log(\"context\", this.context);\r\n    }\r\n    render() {\r\n        if(!this.context.data.user_name) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        return (<div>logging Out</div>)\r\n    }\r\n}\r\nLogout.contextType = user_data;\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create([\"margin\", \"width\"], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function LayoutWithResposiveNavBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <CssBaseline /> */}\r\n      {/* <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Persistent drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        {/* <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div> */}\r\n        <Divider />\r\n        <List>\r\n          {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna\r\n          aliqua. Rhoncus dolor purus non enim praesent elementum facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper\r\n          risus in hendrerit gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id donec\r\n          ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\r\n          integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate eu scelerisque felis imperdiet proin fermentum leo.\r\n          Mauris commodo quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget arcu\r\n          dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem donec massa sapien faucibus et\r\n          molestie ac.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla facilisi etiam dignissim diam.\r\n          Pulvinar elementum integer enim neque volutpat ac tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus\r\n          sit amet volutpat consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed vulputate\r\n          odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In hendrerit gravida rutrum quisque non\r\n          tellus orci ac. Pellentesque nec nam aliquam sem et tortor. Habitant morbi tristique senectus et. Adipiscing elit duis\r\n          tristique sollicitudin nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas accumsan\r\n          lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport { user_data as User } from \"./Component/User\";\r\nimport SignUp from \"./Component/SignUp\";\r\nimport LogIn from \"./Component/SignIn\";\r\nimport EmploymentApplication from \"./Component/EmploymentApplicationForm\";\r\n\r\nimport \"./App.css\";\r\nimport MainPage from \"./Component/MainPage\";\r\nimport Career from \"./Component/CareerOpportunities\";\r\nimport Logout from \"./Component/logout\";\r\nimport LayoutWithResposiveNavBar from \"./Component/LayoutWithResposiveNavBar\";\r\n\r\nfunction App() {\r\n  const [user_data, setuserData] = useState({});\r\n  const setUserData = (data: any) => {\r\n    setuserData(data);\r\n  };\r\n\r\n  return (\r\n    <User.Provider value={{ data: user_data, setUserData }}>\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <MainPage />\r\n            </Route>\r\n            <Route exact path=\"/career\">\r\n              <Career />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n              <SignUp />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n              <LogIn />\r\n            </Route>\r\n            <Route exact path=\"/logout\">\r\n              <Logout />\r\n            </Route>\r\n            <Route exact path=\"/tempNewComponent\">\r\n              <LayoutWithResposiveNavBar />\r\n            </Route>\r\n            <Route exact path=\"/AwbTransportEmploymentApplication\">\r\n              <EmploymentApplication />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </User.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}